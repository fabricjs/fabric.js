{"version":3,"file":"index.min.mjs","sources":["../../extensions/aligning_guidelines/index.ts"],"sourcesContent":["import type {\n  BasicTransformEvent,\n  Canvas,\n  FabricObject,\n  TBBox,\n  TPointerEvent,\n} from 'fabric';\nimport { Point, util } from 'fabric';\nimport {\n  collectHorizontalPoint,\n  collectVerticalPoint,\n} from './util/collect-point';\nimport {\n  drawHorizontalLine,\n  drawPointList,\n  drawVerticalLine,\n} from './util/draw';\nimport { getObjectsByTarget } from './util/get-objects-by-target';\nimport { collectLine } from './util/collect-line';\nimport type { HorizontalLine, VerticalLine } from './typedefs';\nimport { AligningLineConfig } from './constant';\n\ntype TransformEvent = BasicTransformEvent<TPointerEvent> & {\n  target: FabricObject;\n};\ntype AlignOptions = Partial<typeof AligningLineConfig>;\nexport function initAligningGuidelines(\n  canvas: Canvas,\n  options: AlignOptions = {}\n) {\n  Object.assign(AligningLineConfig, options);\n\n  const horizontalLines = new Set<string>();\n  const verticalLines = new Set<string>();\n  let onlyDrawPoint = false;\n  const cacheMap = new Map<string, [TBBox, Point[]]>();\n\n  const getCaCheMapValue = (object: FabricObject) => {\n    const cacheKey = [\n      object.calcTransformMatrix().toString(),\n      object.width,\n      object.height,\n    ].join();\n    const cacheValue = cacheMap.get(cacheKey);\n    if (cacheValue) return cacheValue;\n    const coords = object.getCoords();\n    const rect = util.makeBoundingBoxFromPoints(coords);\n    const value: [TBBox, Point[]] = [rect, coords];\n    cacheMap.set(cacheKey, value);\n    return value;\n  };\n\n  function moving(e: TransformEvent) {\n    const activeObject = e.target;\n    activeObject.setCoords();\n    onlyDrawPoint = false;\n    verticalLines.clear();\n    horizontalLines.clear();\n\n    const objects = getObjectsByTarget(activeObject);\n    const activeObjectRect = activeObject.getBoundingRect();\n\n    for (const object of objects) {\n      const objectRect = getCaCheMapValue(object)[0];\n      const { vLines, hLines } = collectLine({\n        activeObject,\n        activeObjectRect,\n        objectRect,\n      });\n      vLines.forEach((o) => {\n        verticalLines.add(JSON.stringify(o));\n      });\n      hLines.forEach((o) => {\n        horizontalLines.add(JSON.stringify(o));\n      });\n    }\n  }\n\n  function scalingOrResizing(e: TransformEvent) {\n    // br bl tr tl mb ml mt mr\n    const activeObject = e.target;\n    activeObject.setCoords();\n    const isScale = String(e.transform.action).startsWith('scale');\n    verticalLines.clear();\n    horizontalLines.clear();\n\n    const objects = getObjectsByTarget(activeObject);\n    let corner = e.transform.corner;\n    if (activeObject.flipX) corner = corner.replace('l', 'r').replace('r', 'l');\n    if (activeObject.flipY) corner = corner.replace('t', 'b').replace('b', 't');\n    let index = ['tl', 'tr', 'br', 'bl', 'mt', 'mr', 'mb', 'ml'].indexOf(\n      corner\n    );\n    if (index == -1) return;\n    onlyDrawPoint = index > 3;\n    if (onlyDrawPoint) {\n      const angle = activeObject.getTotalAngle();\n      if (angle % 90 != 0) return;\n      index -= 4;\n    }\n    let point = activeObject.getCoords()[index];\n    for (const object of objects) {\n      const [rect, coords] = getCaCheMapValue(object);\n      const center = new Point(\n        rect.left + rect.width / 2,\n        rect.top + rect.height / 2\n      );\n      const list = [...coords, center];\n      const props = { activeObject, point, list, isScale, index };\n      const vLines = collectVerticalPoint(props);\n      const hLines = collectHorizontalPoint(props);\n      vLines.forEach((o) => {\n        verticalLines.add(JSON.stringify(o));\n      });\n      hLines.forEach((o) => {\n        horizontalLines.add(JSON.stringify(o));\n      });\n      if (vLines.length || hLines.length)\n        point = activeObject.getCoords()[index];\n    }\n  }\n\n  function beforeRender() {\n    canvas.clearContext(canvas.contextTop);\n  }\n  function afterRender() {\n    if (onlyDrawPoint) {\n      const list: Array<VerticalLine | HorizontalLine> = [];\n      for (const v of verticalLines) list.push(JSON.parse(v));\n      for (const h of horizontalLines) list.push(JSON.parse(h));\n      drawPointList(canvas, list);\n    } else {\n      for (const v of verticalLines) drawVerticalLine(canvas, JSON.parse(v));\n      for (const h of horizontalLines)\n        drawHorizontalLine(canvas, JSON.parse(h));\n    }\n  }\n  function mouseUp() {\n    verticalLines.clear();\n    horizontalLines.clear();\n    cacheMap.clear();\n    canvas.requestRenderAll();\n  }\n\n  canvas.on('object:resizing', scalingOrResizing);\n  canvas.on('object:scaling', scalingOrResizing);\n  canvas.on('object:moving', moving);\n  canvas.on('before:render', beforeRender);\n  canvas.on('after:render', afterRender);\n  canvas.on('mouse:up', mouseUp);\n\n  return () => {\n    canvas.off('object:resizing', scalingOrResizing);\n    canvas.off('object:scaling', scalingOrResizing);\n    canvas.off('object:moving', moving);\n    canvas.off('before:render', beforeRender);\n    canvas.off('after:render', afterRender);\n    canvas.off('mouse:up', mouseUp);\n  };\n}\n"],"names":["initAligningGuidelines","canvas","options","arguments","length","undefined","Object","assign","AligningLineConfig","horizontalLines","Set","verticalLines","onlyDrawPoint","cacheMap","Map","getCaCheMapValue","object","cacheKey","calcTransformMatrix","toString","width","height","join","cacheValue","get","coords","getCoords","value","util","makeBoundingBoxFromPoints","set","moving","e","activeObject","target","setCoords","clear","objects","getObjectsByTarget","activeObjectRect","getBoundingRect","objectRect","vLines","hLines","collectLine","forEach","o","add","JSON","stringify","scalingOrResizing","isScale","String","transform","action","startsWith","corner","flipX","replace","flipY","index","indexOf","getTotalAngle","point","rect","props","list","Point","left","top","collectVerticalPoint","collectHorizontalPoint","beforeRender","clearContext","contextTop","afterRender","v","push","parse","h","drawPointList","drawVerticalLine","drawHorizontalLine","mouseUp","requestRenderAll","on","off"],"mappings":"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"}