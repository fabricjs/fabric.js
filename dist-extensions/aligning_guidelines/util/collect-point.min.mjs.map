{"version":3,"file":"collect-point.min.mjs","sources":["../../../extensions/aligning_guidelines/util/collect-point.ts"],"sourcesContent":["import type { FabricObject, Point, TOriginX, TOriginY } from 'fabric';\nimport { AligningLineConfig } from '../constant';\nimport { getDistance } from './basic';\n\ntype CollectPointProps = {\n  activeObject: FabricObject;\n  point: Point;\n  list: Point[];\n  isScale: boolean;\n  index: number;\n};\nconst originXArr: TOriginX[] = ['left', 'center', 'right'];\nconst originYArr: TOriginY[] = ['top', 'center', 'bottom'];\n\nexport function collectVerticalPoint(props: CollectPointProps) {\n  const aligningLineMargin = AligningLineConfig.margin;\n  const { activeObject, isScale, index, point, list } = props;\n  const { dis, arr } = getDistanceList(point, list, 'x');\n  const margin = aligningLineMargin / (activeObject.canvas?.getZoom() ?? 1);\n  if (dis > margin) return [];\n  let v = arr[arr.length - 1].x - point.x;\n  const dir = index == 0 || index == 3 ? -1 : 1;\n  v *= dir;\n\n  const { width, scaleX, left } = activeObject;\n  const dim = activeObject._getTransformedDimensions();\n  const sx = (v + dim.x) / dim.x;\n  if (isScale) activeObject.set('scaleX', scaleX * sx);\n  else activeObject.set('width', width * sx);\n  const dArr = [0, (v / 2) * dir, v * dir];\n  if (dir < 0) dArr.reverse();\n  const d = dArr[originXArr.indexOf(activeObject.originX)];\n  activeObject.set('left', left + d);\n  activeObject.setCoords();\n  return arr.map((item) => ({\n    x: item.x,\n    y1: item.y,\n    y2: point.y,\n  }));\n}\n\nexport function collectHorizontalPoint(props: CollectPointProps) {\n  const aligningLineMargin = AligningLineConfig.margin;\n  const { activeObject, isScale, index, point, list } = props;\n  const { dis, arr } = getDistanceList(point, list, 'y');\n  const margin = aligningLineMargin / (activeObject.canvas?.getZoom() ?? 1);\n  if (dis > margin) return [];\n  let v = arr[arr.length - 1].y - point.y;\n  const dir = index < 2 ? -1 : 1;\n  v *= dir;\n\n  const { height, scaleY, top } = activeObject;\n  const dim = activeObject._getTransformedDimensions();\n  const sy = (v + dim.y) / dim.y;\n  if (isScale) activeObject.set('scaleY', scaleY * sy);\n  else activeObject.set('height', height * sy);\n  const dArr = [0, (v / 2) * dir, v * dir];\n  if (dir < 0) dArr.reverse();\n  const d = dArr[originYArr.indexOf(activeObject.originY)];\n  activeObject.set('top', top + d);\n  activeObject.setCoords();\n  return arr.map((item) => ({\n    y: item.y,\n    x1: item.x,\n    x2: point.x,\n  }));\n}\n\nfunction getDistanceList(point: Point, list: Point[], type: 'x' | 'y') {\n  let dis = Infinity;\n  let arr: Point[] = [];\n  for (const item of list) {\n    const v = getDistance(point[type], item[type]);\n    if (dis > v) {\n      arr = [];\n      dis = v;\n    }\n    if (dis == v) {\n      arr.push(item);\n    }\n  }\n  return { dis, arr };\n}\n"],"names":["originXArr","originYArr","collectVerticalPoint","props","_activeObject$canvas$","_activeObject$canvas","aligningLineMargin","AligningLineConfig","margin","activeObject","isScale","index","point","list","dis","arr","getDistanceList","canvas","getZoom","v","length","x","dir","width","scaleX","left","dim","_getTransformedDimensions","sx","set","dArr","reverse","d","indexOf","originX","setCoords","map","item","y1","y","y2","collectHorizontalPoint","_activeObject$canvas$2","_activeObject$canvas2","height","scaleY","top","sy","originY","x1","x2","type","Infinity","getDistance","push"],"mappings":"uGAWA,MAAMA,EAAyB,CAAC,OAAQ,SAAU,SAC5CC,EAAyB,CAAC,MAAO,SAAU,UAE1C,SAASC,EAAqBC,GAA0B,IAAAC,EAAAC,EAC7D,MAAMC,EAAqBC,EAAmBC,QACxCC,aAAEA,EAAYC,QAAEA,EAAOC,MAAEA,EAAKC,MAAEA,EAAKC,KAAEA,GAASV,GAChDW,IAAEA,EAAGC,IAAEA,GAAQC,EAAgBJ,EAAOC,EAAM,KAElD,GAAIC,EADWR,GAAoDF,QAAlCA,EAAuB,QAAvBC,EAAII,EAAaQ,cAAbZ,IAAmBA,OAAnBA,EAAAA,EAAqBa,iBAASd,IAAAA,EAAAA,EAAI,GACrD,MAAO,GACzB,IAAIe,EAAIJ,EAAIA,EAAIK,OAAS,GAAGC,EAAIT,EAAMS,EACtC,MAAMC,EAAe,GAATX,GAAuB,GAATA,GAAc,EAAI,EAC5CQ,GAAKG,EAEL,MAAMC,MAAEA,EAAKC,OAAEA,EAAMC,KAAEA,GAAShB,EAC1BiB,EAAMjB,EAAakB,4BACnBC,GAAMT,EAAIO,EAAIL,GAAKK,EAAIL,EACzBX,EAASD,EAAaoB,IAAI,SAAUL,EAASI,GAC5CnB,EAAaoB,IAAI,QAASN,EAAQK,GACvC,MAAME,EAAO,CAAC,EAAIX,EAAI,EAAKG,EAAKH,EAAIG,GAChCA,EAAM,GAAGQ,EAAKC,UAClB,MAAMC,EAAIF,EAAK9B,EAAWiC,QAAQxB,EAAayB,UAG/C,OAFAzB,EAAaoB,IAAI,OAAQJ,EAAOO,GAChCvB,EAAa0B,YACNpB,EAAIqB,KAAKC,IAAU,CACxBhB,EAAGgB,EAAKhB,EACRiB,GAAID,EAAKE,EACTC,GAAI5B,EAAM2B,KAEd,CAEO,SAASE,EAAuBtC,GAA0B,IAAAuC,EAAAC,EAC/D,MAAMrC,EAAqBC,EAAmBC,QACxCC,aAAEA,EAAYC,QAAEA,EAAOC,MAAEA,EAAKC,MAAEA,EAAKC,KAAEA,GAASV,GAChDW,IAAEA,EAAGC,IAAEA,GAAQC,EAAgBJ,EAAOC,EAAM,KAElD,GAAIC,EADWR,GAAoDoC,QAAlCA,EAAuB,QAAvBC,EAAIlC,EAAaQ,cAAb0B,IAAmBA,OAAnBA,EAAAA,EAAqBzB,iBAASwB,IAAAA,EAAAA,EAAI,GACrD,MAAO,GACzB,IAAIvB,EAAIJ,EAAIA,EAAIK,OAAS,GAAGmB,EAAI3B,EAAM2B,EACtC,MAAMjB,EAAMX,EAAQ,GAAK,EAAI,EAC7BQ,GAAKG,EAEL,MAAMsB,OAAEA,EAAMC,OAAEA,EAAMC,IAAEA,GAAQrC,EAC1BiB,EAAMjB,EAAakB,4BACnBoB,GAAM5B,EAAIO,EAAIa,GAAKb,EAAIa,EACzB7B,EAASD,EAAaoB,IAAI,SAAUgB,EAASE,GAC5CtC,EAAaoB,IAAI,SAAUe,EAASG,GACzC,MAAMjB,EAAO,CAAC,EAAIX,EAAI,EAAKG,EAAKH,EAAIG,GAChCA,EAAM,GAAGQ,EAAKC,UAClB,MAAMC,EAAIF,EAAK7B,EAAWgC,QAAQxB,EAAauC,UAG/C,OAFAvC,EAAaoB,IAAI,MAAOiB,EAAMd,GAC9BvB,EAAa0B,YACNpB,EAAIqB,KAAKC,IAAU,CACxBE,EAAGF,EAAKE,EACRU,GAAIZ,EAAKhB,EACT6B,GAAItC,EAAMS,KAEd,CAEA,SAASL,EAAgBJ,EAAcC,EAAesC,GACpD,IAAIrC,EAAMsC,IACNrC,EAAe,GACnB,IAAK,MAAMsB,KAAQxB,EAAM,CACvB,MAAMM,EAAIkC,EAAYzC,EAAMuC,GAAOd,EAAKc,IACpCrC,EAAMK,IACRJ,EAAM,GACND,EAAMK,GAEJL,GAAOK,GACTJ,EAAIuC,KAAKjB,EAEb,CACA,MAAO,CAAEvB,MAAKC,MAChB"}