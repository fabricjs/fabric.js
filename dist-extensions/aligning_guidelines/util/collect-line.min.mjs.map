{"version":3,"file":"collect-line.min.mjs","sources":["../../../extensions/aligning_guidelines/util/collect-line.ts"],"sourcesContent":["import type { FabricObject, TBBox } from 'fabric';\nimport { Point } from 'fabric';\nimport type { HorizontalLine, VerticalLine } from '../typedefs';\nimport { AligningLineConfig } from '../constant';\nimport { getDistance, setPositionDir } from './basic';\n\ntype CollectLineProps = {\n  activeObject: FabricObject;\n  activeObjectRect: TBBox;\n  objectRect: TBBox;\n};\n\nexport function collectLine(props: CollectLineProps) {\n  const aligningLineMargin = AligningLineConfig.margin;\n  const { activeObject, activeObjectRect, objectRect } = props;\n  const list = makeLineByRect(objectRect);\n  const aList = makeLineByRect(activeObjectRect);\n  const margin = aligningLineMargin / (activeObject.canvas?.getZoom() ?? 1);\n  const opts = { target: activeObject, list, aList, margin };\n  const vLines = collectVerticalLine(opts);\n  const hLines = collectHorizontalLine(opts);\n\n  return { vLines, hLines };\n}\n\ntype CollectItemLineProps = {\n  target: FabricObject;\n  list: LineProps[];\n  aList: LineProps[];\n  margin: number;\n};\nfunction collectVerticalLine(props: CollectItemLineProps) {\n  const { target, list, aList, margin } = props;\n\n  const arr = aList.map((x) => getDistanceLine(x, list, 'x'));\n  const min = Math.min(...arr.map((x) => x.dis));\n  if (min > margin) return [];\n  const lines: VerticalLine[] = [];\n  const width = aList[0].x2 - aList[0].x;\n  const height = aList[0].y2 - aList[0].y;\n  let b = false;\n  for (let i = 0; i < arr.length; i++) {\n    const item = arr[i];\n    if (min == item.dis) {\n      const line = list[item.index];\n      const aLine = aList[item.index];\n      const x = line.x;\n      const y = aLine.y;\n\n      const y1 = Math.min(line.y, line.y2, y, aLine.y2);\n      const y2 = Math.max(line.y, line.y2, y, aLine.y2);\n      // 参考线可画多条\n      lines.push({ x, y1, y2 });\n      if (b) continue;\n      b = true;\n      // 对齐只进行一次\n      setPos({\n        target,\n        x,\n        y,\n        centerX: i - 1,\n        centerY: item.index - 1,\n        width,\n        height,\n        dir: 'x',\n      });\n      const dis = min * item.dir;\n      aList.forEach((x) => (x.x -= dis));\n    }\n  }\n  return lines;\n}\n\nfunction collectHorizontalLine(props: CollectItemLineProps) {\n  const { target, list, aList, margin } = props;\n\n  const arr = aList.map((x) => getDistanceLine(x, list, 'y'));\n  const min = Math.min(...arr.map((x) => x.dis));\n  if (min > margin) return [];\n  const lines: HorizontalLine[] = [];\n  const width = aList[0].x2 - aList[0].x;\n  const height = aList[0].y2 - aList[0].y;\n  let b = false;\n  for (let i = 0; i < arr.length; i++) {\n    const item = arr[i];\n    if (min == item.dis) {\n      const line = list[item.index];\n      const aLine = aList[item.index];\n      const y = line.y;\n      const x = aLine.x;\n\n      const x1 = Math.min(line.x, line.x2, x, aLine.x2);\n      const x2 = Math.max(line.x, line.x2, x, aLine.x2);\n      // 参考线可画多条\n      lines.push({ y, x1, x2 });\n      if (b) continue;\n      b = true;\n      // 对齐只进行一次\n      setPos({\n        target,\n        x,\n        y,\n        centerX: item.index - 1,\n        centerY: i - 1,\n        width,\n        height,\n        dir: 'y',\n      });\n      const dis = min * item.dir;\n      aList.forEach((x) => (x.y -= dis));\n    }\n  }\n  return lines;\n}\n\ntype LineProps = {\n  x: number;\n  y: number;\n  x2: number;\n  y2: number;\n};\nfunction getDistanceLine(\n  target: LineProps,\n  list: LineProps[],\n  type: 'x' | 'y'\n) {\n  let dis = Infinity;\n  let index = -1;\n  /** 1正值 -1负值 */\n  let dir = 1;\n  for (let i = 0; i < list.length; i++) {\n    const v = getDistance(target[type], list[i][type]);\n    if (dis > v) {\n      index = i;\n      dis = v;\n      dir = target[type] > list[i][type] ? 1 : -1;\n    }\n  }\n  return { dis, index, dir };\n}\n\nfunction makeLineByRect(rect: TBBox) {\n  const { left, top, width, height } = rect;\n  const a = { x: left, y: top, x2: left + width, y2: top + height };\n  const x = left + width / 2;\n  const y = top + height / 2;\n  const b = { x, y, x2: x, y2: y };\n  const c = { x: left + width, x2: left, y: top + height, y2: top };\n\n  return [a, b, c];\n}\n\ntype SnapToPixelProps = {\n  target: FabricObject;\n  x: number;\n  y: number;\n  /** -1 0 1 */\n  centerX: number;\n  /** -1 0 1 */\n  centerY: number;\n  width: number;\n  height: number;\n  dir: 'x' | 'y';\n};\nfunction setPos(props: SnapToPixelProps) {\n  const { target, centerX, centerY, width, height, dir } = props;\n  let { x, y } = props;\n  x -= (centerX * width) / 2;\n  y -= (centerY * height) / 2;\n  setPositionDir(target, new Point(x, y), dir);\n  target.setCoords();\n}\n"],"names":["collectLine","props","_activeObject$canvas$","_activeObject$canvas","aligningLineMargin","AligningLineConfig","margin","activeObject","activeObjectRect","objectRect","opts","target","list","makeLineByRect","aList","canvas","getZoom","vLines","arr","map","x","getDistanceLine","min","Math","dis","lines","width","x2","height","y2","y","b","i","length","item","line","index","aLine","y1","max","push","setPos","centerX","centerY","dir","forEach","collectVerticalLine","hLines","x1","collectHorizontalLine","type","Infinity","v","getDistance","rect","left","top","setPositionDir","Point","setCoords"],"mappings":"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"}