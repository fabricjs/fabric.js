import{AligningLineConfig as t}from"../constant.min.mjs";import{getDistance as e}from"./basic.min.mjs";const n=["left","center","right"],o=["top","center","bottom"];function s(e){var o,s;const i=t.margin,{activeObject:c,isScale:a,index:l,point:d,list:m}=e,{dis:f,arr:x}=r(d,m,"x");if(f>i/(null!==(o=null===(s=c.canvas)||void 0===s?void 0:s.getZoom())&&void 0!==o?o:1))return[];let v=x[x.length-1].x-d.x;const g=0==l||3==l?-1:1;v*=g;const{width:u,scaleX:p,left:y}=c,h=c._getTransformedDimensions(),b=(v+h.x)/h.x;a?c.set("scaleX",p*b):c.set("width",u*b);const j=[0,v/2*g,v*g];g<0&&j.reverse();const O=j[n.indexOf(c.originX)];return c.set("left",y+O),c.setCoords(),x.map((t=>({x:t.x,y1:t.y,y2:d.y})))}function i(e){var n,s;const i=t.margin,{activeObject:c,isScale:a,index:l,point:d,list:m}=e,{dis:f,arr:x}=r(d,m,"y");if(f>i/(null!==(n=null===(s=c.canvas)||void 0===s?void 0:s.getZoom())&&void 0!==n?n:1))return[];let v=x[x.length-1].y-d.y;const g=l<2?-1:1;v*=g;const{height:u,scaleY:p,top:y}=c,h=c._getTransformedDimensions(),b=(v+h.y)/h.y;a?c.set("scaleY",p*b):c.set("height",u*b);const j=[0,v/2*g,v*g];g<0&&j.reverse();const O=j[o.indexOf(c.originY)];return c.set("top",y+O),c.setCoords(),x.map((t=>({y:t.y,x1:t.x,x2:d.x})))}function r(t,n,o){let s=1/0,i=[];for(const r of n){const n=e(t[o],r[o]);s>n&&(i=[],s=n),s==n&&i.push(r)}return{dis:s,arr:i}}export{i as collectHorizontalPoint,s as collectVerticalPoint};
//# sourceMappingURL=collect-point.min.mjs.map
