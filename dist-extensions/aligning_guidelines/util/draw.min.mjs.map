{"version":3,"file":"draw.min.mjs","sources":["../../../extensions/aligning_guidelines/util/draw.ts"],"sourcesContent":["import type { Canvas } from 'fabric';\nimport { Point } from 'fabric';\nimport type { HorizontalLine, VerticalLine } from '../typedefs';\nimport { AligningLineConfig } from '../constant';\n\nfunction drawLine(canvas: Canvas, origin: Point, target: Point) {\n  const { width, color } = AligningLineConfig;\n  const ctx = canvas.getSelectionContext();\n  const viewportTransform = canvas.viewportTransform;\n  const zoom = canvas.getZoom();\n  ctx.save();\n  ctx.transform(...viewportTransform);\n  ctx.lineWidth = width / zoom;\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(origin.x, origin.y);\n  ctx.lineTo(target.x, target.y);\n  ctx.stroke();\n  drawX(ctx, zoom, origin);\n  drawX(ctx, zoom, target);\n  ctx.restore();\n}\n\nconst xSize = 2.4;\nfunction drawX(ctx: CanvasRenderingContext2D, zoom: number, point: Point) {\n  const size = xSize / zoom;\n  ctx.save();\n  ctx.translate(point.x, point.y);\n  ctx.beginPath();\n  ctx.moveTo(-size, -size);\n  ctx.lineTo(size, size);\n  ctx.moveTo(size, -size);\n  ctx.lineTo(-size, size);\n  ctx.stroke();\n  ctx.restore();\n}\nfunction drawPoint(canvas: Canvas, arr: Point[]) {\n  const { width, color } = AligningLineConfig;\n  const ctx = canvas.getSelectionContext();\n  const viewportTransform = canvas.viewportTransform;\n  const zoom = canvas.getZoom();\n  ctx.save();\n  ctx.transform(...viewportTransform);\n  ctx.lineWidth = width / zoom;\n  ctx.strokeStyle = color;\n  for (const item of arr) drawX(ctx, zoom, item);\n  ctx.restore();\n}\nexport function drawPointList(\n  canvas: Canvas,\n  list: Array<VerticalLine | HorizontalLine>\n) {\n  const arr = list.map((item) => {\n    const isVertical = 'y2' in item;\n    const x = isVertical ? item.x : item.x1;\n    const y = isVertical ? item.y1 : item.y;\n    return new Point(x, y);\n  });\n  drawPoint(canvas, arr);\n}\n\nexport function drawVerticalLine(canvas: Canvas, coords: VerticalLine) {\n  const x = coords.x;\n  const origin = new Point(x, coords.y1);\n  const target = new Point(x, coords.y2);\n  drawLine(canvas, origin, target);\n}\n\nexport function drawHorizontalLine(canvas: Canvas, coords: HorizontalLine) {\n  const y = coords.y;\n  const origin = new Point(coords.x1, y);\n  const target = new Point(coords.x2, y);\n  drawLine(canvas, origin, target);\n}\n"],"names":["drawLine","canvas","origin","target","width","color","AligningLineConfig","ctx","getSelectionContext","viewportTransform","zoom","getZoom","save","transform","lineWidth","strokeStyle","beginPath","moveTo","x","y","lineTo","stroke","drawX","restore","xSize","point","size","translate","drawPointList","list","arr","item","drawPoint","map","isVertical","x1","y1","Point","drawVerticalLine","coords","y2","drawHorizontalLine","x2"],"mappings":"wFAKA,SAASA,EAASC,EAAgBC,EAAeC,GAC/C,MAAMC,MAAEA,EAAKC,MAAEA,GAAUC,EACnBC,EAAMN,EAAOO,sBACbC,EAAoBR,EAAOQ,kBAC3BC,EAAOT,EAAOU,UACpBJ,EAAIK,OACJL,EAAIM,aAAaJ,GACjBF,EAAIO,UAAYV,EAAQM,EACxBH,EAAIQ,YAAcV,EAClBE,EAAIS,YACJT,EAAIU,OAAOf,EAAOgB,EAAGhB,EAAOiB,GAC5BZ,EAAIa,OAAOjB,EAAOe,EAAGf,EAAOgB,GAC5BZ,EAAIc,SACJC,EAAMf,EAAKG,EAAMR,GACjBoB,EAAMf,EAAKG,EAAMP,GACjBI,EAAIgB,SACN,CAEA,MAAMC,EAAQ,IACd,SAASF,EAAMf,EAA+BG,EAAce,GAC1D,MAAMC,EAAOF,EAAQd,EACrBH,EAAIK,OACJL,EAAIoB,UAAUF,EAAMP,EAAGO,EAAMN,GAC7BZ,EAAIS,YACJT,EAAIU,QAAQS,GAAOA,GACnBnB,EAAIa,OAAOM,EAAMA,GACjBnB,EAAIU,OAAOS,GAAOA,GAClBnB,EAAIa,QAAQM,EAAMA,GAClBnB,EAAIc,SACJd,EAAIgB,SACN,CAaO,SAASK,EACd3B,EACA4B,IAdF,SAAmB5B,EAAgB6B,GACjC,MAAM1B,MAAEA,EAAKC,MAAEA,GAAUC,EACnBC,EAAMN,EAAOO,sBACbC,EAAoBR,EAAOQ,kBAC3BC,EAAOT,EAAOU,UACpBJ,EAAIK,OACJL,EAAIM,aAAaJ,GACjBF,EAAIO,UAAYV,EAAQM,EACxBH,EAAIQ,YAAcV,EAClB,IAAK,MAAM0B,KAAQD,EAAKR,EAAMf,EAAKG,EAAMqB,GACzCxB,EAAIgB,SACN,CAWES,CAAU/B,EANE4B,EAAKI,KAAKF,IACpB,MAAMG,EAAa,OAAQH,EACrBb,EAAIgB,EAAaH,EAAKb,EAAIa,EAAKI,GAC/BhB,EAAIe,EAAaH,EAAKK,GAAKL,EAAKZ,EACtC,OAAO,IAAIkB,EAAMnB,EAAGC,EAAE,IAG1B,CAEO,SAASmB,EAAiBrC,EAAgBsC,GAC/C,MAAMrB,EAAIqB,EAAOrB,EAGjBlB,EAASC,EAFM,IAAIoC,EAAMnB,EAAGqB,EAAOH,IACpB,IAAIC,EAAMnB,EAAGqB,EAAOC,IAErC,CAEO,SAASC,EAAmBxC,EAAgBsC,GACjD,MAAMpB,EAAIoB,EAAOpB,EAGjBnB,EAASC,EAFM,IAAIoC,EAAME,EAAOJ,GAAIhB,GACrB,IAAIkB,EAAME,EAAOG,GAAIvB,GAEtC"}