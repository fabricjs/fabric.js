{"version":3,"file":"index.min.mjs","sources":["../src/config.ts","../src/util/internals/console.ts","../src/filters/GLProbes/GLProbe.ts","../src/filters/GLProbes/WebGLProbe.ts","../src/env/browser.ts","../src/env/index.ts","../src/cache.ts","../src/constants.ts","../src/ClassRegistry.ts","../src/util/animation/AnimationRegistry.ts","../src/Observable.ts","../src/util/internals/removeFromArray.ts","../src/util/misc/cos.ts","../src/util/misc/sin.ts","../src/Point.ts","../src/Collection.ts","../src/CommonMethods.ts","../src/util/animation/AnimationFrameProvider.ts","../src/util/internals/uid.ts","../src/util/misc/dom.ts","../src/util/misc/radiansDegreesConversion.ts","../src/util/misc/matrix.ts","../src/util/misc/objectEnlive.ts","../src/util/misc/pick.ts","../src/color/color_map.ts","../src/color/util.ts","../src/color/Color.ts","../src/color/constants.ts","../src/util/misc/toFixed.ts","../src/util/misc/svgParsing.ts","../src/util/typeAssertions.ts","../src/util/dom_misc.ts","../src/canvas/DOMManagers/util.ts","../src/canvas/DOMManagers/StaticCanvasDOMManager.ts","../src/canvas/StaticCanvasOptions.ts","../src/canvas/StaticCanvas.ts","../src/util/dom_event.ts","../src/util/misc/boundingBoxFromPoints.ts","../src/util/misc/objectTransforms.ts","../src/util/misc/planeChange.ts","../src/controls/fireEvent.ts","../src/util/misc/resolveOrigin.ts","../src/controls/util.ts","../src/controls/drag.ts","../src/shapes/Object/FabricObjectSVGExportMixin.ts","../src/parser/getSvgRegex.ts","../src/parser/constants.ts","../src/util/misc/vectors.ts","../src/Shadow.ts","../src/util/misc/capValue.ts","../src/shapes/Object/defaultValues.ts","../src/util/animation/easing.ts","../src/util/animation/AnimationBase.ts","../src/util/animation/ValueAnimation.ts","../src/util/animation/ArrayAnimation.ts","../src/util/animation/ColorAnimation.ts","../src/util/animation/animate.ts","../src/Intersection.ts","../src/shapes/Object/ObjectGeometry.ts","../src/shapes/Object/Object.ts","../src/controls/wrapWithFireEvent.ts","../src/controls/wrapWithFixedAnchor.ts","../src/controls/changeWidth.ts","../src/controls/controlRendering.ts","../src/controls/Control.ts","../src/controls/rotate.ts","../src/controls/scale.ts","../src/controls/skew.ts","../src/controls/scaleSkew.ts","../src/controls/commonControls.ts","../src/shapes/Object/InteractiveObject.ts","../src/util/applyMixins.ts","../src/shapes/Object/FabricObject.ts","../src/util/misc/isTransparent.ts","../src/util/misc/projectStroke/StrokeProjectionsBase.ts","../src/util/misc/projectStroke/StrokeLineJoinProjections.ts","../src/util/misc/projectStroke/StrokeLineCapProjections.ts","../src/util/misc/projectStroke/index.ts","../src/util/internals/findRight.ts","../src/util/internals/cloneStyles.ts","../src/util/lang_string.ts","../src/util/misc/textStyles.ts","../src/parser/attributes.ts","../src/parser/selectorMatches.ts","../src/parser/elementMatchesRule.ts","../src/parser/doesSomeParentMatch.ts","../src/parser/normalizeAttr.ts","../src/util/internals/cleanupSvgAttribute.ts","../src/parser/parseTransformAttribute.ts","../src/parser/normalizeValue.ts","../src/parser/parseFontDeclaration.ts","../src/parser/parseStyleString.ts","../src/parser/parseStyleAttribute.ts","../src/parser/parseStyleObject.ts","../src/parser/setStrokeFillOpacity.ts","../src/parser/parseAttributes.ts","../src/parser/getGlobalStylesForElement.ts","../src/shapes/Rect.ts","../src/LayoutManager/constants.ts","../src/LayoutManager/LayoutStrategies/utils.ts","../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","../src/LayoutManager/LayoutStrategies/FitContentLayout.ts","../src/LayoutManager/LayoutManager.ts","../src/shapes/Group.ts","../src/util/misc/groupSVGElements.ts","../src/util/misc/findScaleTo.ts","../src/util/path/regex.ts","../src/util/path/index.ts","../src/util/dom_style.ts","../src/util/misc/mergeClipPaths.ts","../src/util/internals/getRandomInt.ts","../src/util/internals/dom_request.ts","../src/util/transform_matrix_removal.ts","../src/util/misc/rotatePoint.ts","../src/canvas/DOMManagers/CanvasDOMManager.ts","../src/canvas/SelectableCanvas.ts","../src/canvas/CanvasOptions.ts","../src/canvas/TextEditingManager.ts","../src/canvas/Canvas.ts","../src/gradient/constants.ts","../src/util/internals/ifNaN.ts","../src/parser/percent.ts","../src/gradient/parser/parseColorStops.ts","../src/gradient/parser/misc.ts","../src/gradient/parser/parseCoords.ts","../src/gradient/Gradient.ts","../src/Pattern/Pattern.ts","../src/brushes/BaseBrush.ts","../src/shapes/Path.ts","../src/brushes/PencilBrush.ts","../src/shapes/Circle.ts","../src/brushes/CircleBrush.ts","../src/brushes/SprayBrush.ts","../src/brushes/PatternBrush.ts","../src/shapes/Line.ts","../src/shapes/Triangle.ts","../src/shapes/Ellipse.ts","../src/parser/parsePointsAttribute.ts","../src/shapes/Polyline.ts","../src/shapes/Polygon.ts","../src/shapes/Text/constants.ts","../src/shapes/Text/StyledText.ts","../src/shapes/Text/TextSVGExportMixin.ts","../src/shapes/Text/Text.ts","../src/shapes/IText/DraggableTextDelegate.ts","../src/shapes/IText/ITextBehavior.ts","../src/shapes/IText/ITextKeyBehavior.ts","../src/shapes/IText/ITextClickBehavior.ts","../src/shapes/IText/constants.ts","../src/shapes/IText/IText.ts","../src/shapes/Textbox.ts","../src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","../src/LayoutManager/LayoutStrategies/FixedLayout.ts","../src/LayoutManager/ActiveSelectionLayoutManager.ts","../src/shapes/ActiveSelection.ts","../src/filters/Canvas2dFilterBackend.ts","../src/filters/WebGLFilterBackend.ts","../src/filters/FilterBackend.ts","../src/shapes/Image.ts","../src/parser/applyViewboxTransform.ts","../src/parser/getTagName.ts","../src/parser/hasInvalidAncestor.ts","../src/parser/getMultipleNodes.ts","../src/parser/recursivelyParseGradientsXlink.ts","../src/parser/getGradientDefs.ts","../src/parser/getCSSRules.ts","../src/parser/elements_parser.ts","../src/parser/parseSVGDocument.ts","../src/parser/parseUseDirectives.ts","../src/parser/loadSVGFromString.ts","../src/parser/loadSVGFromURL.ts","../src/controls/polyControl.ts","../src/controls/pathControl.ts","../src/filters/utils.ts","../src/filters/shaders/baseFilter.ts","../src/filters/BaseFilter.ts","../src/filters/shaders/blendColor.ts","../src/filters/BlendColor.ts","../src/filters/shaders/blendImage.ts","../src/filters/BlendImage.ts","../src/filters/Blur.ts","../src/filters/shaders/blur.ts","../src/filters/Brightness.ts","../src/filters/shaders/brightness.ts","../src/filters/shaders/colorMatrix.ts","../src/filters/ColorMatrix.ts","../src/filters/ColorMatrixFilters.ts","../src/filters/Composed.ts","../src/filters/Contrast.ts","../src/filters/shaders/constrast.ts","../src/filters/shaders/convolute.ts","../src/filters/Convolute.ts","../src/filters/shaders/gamma.ts","../src/filters/Gamma.ts","../src/filters/shaders/grayscale.ts","../src/filters/Grayscale.ts","../src/filters/HueRotation.ts","../src/filters/Invert.ts","../src/filters/shaders/invert.ts","../src/filters/Noise.ts","../src/filters/shaders/noise.ts","../src/filters/Pixelate.ts","../src/filters/shaders/pixelate.ts","../src/filters/RemoveColor.ts","../src/filters/shaders/removeColor.ts","../src/filters/Resize.ts","../src/filters/Saturation.ts","../src/filters/shaders/saturation.ts","../src/filters/Vibrance.ts","../src/filters/shaders/vibrance.ts"],"sourcesContent":["export type TConfiguration = Partial<BaseConfiguration>;\n\nclass BaseConfiguration {\n  /**\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n   * which is unitless and not rendered equally across browsers.\n   *\n   * Values that work quite well (as of October 2017) are:\n   * - Chrome: 1.5\n   * - Edge: 1.75\n   * - Firefox: 0.9\n   * - Safari: 0.95\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default 1\n   */\n  browserShadowBlurConstant = 1;\n\n  /**\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n   */\n  DPI = 96;\n\n  /**\n   * Device Pixel Ratio\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   */\n  devicePixelRatio =\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\n\n  /**\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  perfLimitSizeTotal = 2097152;\n\n  /**\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  maxCacheSideLimit = 4096;\n\n  /**\n   * Lowest pixel limit for cache canvases, set at 256PX\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  minCacheSideLimit = 256;\n\n  /**\n   * When 'true', style information is not retained when copy/pasting text, making\n   * pasted text use destination style.\n   * Defaults to 'false'.\n   * @type Boolean\n   * @default\n   * @deprecated\n   */\n  disableStyleCopyPaste = false;\n\n  /**\n   * Enable webgl for filtering picture is available\n   * A filtering backend will be initialized, this will both take memory and\n   * time since a default 2048x2048 canvas will be created for the gl context\n   * @since 2.0.0\n   * @type Boolean\n   * @default\n   */\n  enableGLFiltering = true;\n\n  /**\n   * if webgl is enabled and available, textureSize will determine the size\n   * of the canvas backend\n   *\n   * In order to support old hardware set to `2048` to avoid OOM\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  textureSize = 4096;\n\n  /**\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\n   * @type Boolean\n   * @default false\n   */\n  forceGLPutImageData = false;\n\n  /**\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n   * With the standard behaviour of fabric to translate all curves in absolute commands and by not subtracting the starting point from\n   * the curve is very hard to hit any cache.\n   * Enable only if you know why it could be useful.\n   * Candidate for removal/simplification\n   * @default false\n   */\n  cachesBoundsOfCurve = false;\n\n  /**\n   * Map of font files\n   * Map<fontFamily, pathToFile> of font files\n   */\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   */\n  NUM_FRACTION_DIGITS = 4;\n}\n\nexport class Configuration extends BaseConfiguration {\n  constructor(config?: TConfiguration) {\n    super();\n    this.configure(config);\n  }\n\n  configure(config: TConfiguration = {}) {\n    Object.assign(this, config);\n  }\n\n  /**\n   * Map<fontFamily, pathToFile> of font files\n   */\n  addFonts(\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {},\n  ) {\n    this.fontPaths = {\n      ...this.fontPaths,\n      ...paths,\n    };\n  }\n\n  removeFonts(fontFamilys: string[] = []) {\n    fontFamilys.forEach((fontFamily) => {\n      delete this.fontPaths[fontFamily];\n    });\n  }\n\n  clearFonts() {\n    this.fontPaths = {};\n  }\n\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\n    const defaults = new BaseConfiguration() as T;\n    const config =\n      keys?.reduce((acc, key) => {\n        acc[key] = defaults[key];\n        return acc;\n      }, {} as T) || defaults;\n    this.configure(config);\n  }\n}\n\nexport const config = new Configuration();\n","export const log = (\n  severity: 'log' | 'warn' | 'error',\n  ...optionalParams: any[]\n) =>\n  // eslint-disable-next-line no-restricted-syntax\n  console[severity]('fabric', ...optionalParams);\n\nexport class FabricError extends Error {\n  constructor(message?: string, options?: ErrorOptions) {\n    super(`fabric: ${message}`, options);\n  }\n}\n\nexport class SignalAbortedError extends FabricError {\n  constructor(context: string) {\n    super(`${context} 'options.signal' is in 'aborted' state`);\n  }\n}\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\n\nexport abstract class GLProbe {\n  declare GLPrecision: GLPrecision | undefined;\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\n  abstract isSupported(textureSize: number): boolean;\n}\n","import { log } from '../../util/internals/console';\nimport { GLProbe } from './GLProbe';\nimport type { GLPrecision } from './GLProbe';\n\n/**\n * Lazy initialize WebGL constants\n */\nexport class WebGLProbe extends GLProbe {\n  declare maxTextureSize?: number;\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {GLPrecision} Precision to test can be any of following\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  private testPrecision(\n    gl: WebGLRenderingContext,\n    precision: GLPrecision,\n  ): boolean {\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    if (!fragmentShader) {\n      return false;\n    }\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\n  }\n\n  /**\n   * query browser for WebGL\n   */\n  queryWebGL(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n    if (gl) {\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\n        (precision) => this.testPrecision(gl, precision),\n      );\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\n    }\n  }\n\n  isSupported(textureSize: number) {\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\nimport type { TCopyPasteData, TFabricEnv } from './types';\n\nconst copyPasteData: TCopyPasteData = {};\n\nexport const getEnv = (): TFabricEnv => {\n  return {\n    document,\n    window,\n    isTouchSupported:\n      'ontouchstart' in window ||\n      'ontouchstart' in document ||\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\n    WebGLProbe: new WebGLProbe(),\n    dispose() {\n      // noop\n    },\n    copyPasteData,\n  };\n};\n","/**\n * This file is consumed by fabric.\n * The `./node` and `./browser` files define the env variable that is used by this module.\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\n * This is done in order to support isomorphic usage for browser and node applications\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\n */\n\nimport { config } from '../config';\nimport { getEnv as getBrowserEnv } from './browser';\nimport type { TFabricEnv } from './types';\nimport type { DOMWindow } from 'jsdom';\n\nlet env: TFabricEnv;\n\n/**\n * Sets the environment variables used by fabric.\\\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\n *\n * **CAUTION**: Must be called before using the package.\n *\n * @example\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\n * import { getEnv, setEnv } from 'fabric';\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\n * setEnv({ ...getEnv(), window, document });\n * // done with setup, using fabric is now safe\n */\nexport const setEnv = (value: TFabricEnv) => {\n  env = value;\n};\n\n/**\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\n */\nexport const getEnv = () => env || (env = getBrowserEnv());\n\nexport const getFabricDocument = (): Document => getEnv().document;\n\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\n  getEnv().window;\n\n/**\n * @returns the config value if defined, fallbacks to the environment value\n */\nexport const getDevicePixelRatio = () =>\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\n","import { config } from './config';\nimport type { TRectBounds } from './typedefs';\n\nexport class Cache {\n  /**\n   * Cache of widths of chars in text rendering.\n   */\n  charWidthsCache: Record<\n    /** fontFamily */ string,\n    Record<\n      /** fontStyleCacheKey */ string,\n      Record</** char */ string, /** width */ number>\n    >\n  > = {};\n\n  /**\n   * @return {Object} reference to cache\n   */\n  getFontCache({\n    fontFamily,\n    fontStyle,\n    fontWeight,\n  }: {\n    fontFamily: string;\n    fontStyle: string;\n    fontWeight: string | number;\n  }) {\n    fontFamily = fontFamily.toLowerCase();\n    if (!this.charWidthsCache[fontFamily]) {\n      this.charWidthsCache[fontFamily] = {};\n    }\n    const fontCache = this.charWidthsCache[fontFamily];\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\n      fontWeight + ''\n    ).toLowerCase()}`;\n    if (!fontCache[cacheKey]) {\n      fontCache[cacheKey] = {};\n    }\n    return fontCache[cacheKey];\n  }\n\n  /**\n   * Clear char widths cache for the given font family or all the cache if no\n   * fontFamily is specified.\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\n   * for custom fonts to load properly when adding text objects to the canvas.\n   * If a text object is added when its own font is not loaded yet, you will get wrong\n   * measurement and so wrong bounding boxes.\n   * After the font cache is cleared, either change the textObject text content or call\n   * initDimensions() to trigger a recalculation\n   * @param {String} [fontFamily] font family to clear\n   */\n  clearFontCache(fontFamily?: string) {\n    fontFamily = (fontFamily || '').toLowerCase();\n    if (!fontFamily) {\n      this.charWidthsCache = {};\n    } else if (this.charWidthsCache[fontFamily]) {\n      delete this.charWidthsCache[fontFamily];\n    }\n  }\n\n  /**\n   * Given current aspect ratio, determines the max width and height that can\n   * respect the total allowed area for the cache.\n   * @param {number} ar aspect ratio\n   * @return {number[]} Limited dimensions X and Y\n   */\n  limitDimsByArea(ar: number) {\n    const { perfLimitSizeTotal } = config;\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\n    // we are not returning a point on purpose, to avoid circular dependencies\n    // this is an internal utility\n    return [\n      Math.floor(roughWidth),\n      Math.floor(perfLimitSizeTotal / roughWidth),\n    ];\n  }\n\n  /**\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n   * you do not get any speed benefit and you get a big object in memory.\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n   * can eventually clear it.\n   * It was an internal variable, is accessible since version 2.3.4\n   */\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\n}\n\nexport const cache = new Cache();\n","import type { TMat2D } from './typedefs';\n// use this syntax so babel plugin see this import here\nimport { version } from '../package.json';\n\nexport const VERSION = version;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const halfPI = Math.PI / 2;\nexport const twoMathPi = Math.PI * 2;\nexport const PiBy180 = Math.PI / 180;\n\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\nexport const DEFAULT_SVG_FONT_SIZE = 16;\nexport const ALIASING_LIMIT = 2;\n\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nexport const kRect = 1 - 0.5522847498;\n\nexport const CENTER = 'center';\nexport const LEFT = 'left';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const RIGHT = 'right';\nexport const NONE = 'none';\n\nexport const reNewline = /\\r?\\n/;\n\nexport const MOVING = 'moving';\nexport const SCALING = 'scaling';\nexport const ROTATING = 'rotating';\nexport const ROTATE = 'rotate';\nexport const SKEWING = 'skewing';\nexport const RESIZING = 'resizing';\nexport const MODIFY_POLY = 'modifyPoly';\nexport const MODIFY_PATH = 'modifyPath';\nexport const CHANGED = 'changed';\nexport const SCALE = 'scale';\nexport const SCALE_X = 'scaleX';\nexport const SCALE_Y = 'scaleY';\nexport const SKEW_X = 'skewX';\nexport const SKEW_Y = 'skewY';\nexport const FILL = 'fill';\nexport const STROKE = 'stroke';\nexport const MODIFIED = 'modified';\n","import { FabricError } from './util/internals/console';\n\n/*\n * This Map connects the objects type value with their\n * class implementation. It used from any object to understand which are\n * the classes to enlive when requesting a object.type = 'path' for example.\n * Objects uses it for clipPath, Canvas uses it for everything.\n * This is necessary for generic code to run and enlive instances from serialized representation.\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\n * The Registry start empty and gets filled in depending which files you import.\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\n * different sources you will need to import all fabric because you may need all classes.\n */\n\nexport const JSON = 'json';\nexport const SVG = 'svg';\n\nexport class ClassRegistry {\n  declare [JSON]: Map<string, any>;\n  declare [SVG]: Map<string, any>;\n\n  constructor() {\n    this[JSON] = new Map();\n    this[SVG] = new Map();\n  }\n\n  has(classType: string): boolean {\n    return this[JSON].has(classType);\n  }\n\n  getClass<T>(classType: string): T {\n    const constructor = this[JSON].get(classType);\n    if (!constructor) {\n      throw new FabricError(`No class registered for ${classType}`);\n    }\n    return constructor;\n  }\n\n  setClass(classConstructor: any, classType?: string) {\n    if (classType) {\n      this[JSON].set(classType, classConstructor);\n    } else {\n      this[JSON].set(classConstructor.type, classConstructor);\n      // legacy\n      // @TODO: needs to be removed in fabric 7 or 8\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\n    }\n  }\n\n  getSVGClass(SVGTagName: string): any {\n    return this[SVG].get(SVGTagName);\n  }\n\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\n    this[SVG].set(\n      SVGTagName ?? classConstructor.type.toLowerCase(),\n      classConstructor,\n    );\n  }\n}\n\nexport const classRegistry = new ClassRegistry();\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas),\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n","export type TEventCallback<T = any> = (options: T) => any;\n\ntype EventRegistryObject<E> = {\n  [K in keyof E]?: TEventCallback<E[K]>;\n};\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n * @see {@link http://fabricjs.com/events|Events demo}\n */\nexport class Observable<EventSpec> {\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\n    {} as Record<keyof EventSpec, TEventCallback[]>;\n\n  /**\n   * Observes specified event\n   * @alias on\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\n    }\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this.on(eventName as K, handler as TEventCallback);\n      });\n      return () => this.off(arg0);\n    } else if (handler) {\n      const eventName = arg0;\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n      return () => this.off(eventName, handler);\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * Observes specified event **once**\n   * @alias once\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      const disposers: VoidFunction[] = [];\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\n      });\n      return () => disposers.forEach((d) => d());\n    } else if (handler) {\n      const disposer = this.on<K, E>(\n        arg0,\n        function onceHandler(this: Observable<EventSpec>, ...args) {\n          handler.call(this, ...args);\n          disposer();\n        },\n      );\n      return disposer;\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} eventName\n   * @param {Function} [handler]\n   */\n  private _removeEventListener<K extends keyof EventSpec>(\n    eventName: K,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      const eventListener = this.__eventListeners[eventName];\n      const index = eventListener.indexOf(handler);\n      index > -1 && eventListener.splice(index, 1);\n    } else {\n      this.__eventListeners[eventName] = [];\n    }\n  }\n\n  /**\n   * Unsubscribe all event listeners for eventname.\n   * Do not use this pattern. You could kill internal fabricJS events.\n   * We know we should have protected events for internal flows, but we don't have yet\n   * @deprecated\n   * @param {string} eventName event name (eg. 'after:render')\n   */\n  off<K extends keyof EventSpec>(eventName: K): void;\n  /**\n   * unsubscribe an event listener\n   * @param {string} eventName event name (eg. 'after:render')\n   * @param {TEventCallback} handler event listener to unsubscribe\n   */\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\n  /**\n   * unsubscribe event listeners\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   */\n  off(handlers: EventRegistryObject<EventSpec>): void;\n  /**\n   * unsubscribe all event listeners\n   */\n  off(): void;\n  off<K extends keyof EventSpec>(\n    arg0?: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (typeof arg0 === 'undefined') {\n      for (const eventName in this.__eventListeners) {\n        this._removeEventListener(eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (typeof arg0 === 'object') {\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this._removeEventListener(eventName as K, handler as TEventCallback);\n      });\n    } else {\n      this._removeEventListener(arg0, handler);\n    }\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   */\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\n    if (listenersForEvent) {\n      for (let i = 0; i < listenersForEvent.length; i++) {\n        listenersForEvent[i].call(this, options || {});\n      }\n    }\n  }\n}\n","/**\n * Removes value from an array.\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n * @param {Array} array\n * @param {*} value\n * @return {Array} original array\n */\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\n  const idx = array.indexOf(value);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n  return array;\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the cosin value for angle.\n */\nexport const cos = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 1;\n  }\n  const angleSlice = Math.abs(angle) / halfPI;\n  switch (angleSlice) {\n    case 1:\n    case 3:\n      return 0;\n    case 2:\n      return -1;\n  }\n  return Math.cos(angle);\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the sin value for angle.\n */\nexport const sin = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 0;\n  }\n  const angleSlice = angle / halfPI;\n  const value = Math.sign(angle);\n  switch (angleSlice) {\n    case 1:\n      return value;\n    case 2:\n      return 0;\n    case 3:\n      return -value;\n  }\n  return Math.sin(angle);\n};\n","import type { TMat2D, TRadian } from './typedefs';\nimport { cos } from './util/misc/cos';\nimport { sin } from './util/misc/sin';\n\nexport interface XY {\n  x: number;\n  y: number;\n}\n\n/**\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\n */\nexport class Point implements XY {\n  declare x: number;\n\n  declare y: number;\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(point?: XY);\n  constructor(arg0: number | XY = 0, y = 0) {\n    if (typeof arg0 === 'object') {\n      this.x = arg0.x;\n      this.y = arg0.y;\n    } else {\n      this.x = arg0;\n      this.y = y;\n    }\n  }\n\n  /**\n   * Adds another point to this one and returns another one\n   * @param {XY} that\n   * @return {Point} new Point instance with added values\n   */\n  add(that: XY): Point {\n    return new Point(this.x + that.x, this.y + that.y);\n  }\n\n  /**\n   * Adds another point to this one\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  addEquals(that: XY): Point {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  /**\n   * Adds value to this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point} new Point with added value\n   */\n  scalarAdd(scalar: number): Point {\n    return new Point(this.x + scalar, this.y + scalar);\n  }\n\n  /**\n   * Adds value to this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarAddEquals(scalar: number): Point {\n    this.x += scalar;\n    this.y += scalar;\n    return this;\n  }\n\n  /**\n   * Subtracts another point from this point and returns a new one\n   * @param {XY} that\n   * @return {Point} new Point object with subtracted values\n   */\n  subtract(that: XY): Point {\n    return new Point(this.x - that.x, this.y - that.y);\n  }\n\n  /**\n   * Subtracts another point from this point\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  subtractEquals(that: XY): Point {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  /**\n   * Subtracts value from this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarSubtract(scalar: number): Point {\n    return new Point(this.x - scalar, this.y - scalar);\n  }\n\n  /**\n   * Subtracts value from this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarSubtractEquals(scalar: number): Point {\n    this.x -= scalar;\n    this.y -= scalar;\n    return this;\n  }\n\n  /**\n   * Multiplies this point by another value and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  multiply(that: XY): Point {\n    return new Point(this.x * that.x, this.y * that.y);\n  }\n\n  /**\n   * Multiplies this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarMultiply(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Multiplies this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarMultiplyEquals(scalar: number): Point {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  /**\n   * Divides this point by another and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  divide(that: XY): Point {\n    return new Point(this.x / that.x, this.y / that.y);\n  }\n\n  /**\n   * Divides this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarDivide(scalar: number): Point {\n    return new Point(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Divides this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarDivideEquals(scalar: number): Point {\n    this.x /= scalar;\n    this.y /= scalar;\n    return this;\n  }\n\n  /**\n   * Returns true if this point is equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  eq(that: XY): boolean {\n    return this.x === that.x && this.y === that.y;\n  }\n\n  /**\n   * Returns true if this point is less than another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lt(that: XY): boolean {\n    return this.x < that.x && this.y < that.y;\n  }\n\n  /**\n   * Returns true if this point is less than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lte(that: XY): boolean {\n    return this.x <= that.x && this.y <= that.y;\n  }\n\n  /**\n\n   * Returns true if this point is greater another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gt(that: XY): boolean {\n    return this.x > that.x && this.y > that.y;\n  }\n\n  /**\n   * Returns true if this point is greater than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gte(that: XY): boolean {\n    return this.x >= that.x && this.y >= that.y;\n  }\n\n  /**\n   * Returns new point which is the result of linear interpolation with this one and another one\n   * @param {XY} that\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n   * @return {Point}\n   */\n  lerp(that: XY, t = 0.5): Point {\n    t = Math.max(Math.min(1, t), 0);\n    return new Point(\n      this.x + (that.x - this.x) * t,\n      this.y + (that.y - this.y) * t,\n    );\n  }\n\n  /**\n   * Returns distance from this point and another one\n   * @param {XY} that\n   * @return {Number}\n   */\n  distanceFrom(that: XY): number {\n    const dx = this.x - that.x,\n      dy = this.y - that.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the point between this point and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  midPointFrom(that: XY): Point {\n    return this.lerp(that);\n  }\n\n  /**\n   * Returns a new point which is the min of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  min(that: XY): Point {\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n  }\n\n  /**\n   * Returns a new point which is the max of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  max(that: XY): Point {\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n  }\n\n  /**\n   * Returns string representation of this point\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  /**\n   * Sets x/y of this point\n   * @param {Number} x\n   * @param {Number} y\n   * @chainable\n   */\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x of this point\n   * @param {Number} x\n   * @chainable\n   */\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets y of this point\n   * @param {Number} y\n   * @chainable\n   */\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x/y of this point from another point\n   * @param {XY} that\n   * @chainable\n   */\n  setFromPoint(that: XY) {\n    this.x = that.x;\n    this.y = that.y;\n    return this;\n  }\n\n  /**\n   * Swaps x/y of this point and another point\n   * @param {XY} that\n   */\n  swap(that: XY) {\n    const x = this.x,\n      y = this.y;\n    this.x = that.x;\n    this.y = that.y;\n    that.x = x;\n    that.y = y;\n  }\n\n  /**\n   * return a cloned instance of the point\n   * @return {Point}\n   */\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Rotates `point` around `origin` with `radians`\n   * @static\n   * @memberOf fabric.util\n   * @param {XY} origin The origin of the rotation\n   * @param {TRadian} radians The radians of the angle for the rotation\n   * @return {Point} The new rotated point\n   */\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\n    // TODO benchmark and verify the add and subtract how much cost\n    // and then in case early return if no origin is passed\n    const sinus = sin(radians),\n      cosinus = cos(radians);\n    const p = this.subtract(origin);\n    const rotated = new Point(\n      p.x * cosinus - p.y * sinus,\n      p.x * sinus + p.y * cosinus,\n    );\n    return rotated.add(origin);\n  }\n\n  /**\n   * Apply transform t to point p\n   * @static\n   * @memberOf fabric.util\n   * @param  {TMat2D} t The transform\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n   * @return {Point} The transformed point\n   */\n  transform(t: TMat2D, ignoreOffset = false): Point {\n    return new Point(\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5]),\n    );\n  }\n}\n\nexport const ZERO = new Point(0, 0);\n","import type { Constructor, TBBox } from './typedefs';\nimport { removeFromArray } from './util/internals/removeFromArray';\nimport { Point } from './Point';\nimport type { ActiveSelection } from './shapes/ActiveSelection';\nimport type { Group } from './shapes/Group';\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\nimport type { FabricObject } from './shapes/Object/FabricObject';\n\nexport const isCollection = (\n  fabricObject?: FabricObject,\n): fabricObject is Group | ActiveSelection => {\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\n};\n\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\n  class Collection extends Base {\n    /**\n     * @type {FabricObject[]}\n     * @TODO needs to end up in the constructor too\n     */\n    _objects: FabricObject[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectAdded(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectRemoved(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onStackOrderChanged(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    /**\n     * Adds objects to collection\n     * Objects should be instances of (or inherit from) FabricObject\n     * @param {...FabricObject[]} objects to add\n     * @returns {number} new array length\n     */\n    add(...objects: FabricObject[]): number {\n      const size = this._objects.push(...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return size;\n    }\n\n    /**\n     * Inserts an object into collection at specified index\n     * @param {number} index Index to insert object at\n     * @param {...FabricObject[]} objects Object(s) to insert\n     * @returns {number} new array length\n     */\n    insertAt(index: number, ...objects: FabricObject[]) {\n      this._objects.splice(index, 0, ...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return this._objects.length;\n    }\n\n    /**\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n     * @private\n     * @param {...FabricObject[]} objects objects to remove\n     * @returns {FabricObject[]} removed objects\n     */\n    remove(...objects: FabricObject[]) {\n      const array = this._objects,\n        removed: FabricObject[] = [];\n      objects.forEach((object) => {\n        const index = array.indexOf(object);\n        // only call onObjectRemoved if an object was actually removed\n        if (index !== -1) {\n          array.splice(index, 1);\n          removed.push(object);\n          this._onObjectRemoved(object);\n        }\n      });\n      return removed;\n    }\n\n    /**\n     * Executes given function for each object in this group\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\n     * now is just a shortcut.\n     * @param {Function} callback\n     *                   Callback invoked with current object as first argument,\n     *                   index - as second and an array of all objects - as third.\n     */\n    forEachObject(\n      callback: (\n        object: FabricObject,\n        index: number,\n        array: FabricObject[],\n      ) => any,\n    ) {\n      this.getObjects().forEach((object, index, objects) =>\n        callback(object, index, objects),\n      );\n    }\n\n    /**\n     * Returns an array of children objects of this instance\n     * @param {...String} [types] When specified, only objects of these types are returned\n     * @return {Array}\n     */\n    getObjects(...types: string[]) {\n      if (types.length === 0) {\n        return [...this._objects];\n      }\n      return this._objects.filter((o) => o.isType(...types));\n    }\n\n    /**\n     * Returns object at specified index\n     * @param {Number} index\n     * @return {Object} object at index\n     */\n    item(index: number) {\n      return this._objects[index];\n    }\n\n    /**\n     * Returns true if collection contains no objects\n     * @return {Boolean} true if collection is empty\n     */\n    isEmpty() {\n      return this._objects.length === 0;\n    }\n\n    /**\n     * Returns a size of a collection (i.e: length of an array containing its objects)\n     * @return {Number} Collection size\n     */\n    size() {\n      return this._objects.length;\n    }\n\n    /**\n     * Returns true if collection contains an object.\\\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\n     * @param {Object} object Object to check against\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n     * @return {Boolean} `true` if collection contains an object\n     */\n    contains(object: FabricObject, deep?: boolean): boolean {\n      if (this._objects.includes(object)) {\n        return true;\n      } else if (deep) {\n        return this._objects.some(\n          (obj) =>\n            obj instanceof Collection &&\n            (obj as unknown as Collection).contains(object, true),\n        );\n      }\n      return false;\n    }\n\n    /**\n     * Returns number representation of a collection complexity\n     * @return {Number} complexity\n     */\n    complexity() {\n      return this._objects.reduce((memo, current) => {\n        memo += current.complexity ? current.complexity() : 0;\n        return memo;\n      }, 0);\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectToBack(object: FabricObject) {\n      if (!object || object === this._objects[0]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectToFront(object: FabricObject) {\n      if (!object || object === this._objects[this._objects.length - 1]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, `intersecting` allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== 0) {\n        // if object is not on the bottom of stack\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== this._objects.length - 1) {\n        // if object is not on top of stack (last item in an array)\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {number} index Position to move to\n     * @returns {boolean} true if change occurred\n     */\n    moveObjectTo(object: FabricObject, index: number) {\n      if (object === this._objects[index]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    findNewLowerIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse down the stack looking for the nearest intersecting object\n        for (let i = idx - 1; i >= 0; --i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    }\n\n    findNewUpperIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse up the stack looking for the nearest intersecting object\n        for (let i = idx + 1; i < this._objects.length; ++i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    }\n\n    /**\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\n     * This is meant to work with selection. Is not a generic method.\n     * @param {TBBox} bbox a bounding box in scene coordinates\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\n     */\n    collectObjects(\n      { left, top, width, height }: TBBox,\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {},\n    ) {\n      const objects: InteractiveFabricObject[] = [],\n        tl = new Point(left, top),\n        br = tl.add(new Point(width, height));\n\n      // we iterate reverse order to collect top first in case of click.\n      for (let i = this._objects.length - 1; i >= 0; i--) {\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\n        if (\n          object.selectable &&\n          object.visible &&\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\n            object.isContainedWithinRect(tl, br) ||\n            (includeIntersecting && object.containsPoint(tl)) ||\n            (includeIntersecting && object.containsPoint(br)))\n        ) {\n          objects.push(object);\n        }\n      }\n\n      return objects;\n    }\n  }\n\n  // https://github.com/microsoft/TypeScript/issues/32080\n  return Collection as typeof Collection & TBase;\n}\n","import { Observable } from './Observable';\n\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\n  /**\n   * Sets object's properties from options, for initialization only\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected _setOptions(options: any = {}) {\n    for (const prop in options) {\n      this.set(prop, options[prop]);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setObject(obj: Record<string, any>) {\n    for (const prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  }\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   */\n  set(key: string | Record<string, any>, value?: any) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      this._set(key, value);\n    }\n    return this;\n  }\n\n  _set(key: string, value: any) {\n    this[key as keyof this] = value;\n  }\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   */\n  toggle(property: string) {\n    const value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  }\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get(property: string): any {\n    return this[property as keyof this];\n  }\n}\n","import { getFabricWindow } from '../../env';\n\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\n  return getFabricWindow().requestAnimationFrame(callback);\n}\n\nexport function cancelAnimFrame(handle: number): void {\n  return getFabricWindow().cancelAnimationFrame(handle);\n}\n","let id = 0;\n\nexport const uid = () => id++;\n","import { getFabricDocument } from '../../env';\nimport type { ImageFormat, TSize } from '../../typedefs';\nimport { FabricError } from '../internals/console';\n/**\n * Creates canvas element\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElement = (): HTMLCanvasElement => {\n  const element = getFabricDocument().createElement('canvas');\n  if (!element || typeof element.getContext === 'undefined') {\n    throw new FabricError('Failed to create `canvas` element');\n  }\n  return element;\n};\n\n/**\n * Creates image element (works on client and node)\n * @return {HTMLImageElement} HTML image element\n */\nexport const createImage = (): HTMLImageElement =>\n  getFabricDocument().createElement('img');\n\n/**\n * Creates a canvas element that is a copy of another and is also painted\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const copyCanvasElement = (\n  canvas: HTMLCanvasElement,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElementFor(canvas);\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\n  return newCanvas;\n};\n\nexport const createCanvasElementFor = (\n  canvas: HTMLCanvasElement | ImageData | HTMLImageElement | TSize,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElement();\n  newCanvas.width = canvas.width;\n  newCanvas.height = canvas.height;\n  return newCanvas;\n};\n\n/**\n * since 2.6.0 moved from canvas instance to utility.\n * possibly useless\n * @param {CanvasElement} canvasEl to copy size and content of\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n * @param {Number} quality <= 1 and > 0\n * @return {String} data url\n */\nexport const toDataURL = (\n  canvasEl: HTMLCanvasElement,\n  format: ImageFormat,\n  quality: number,\n) => canvasEl.toDataURL(`image/${format}`, quality);\n\nexport const isHTMLCanvas = (\n  canvas?: HTMLCanvasElement | string,\n): canvas is HTMLCanvasElement => {\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\n};\n\nexport const toBlob = (\n  canvasEl: HTMLCanvasElement,\n  format?: ImageFormat,\n  quality?: number,\n) =>\n  new Promise((resolve, _) => {\n    canvasEl.toBlob(resolve, `image/${format}`, quality);\n  }) as Promise<Blob | null>;\n","import type { TRadian, TDegree } from '../../typedefs';\nimport { PiBy180 } from '../../constants';\n\n/**\n * Transforms degrees to radians.\n * @param {TDegree} degrees value in degrees\n * @return {TRadian} value in radians\n */\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\n  (degrees * PiBy180) as TRadian;\n\n/**\n * Transforms radians to degrees.\n * @param {TRadian} radians value in radians\n * @return {TDegree} value in degrees\n */\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\n  (radians / PiBy180) as TDegree;\n","import { iMatrix } from '../../constants';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\nimport { cos } from './cos';\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\nimport { sin } from './sin';\n\nexport type TRotateMatrixArgs = {\n  angle?: TDegree;\n};\n\nexport type TTranslateMatrixArgs = {\n  translateX?: number;\n  translateY?: number;\n};\n\nexport type TScaleMatrixArgs = {\n  scaleX?: number;\n  scaleY?: number;\n  flipX?: boolean;\n  flipY?: boolean;\n  skewX?: TDegree;\n  skewY?: TDegree;\n};\n\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\n  TRotateMatrixArgs &\n  TScaleMatrixArgs;\n\nexport type TQrDecomposeOut = Required<\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\n>;\n\nexport const isIdentityMatrix = (mat: TMat2D) =>\n  mat.every((value, index) => value === iMatrix[index]);\n\n/**\n * Apply transform t to point p\n * @deprecated use {@link Point#transform}\n * @param  {Point | XY} p The point to transform\n * @param  {Array} t The transform\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n * @return {Point} The transformed point\n */\nexport const transformPoint = (\n  p: XY,\n  t: TMat2D,\n  ignoreOffset?: boolean,\n): Point => new Point(p).transform(t, ignoreOffset);\n\n/**\n * Invert transformation t\n * @param {Array} t The transform\n * @return {Array} The inverted transform\n */\nexport const invertTransform = (t: TMat2D): TMat2D => {\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\n  r[4] = -x;\n  r[5] = -y;\n  return r;\n};\n\n/**\n * Multiply matrix A by matrix B to nest transformations\n * @param  {TMat2D} a First transformMatrix\n * @param  {TMat2D} b Second transformMatrix\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n * @return {TMat2D} The product of the two transform matrices\n */\nexport const multiplyTransformMatrices = (\n  a: TMat2D,\n  b: TMat2D,\n  is2x2?: boolean,\n): TMat2D =>\n  [\n    a[0] * b[0] + a[2] * b[1],\n    a[1] * b[0] + a[3] * b[1],\n    a[0] * b[2] + a[2] * b[3],\n    a[1] * b[2] + a[3] * b[3],\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\n  ] as TMat2D;\n\n/**\n * Multiplies {@link matrices} such that a matrix defines the plane for the rest of the matrices **after** it\n *\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\n *\n * @param matrices an array of matrices\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\n * @returns the multiplication product\n */\nexport const multiplyTransformMatrixArray = (\n  matrices: (TMat2D | undefined | null | false)[],\n  is2x2?: boolean,\n) =>\n  matrices.reduceRight(\n    (product: TMat2D, curr) =>\n      curr && product\n        ? multiplyTransformMatrices(curr, product, is2x2)\n        : curr || product,\n    undefined as unknown as TMat2D,\n  ) || iMatrix.concat();\n\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\n  Math.atan2(b, a) as TRadian;\n\n/**\n * Decomposes standard 2x3 matrix into transform components\n * @param  {TMat2D} a transformMatrix\n * @return {Object} Components of transform\n */\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\n  const angle = calcPlaneRotation(a),\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\n    scaleX = Math.sqrt(denom),\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\n  return {\n    angle: radiansToDegrees(angle),\n    scaleX,\n    scaleY,\n    skewX: radiansToDegrees(skewX),\n    skewY: 0 as TDegree,\n    translateX: a[4] || 0,\n    translateY: a[5] || 0,\n  };\n};\n\n/**\n * Generate a translation matrix\n *\n * A translation matrix in the form of\n * [ 1 0 x ]\n * [ 0 1 y ]\n * [ 0 0 1 ]\n *\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\n *\n * @param {number} x translation on X axis\n * @param {number} [y] translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\n  1,\n  0,\n  0,\n  1,\n  x,\n  y,\n];\n\n/**\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\n *\n * A matrix in the form of\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\n * [0       0      1                 ]\n *\n *\n * @param {TDegree} angle rotation in degrees\n * @param {XY} [pivotPoint] pivot point to rotate around\n * @returns {TMat2D} matrix\n */\nexport function createRotateMatrix(\n  { angle = 0 }: TRotateMatrixArgs = {},\n  { x = 0, y = 0 }: Partial<XY> = {},\n): TMat2D {\n  const angleRadiant = degreesToRadians(angle),\n    cosValue = cos(angleRadiant),\n    sinValue = sin(angleRadiant);\n  return [\n    cosValue,\n    sinValue,\n    -sinValue,\n    cosValue,\n    x ? x - (cosValue * x - sinValue * y) : 0,\n    y ? y - (sinValue * x + cosValue * y) : 0,\n  ];\n}\n\n/**\n * Generate a scale matrix around the point (0,0)\n *\n * A matrix in the form of\n * [x 0 0]\n * [0 y 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\n *\n * @param {number} x scale on X axis\n * @param {number} [y] scale on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\n  x,\n  0,\n  0,\n  y,\n  0,\n  0,\n];\n\nexport const angleToSkew = (angle: TDegree) =>\n  Math.tan(degreesToRadians(angle));\n\nexport const skewToAngle = (value: TRadian) =>\n  radiansToDegrees(Math.atan(value));\n\n/**\n * Generate a skew matrix for the X axis\n *\n * A matrix in the form of\n * [1 x 0]\n * [0 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\n *\n * @param {TDegree} skewValue translation on X axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  0,\n  angleToSkew(skewValue),\n  1,\n  0,\n  0,\n];\n\n/**\n * Generate a skew matrix for the Y axis\n *\n * A matrix in the form of\n * [1 0 0]\n * [y 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\n *\n * @param {TDegree} skewValue translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  angleToSkew(skewValue),\n  0,\n  1,\n  0,\n  0,\n];\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet.\n * is called DimensionsTransformMatrix because those properties are the one that influence\n * the size of the resulting box of the object.\n * @param  {Object} options\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @return {Number[]} transform matrix\n */\nexport const calcDimensionsMatrix = ({\n  scaleX = 1,\n  scaleY = 1,\n  flipX = false,\n  flipY = false,\n  skewX = 0 as TDegree,\n  skewY = 0 as TDegree,\n}: TScaleMatrixArgs) => {\n  let matrix = createScaleMatrix(\n    flipX ? -scaleX : scaleX,\n    flipY ? -scaleY : scaleY,\n  );\n  if (skewX) {\n    matrix = multiplyTransformMatrices(matrix, createSkewXMatrix(skewX), true);\n  }\n  if (skewY) {\n    matrix = multiplyTransformMatrices(matrix, createSkewYMatrix(skewY), true);\n  }\n  return matrix;\n};\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet\n * Before changing this function look at: src/benchmarks/calcTransformMatrix.mjs\n * @param  {Object} options\n * @param  {Number} [options.angle]\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @param  {Number} [options.translateX]\n * @param  {Number} [options.translateY]\n * @return {Number[]} transform matrix\n */\nexport const composeMatrix = (options: TComposeMatrixArgs): TMat2D => {\n  const { translateX = 0, translateY = 0, angle = 0 as TDegree } = options;\n  let matrix = createTranslateMatrix(translateX, translateY);\n  if (angle) {\n    matrix = multiplyTransformMatrices(matrix, createRotateMatrix({ angle }));\n  }\n  const scaleMatrix = calcDimensionsMatrix(options);\n  if (!isIdentityMatrix(scaleMatrix)) {\n    matrix = multiplyTransformMatrices(matrix, scaleMatrix);\n  }\n  return matrix;\n};\n","import { noop } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type {\n  Abortable,\n  Constructor,\n  TCrossOrigin,\n  TFiller,\n} from '../../typedefs';\nimport { createImage } from './dom';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { BaseFilter } from '../../filters/BaseFilter';\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\nimport { FabricError, SignalAbortedError } from '../internals/console';\nimport type { Shadow } from '../../Shadow';\n\nexport type LoadImageOptions = Abortable & {\n  /**\n   * cors value for the image loading, default to anonymous\n   */\n  crossOrigin?: TCrossOrigin;\n};\n\n/**\n * Loads image element from given url and resolve it, or catch.\n * @param {String} url URL representing an image\n * @param {LoadImageOptions} [options] image loading options\n * @returns {Promise<HTMLImageElement>} the loaded image.\n */\nexport const loadImage = (\n  url: string,\n  { signal, crossOrigin = null }: LoadImageOptions = {},\n) =>\n  new Promise<HTMLImageElement>(function (resolve, reject) {\n    if (signal && signal.aborted) {\n      return reject(new SignalAbortedError('loadImage'));\n    }\n    const img = createImage();\n    let abort: EventListenerOrEventListenerObject;\n    if (signal) {\n      abort = function (err: Event) {\n        img.src = '';\n        reject(err);\n      };\n      signal.addEventListener('abort', abort, { once: true });\n    }\n    const done = function () {\n      img.onload = img.onerror = null;\n      abort && signal?.removeEventListener('abort', abort);\n      resolve(img);\n    };\n    if (!url) {\n      done();\n      return;\n    }\n    img.onload = done;\n    img.onerror = function () {\n      abort && signal?.removeEventListener('abort', abort);\n      reject(new FabricError(`Error loading ${img.src}`));\n    };\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n  });\n\nexport type EnlivenObjectOptions = Abortable & {\n  /**\n   * Method for further parsing of object elements,\n   * called after each fabric object created.\n   */\n  reviver?: <\n    T extends\n      | BaseFabricObject\n      | FabricObject\n      | BaseFilter<string>\n      | Shadow\n      | TFiller,\n  >(\n    serializedObj: Record<string, any>,\n    instance: T,\n  ) => void;\n};\n\n/**\n * @TODO type this correctly.\n * Creates corresponding fabric instances from their object representations\n * @param {Object[]} objects Objects to enliven\n * @param {EnlivenObjectOptions} [options]\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\n * called after each fabric object created.\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<FabricObject[]>}\n */\nexport const enlivenObjects = <\n  T extends\n    | BaseFabricObject\n    | FabricObject\n    | BaseFilter<string>\n    | Shadow\n    | TFiller,\n>(\n  objects: any[],\n  { signal, reviver = noop }: EnlivenObjectOptions = {},\n) =>\n  new Promise<T[]>((resolve, reject) => {\n    const instances: T[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    Promise.all(\n      objects.map((obj) =>\n        classRegistry\n          .getClass<\n            Constructor<T> & {\n              fromObject(options: any, context: Abortable): Promise<T>;\n            }\n          >(obj.type)\n          .fromObject(obj, { signal })\n          .then((fabricInstance) => {\n            reviver(obj, fabricInstance);\n            instances.push(fabricInstance);\n            return fabricInstance;\n          }),\n      ),\n    )\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance) => {\n          (instance as FabricObject).dispose &&\n            (instance as FabricObject).dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n\n/**\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\n */\nexport const enlivenObjectEnlivables = <\n  R = Record<string, FabricObject | TFiller | null>,\n>(\n  serializedObject: any,\n  { signal }: Abortable = {},\n) =>\n  new Promise<R>((resolve, reject) => {\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    // enlive every possible property\n    const promises = Object.values(serializedObject).map((value: any) => {\n      if (!value) {\n        return value;\n      }\n      /**\n       * clipPath or shadow or gradient or text on a path or a pattern,\n       * or the backgroundImage or overlayImage of canvas\n       * If we have a type and there is a classe registered for it, we enlive it.\n       * If there is no class registered for it we return the value as is\n       * */\n      if (value.type && classRegistry.has(value.type)) {\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\n          signal,\n        }).then(([enlived]) => {\n          instances.push(enlived);\n          return enlived;\n        });\n      }\n      return value;\n    });\n    const keys = Object.keys(serializedObject);\n    Promise.all(promises)\n      .then((enlived) => {\n        return enlived.reduce((acc, instance, index) => {\n          acc[keys[index]] = instance;\n          return acc;\n        }, {});\n      })\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance: any) => {\n          instance.dispose && instance.dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n","/**\n * Populates an object with properties of another object\n * @param {Object} source Source object\n * @param {string[]} properties Properties names to include\n * @returns object populated with the picked keys\n */\nexport const pick = <T extends Record<string, any>>(\n  source: T,\n  keys: (keyof T)[] = [],\n) => {\n  return keys.reduce((o, key) => {\n    if (key in source) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n\nexport const pickBy = <T extends Record<string, any>>(\n  source: T,\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean,\n) => {\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\n    if (predicate(source[key], key, source)) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n","/**\n * Map of the 148 color names with HEX code\n * @see: https://www.w3.org/TR/css3-color/#svg-color\n */\nexport const ColorNameMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#0FF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#00F',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#0FF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgrey: '#A9A9A9',\n  darkgreen: '#006400',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#F0F',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  grey: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgrey: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#0F0',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#F0F',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#F00',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FF0',\n  yellowgreen: '#9ACD32',\n};\n","import type { TRGBAColorSource } from './typedefs';\n\n/**\n * @param {Number} p\n * @param {Number} q\n * @param {Number} t\n * @return {Number}\n */\nexport const hue2rgb = (p: number, q: number, t: number): number => {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n\n/**\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\n * @param {Number} r Red color value\n * @param {Number} g Green color value\n * @param {Number} b Blue color value\n * @param {Number} a Alpha color value pass through\n * @return {TRGBColorSource} Hsl color\n */\nexport const rgb2Hsl = (\n  r: number,\n  g: number,\n  b: number,\n  a: number,\n): TRGBAColorSource => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const maxValue = Math.max(r, g, b),\n    minValue = Math.min(r, g, b);\n\n  let h!: number, s: number;\n  const l = (maxValue + minValue) / 2;\n\n  if (maxValue === minValue) {\n    h = s = 0; // achromatic\n  } else {\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\n};\n\nexport const fromAlphaToFloat = (value = '1') =>\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\n\n/**\n * Convert a value in the inclusive range [0, 255] to hex\n */\nexport const hexify = (value: number) =>\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\n\n/**\n * Calculate the grey average value for rgb and pass through alpha\n */\nexport const greyAverage = ([\n  r,\n  g,\n  b,\n  a = 1,\n]: TRGBAColorSource): TRGBAColorSource => {\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\n  return [avg, avg, avg, a];\n};\n","import { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { ColorNameMap } from './color_map';\nimport { reHSLa, reHex, reRGBa } from './constants';\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\nimport {\n  hue2rgb,\n  hexify,\n  rgb2Hsl,\n  fromAlphaToFloat,\n  greyAverage,\n} from './util';\n\n/**\n * @class Color common color operations\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\n */\nexport class Color {\n  private declare _source: TRGBAColorSource;\n  isUnrecognised = false;\n\n  /**\n   *\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\n   */\n  constructor(color?: TColorArg) {\n    if (!color) {\n      // we default to black as canvas does\n      this.setSource([0, 0, 0, 1]);\n    } else if (color instanceof Color) {\n      this.setSource([...color._source]);\n    } else if (Array.isArray(color)) {\n      const [r, g, b, a = 1] = color;\n      this.setSource([r, g, b, a]);\n    } else {\n      this.setSource(this._tryParsingColor(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} [color] Color value to parse\n   * @returns {TRGBAColorSource}\n   */\n  protected _tryParsingColor(color: string) {\n    color = color.toLowerCase();\n    if (color in ColorNameMap) {\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\n    }\n    return color === 'transparent'\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\n      : Color.sourceFromHex(color) ||\n          Color.sourceFromRgb(color) ||\n          Color.sourceFromHsl(color) ||\n          // color is not recognized\n          // we default to black as canvas does\n          // eslint-disable-next-line no-constant-binary-expression\n          ((this.isUnrecognised = true) && ([0, 0, 0, 1] as TRGBAColorSource));\n  }\n\n  /**\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @return {TRGBAColorSource}\n   */\n  getSource() {\n    return this._source;\n  }\n\n  /**\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @param {TRGBAColorSource} source\n   */\n  setSource(source: TRGBAColorSource) {\n    this._source = source;\n  }\n\n  /**\n   * Returns color representation in RGB format\n   * @return {String} ex: rgb(0-255,0-255,0-255)\n   */\n  toRgb() {\n    const [r, g, b] = this.getSource();\n    return `rgb(${r},${g},${b})`;\n  }\n\n  /**\n   * Returns color representation in RGBA format\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n   */\n  toRgba() {\n    return `rgba(${this.getSource().join(',')})`;\n  }\n\n  /**\n   * Returns color representation in HSL format\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n   */\n  toHsl() {\n    const [h, s, l] = rgb2Hsl(...this.getSource());\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /**\n   * Returns color representation in HSLA format\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n   */\n  toHsla() {\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\n    return `hsla(${h},${s}%,${l}%,${a})`;\n  }\n\n  /**\n   * Returns color representation in HEX format\n   * @return {String} ex: FF5555\n   */\n  toHex() {\n    const fullHex = this.toHexa();\n    return fullHex.slice(0, 6);\n  }\n\n  /**\n   * Returns color representation in HEXA format\n   * @return {String} ex: FF5555CC\n   */\n  toHexa() {\n    const [r, g, b, a] = this.getSource();\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\n  }\n\n  /**\n   * Gets value of alpha channel for this color\n   * @return {Number} 0-1\n   */\n  getAlpha() {\n    return this.getSource()[3];\n  }\n\n  /**\n   * Sets value of alpha channel for this color\n   * @param {Number} alpha Alpha value 0-1\n   * @return {Color} thisArg\n   */\n  setAlpha(alpha: number) {\n    this._source[3] = alpha;\n    return this;\n  }\n\n  /**\n   * Transforms color to its grayscale representation\n   * @return {Color} thisArg\n   */\n  toGrayscale() {\n    this.setSource(greyAverage(this.getSource()));\n    return this;\n  }\n\n  /**\n   * Transforms color to its black and white representation\n   * @param {Number} threshold\n   * @return {Color} thisArg\n   */\n  toBlackWhite(threshold: number) {\n    const [average, , , a] = greyAverage(this.getSource()),\n      bOrW = average < (threshold || 127) ? 0 : 255;\n    this.setSource([bOrW, bOrW, bOrW, a]);\n    return this;\n  }\n\n  /**\n   * Overlays color with another color\n   * @param {String|Color} otherColor\n   * @return {Color} thisArg\n   */\n  overlayWith(otherColor: string | Color) {\n    if (!(otherColor instanceof Color)) {\n      otherColor = new Color(otherColor);\n    }\n\n    const source = this.getSource(),\n      otherAlpha = 0.5,\n      otherSource = otherColor.getSource(),\n      [R, G, B] = source.map((value, index) =>\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha),\n      );\n\n    this.setSource([R, G, B, source[3]]);\n    return this;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {Color}\n   */\n  static fromRgb(color: string): Color {\n    return Color.fromRgba(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromRgba(color: string): Color {\n    return new Color(Color.sourceFromRgb(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reRGBa());\n    if (match) {\n      const [r, g, b] = match.slice(1, 4).map((value) => {\n        const parsedValue = parseFloat(value);\n        return value.endsWith('%')\n          ? Math.round(parsedValue * 2.55)\n          : parsedValue;\n      });\n      return [r, g, b, fromAlphaToFloat(match[4])];\n    }\n  }\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf Color\n   * @return {Color}\n   */\n  static fromHsl(color: string): Color {\n    return Color.fromHsla(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromHsla(color: string): Color {\n    return new Color(Color.sourceFromHsl(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {TRGBAColorSource | undefined} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reHSLa());\n    if (!match) {\n      return;\n    }\n    const match1degrees = Color.parseAngletoDegrees(match[1]);\n\n    const h = (((match1degrees % 360) + 360) % 360) / 360,\n      s = parseFloat(match[2]) / 100,\n      l = parseFloat(match[3]) / 100;\n    let r: number, g: number, b: number;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n        p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      fromAlphaToFloat(match[4]),\n    ];\n  }\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color Color value ex: FF5555\n   * @return {Color}\n   */\n  static fromHex(color: string): Color {\n    return new Color(Color.sourceFromHex(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\n    if (color.match(reHex())) {\n      const value = color.slice(color.indexOf('#') + 1),\n        isShortNotation = value.length <= 4;\n      let expandedValue: string[];\n      if (isShortNotation) {\n        expandedValue = value.split('').map((hex) => hex + hex);\n      } else {\n        expandedValue = value.match(/.{2}/g)!;\n      }\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\n        parseInt(hexCouple, 16),\n      );\n      return [r, g, b, a / 255];\n    }\n  }\n\n  /**\n   * Converts a string that could be any angle notation (50deg, 0.5turn, 2rad)\n   * into degrees without the 'deg' suffix\n   * @static\n   * @memberOf Color\n   * @param {String} value ex: 0deg, 0.5turn, 2rad\n   * @return {Number} number in degrees or NaN if inputs are invalid\n   */\n  static parseAngletoDegrees(value: string): number {\n    const lowercase = value.toLowerCase();\n    const numeric = parseFloat(lowercase);\n\n    if (lowercase.includes('rad')) {\n      return radiansToDegrees(numeric);\n    }\n\n    if (lowercase.includes('turn')) {\n      return numeric * 360;\n    }\n\n    // Value is probably just a number already in degrees eg '50'\n    return numeric;\n  }\n}\n","/**\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n * Formal syntax at the time of writing:\n * <rgb()> =\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\n * <alpha-value> = <number> | <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an rgba or rgb CSS color value\n *\n * /^          # Beginning of the string\n * rgba?       # \"rgb\" or \"rgba\"\n * \\(\\s*       # Opening parenthesis and optional whitespace\n * (\\d{0,3}    # 0 to three digits R channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the first color component\n * %?          # Optional percent sign after the first color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits G channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the second color component\n * %?          # Optional percent sign after the second color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits B channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the third color component\n * %?          # Optional percent sign after the third color component\n * \\s*         # Optional whitespace\n * (?:         # Beginning of non-capturing group for alpha value\n *  \\s*        # Optional whitespace\n *  [,/]       # Comma or slash separator for alpha value\n *  \\s*        # Optional whitespace\n *  (\\d{0,3}   # Zero to three digits\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\n *  )          # End of capturing group for alpha value\n *  %?         # Optional percent sign after alpha value\n *  \\s*        # Optional whitespace\n * )?          # End of non-capturing group for alpha value (optional)\n * \\)          # Closing parenthesis\n * $           # End of the string\n *\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\n *\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\n */\nexport const reRGBa = () =>\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n * Formal syntax at the time of writing:\n * <hsl()> =\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\n *\n * <hue> =\n *   <number>  |\n *   <angle>\n *\n * <alpha-value> =\n *   <number>      |\n *   <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an hsla or hsl CSS color value\n *\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\n * (\\d{0,3}          // Hue: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Hue: Optional (non capture group) decimal with one or more digits.\n * (?:deg|turn|rad)? // Hue: Optionally include suffix deg or turn or rad\n * )                 // Hue: End capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Saturation: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Saturation: Optional decimal with one or more digits in a non-capturing group\n * %?)               // Saturation: match optional % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Lightness: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Lightness: Optional decimal with one or more digits in a non-capturing group\n * %?)                // Lightness: match % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\n *   \\s*             // Matches any whitespace characters zero or more times\n *   [,/]            // Matches a comma or forward slash\n *   \\s*             // Matches any whitespace characters zero or more times\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\n *   \\s*             // Matches any whitespace characters zero or more times\n * )?                // Makes the alpha value group optional\n * \\)                // Matches the closing parenthesis\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\n *\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\n */\nexport const reHSLa = () =>\n  /^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n */\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\n","/**\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n * @param {number|string} number number to operate on\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {number}\n */\nexport const toFixed = (number: number | string, fractionDigits: number) =>\n  parseFloat(Number(number).toFixed(fractionDigits));\n","import { Color } from '../../color/Color';\nimport { config } from '../../config';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, NONE } from '../../constants';\nimport type {\n  TBBox,\n  TMat2D,\n  SVGElementName,\n  SupportedSVGUnit,\n} from '../../typedefs';\nimport { toFixed } from './toFixed';\n\n/**\n * Returns array of attributes for given svg that fabric parses\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\n * @return {Array} string names of supported attributes\n */\nexport const getSvgAttributes = (type: SVGElementName) => {\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\n  switch (type) {\n    case 'linearGradient':\n      return commonAttributes.concat([\n        'x1',\n        'y1',\n        'x2',\n        'y2',\n        'gradientUnits',\n        'gradientTransform',\n      ]);\n    case 'radialGradient':\n      return commonAttributes.concat([\n        'gradientUnits',\n        'gradientTransform',\n        'cx',\n        'cy',\n        'r',\n        'fx',\n        'fy',\n        'fr',\n      ]);\n    case 'stop':\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\n  }\n  return commonAttributes;\n};\n\n/**\n * Converts from attribute value to pixel value if applicable.\n * Returns converted pixels or original value not converted.\n * @param {string} value number to operate on\n * @param {number} fontSize\n * @return {number}\n */\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\n  const unit = /\\D{0,2}$/.exec(value),\n    number = parseFloat(value);\n  const dpi = config.DPI;\n  switch (unit?.[0] as SupportedSVGUnit) {\n    case 'mm':\n      return (number * dpi) / 25.4;\n\n    case 'cm':\n      return (number * dpi) / 2.54;\n\n    case 'in':\n      return number * dpi;\n\n    case 'pt':\n      return (number * dpi) / 72; // or * 4 / 3\n\n    case 'pc':\n      return ((number * dpi) / 72) * 12; // or * 16\n\n    case 'em':\n      return number * fontSize;\n\n    default:\n      return number;\n  }\n};\n\nexport type MeetOrSlice = 'meet' | 'slice';\n\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\n\nexport type TPreserveArParsed = {\n  meetOrSlice: MeetOrSlice;\n  alignX: MinMidMax;\n  alignY: MinMidMax;\n};\n\n// align can be either none or undefined or a combination of mid/max\nconst parseAlign = (align: string): MinMidMax[] => {\n  //divide align in alignX and alignY\n  if (align && align !== NONE) {\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\n  } else if (align === NONE) {\n    return [align, align];\n  }\n  return ['Mid', 'Mid'];\n};\n\n/**\n * Parse preserveAspectRatio attribute from element\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n * @param {string} attribute to be parsed\n * @return {Object} an object containing align and meetOrSlice attribute\n */\nexport const parsePreserveAspectRatioAttribute = (\n  attribute: string,\n): TPreserveArParsed => {\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\n    MinMidMax,\n    MeetOrSlice | undefined,\n  ];\n  const [alignX, alignY] = parseAlign(firstPart);\n  return {\n    meetOrSlice: secondPart || 'meet',\n    alignX,\n    alignY,\n  };\n};\n\n/**\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n * @param {TMat2D} transform an array with 6 numbers\n * @return {String} transform matrix for svg\n */\nexport const matrixToSVG = (transform: TMat2D) =>\n  'matrix(' +\n  transform\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\n    .join(' ') +\n  ')';\n\n/**\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n * @param prop\n * @param value\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\n * @returns\n */\nexport const colorPropToSVG = (\n  prop: string,\n  value?: any,\n  inlineStyle = true,\n) => {\n  let colorValue;\n  let opacityValue;\n  if (!value) {\n    colorValue = 'none';\n  } else if (value.toLive) {\n    colorValue = `url(#SVGID_${value.id})`;\n  } else {\n    const color = new Color(value),\n      opacity = color.getAlpha();\n\n    colorValue = color.toRgb();\n    if (opacity !== 1) {\n      opacityValue = opacity.toString();\n    }\n  }\n  if (inlineStyle) {\n    return `${prop}: ${colorValue}; ${\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\n    }`;\n  } else {\n    return `${prop}=\"${colorValue}\" ${\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\n    }`;\n  }\n};\n\nexport const createSVGRect = (\n  color: string,\n  { left, top, width, height }: TBBox,\n  precision = config.NUM_FRACTION_DIGITS,\n) => {\n  const svgColor = colorPropToSVG(FILL, color, false);\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\n    toFixed(value, precision),\n  );\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\n};\n","import type { FabricObject } from '../shapes/Object/Object';\nimport type { TFiller } from '../typedefs';\nimport type { FabricText } from '../shapes/Text/Text';\nimport type { Pattern } from '../Pattern';\nimport type { Path } from '../shapes/Path';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\n\nexport const isFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && (filler as TFiller).toLive !== undefined;\n};\n\nexport const isSerializableFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\n};\n\nexport const isPattern = (filler: TFiller): filler is Pattern => {\n  return (\n    !!filler && (filler as Pattern).offsetX !== undefined && 'source' in filler\n  );\n};\n\nexport const isTextObject = (\n  fabricObject?: FabricObject,\n): fabricObject is FabricText => {\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as FabricText)._renderText === 'function'\n  );\n};\n\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\n  // we could use instanceof but that would mean pulling in Text code for a simple check\n  // @todo discuss what to do and how to do\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\n  );\n};\n\nexport const isActiveSelection = (\n  fabricObject?: FabricObject,\n): fabricObject is ActiveSelection =>\n  !!fabricObject && 'multiSelectionStacking' in fabricObject;\n","/**\n * Returns element scroll offsets\n * @param {HTMLElement} element Element to operate on\n * @return {Object} Object with left/top values\n */\nexport function getScrollLeftTop(element: HTMLElement | null) {\n  const doc = element && getDocumentFromElement(element);\n  let left = 0,\n    top = 0;\n  if (!element || !doc) {\n    return { left, top };\n  }\n  let elementLoop: HTMLElement | Document | ShadowRoot = element;\n  const docElement = doc.documentElement,\n    body = doc.body || {\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  // While loop checks (and then sets element to) .parentNode OR .host\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n  while (\n    elementLoop &&\n    (elementLoop.parentNode || (elementLoop as unknown as ShadowRoot).host)\n  ) {\n    elementLoop = (elementLoop.parentNode ||\n      (elementLoop as unknown as ShadowRoot).host) as\n      | HTMLElement\n      | Document\n      | ShadowRoot;\n    if (elementLoop === doc) {\n      left = body.scrollLeft || docElement.scrollLeft || 0;\n      top = body.scrollTop || docElement.scrollTop || 0;\n    } else {\n      left += (elementLoop as HTMLElement).scrollLeft || 0;\n      top += (elementLoop as HTMLElement).scrollTop || 0;\n    }\n\n    if (\n      elementLoop.nodeType === 1 &&\n      (elementLoop as HTMLElement).style.position === 'fixed'\n    ) {\n      break;\n    }\n  }\n\n  return { left, top };\n}\n\nexport const getDocumentFromElement = (el: HTMLElement) =>\n  el.ownerDocument || null;\n\nexport const getWindowFromElement = (el: HTMLElement) =>\n  el.ownerDocument?.defaultView || null;\n","import { NONE } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1,\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>,\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 };\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle: CSSStyleDeclaration =\n    getWindowFromElement(element)?.getComputedStyle(element, null) ||\n    ({} as CSSStyleDeclaration);\n  offset.left += parseInt(elemStyle.borderLeftWidth, 10) || 0;\n  offset.top += parseInt(elemStyle.borderTopWidth, 10) || 0;\n  offset.left += parseInt(elemStyle.paddingLeft, 10) || 0;\n  offset.top += parseInt(elemStyle.paddingTop, 10) || 0;\n\n  let box = { left: 0, top: 0 };\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport type { CSSDimensions } from './util';\nimport { setCSSDimensions, getElementOffset } from './util';\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\nimport { setCanvasDimensions } from './util';\nimport { FabricError } from '../../util/internals/console';\n\nexport type CanvasItem = {\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class StaticCanvasDOMManager {\n  /**\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\n   * in order to return it to original state on dispose\n   * @type string\n   */\n  private _originalCanvasStyle?: string;\n\n  lower: CanvasItem;\n\n  constructor(arg0?: string | HTMLCanvasElement) {\n    const el = this.createLowerCanvas(arg0);\n    this.lower = { el, ctx: el.getContext('2d')! };\n  }\n\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n    const el = isHTMLCanvas(arg0)\n      ? arg0\n      : (arg0 &&\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\n        createCanvasElement();\n    if (el.hasAttribute('data-fabric')) {\n      throw new FabricError(\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?',\n      );\n    }\n    this._originalCanvasStyle = el.style.cssText;\n    el.setAttribute('data-fabric', 'main');\n    el.classList.add('lower-canvas');\n    return el;\n  }\n\n  cleanupDOM({ width, height }: TSize) {\n    const { el } = this.lower;\n    // restore canvas style and attributes\n    el.classList.remove('lower-canvas');\n    el.removeAttribute('data-fabric');\n    // restore canvas size to original size in case retina scaling was applied\n    el.setAttribute('width', `${width}`);\n    el.setAttribute('height', `${height}`);\n    el.style.cssText = this._originalCanvasStyle || '';\n    this._originalCanvasStyle = undefined;\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    const { el, ctx } = this.lower;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>) {\n    setCSSDimensions(this.lower.el, size);\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   */\n  calcOffset() {\n    return getElementOffset(this.lower.el);\n  }\n\n  dispose() {\n    getEnv().dispose(this.lower.el);\n    // @ts-expect-error disposing\n    delete this.lower;\n  }\n}\n","import { iMatrix } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\n\ninterface CanvasDrawableOptions {\n  /**\n   * if set to false background image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  backgroundVpt: boolean;\n\n  /**\n   * Background color of canvas instance.\n   * @type {(String|TFiller)}\n   * @default\n   */\n  backgroundColor: TFiller | string;\n\n  /**\n   * Background image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  backgroundImage?: FabricObject;\n\n  /**\n   * if set to false overlay image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  overlayVpt: boolean;\n\n  /**\n   * Overlay color of canvas instance.\n   * @since 1.3.9\n   * @type {(String|TFiller)}\n   * @default\n   */\n  overlayColor: TFiller | string;\n\n  /**\n   * Overlay image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  overlayImage?: FabricObject;\n}\n\ninterface CanvasRenderingOptions {\n  /**\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n   * since the renders are queued and executed one per frame.\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n   * Left default to true to do not break documentation and old app, fiddles.\n   * @type Boolean\n   * @default\n   */\n  renderOnAddRemove: boolean;\n\n  /**\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\n   * are not included in current viewport.\n   * May greatly help in applications with crowded canvas and use of zoom/pan\n   * If One of the corner of the bounding box of the object is on the canvas\n   * the objects get rendered.\n   * @type Boolean\n   * @default true\n   */\n  skipOffscreen: boolean;\n\n  /**\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n   * @type Boolean\n   * @default\n   */\n  enableRetinaScaling: boolean;\n\n  /**\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n   * @type Boolean\n   * @default\n   */\n  imageSmoothingEnabled: boolean;\n\n  /**\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n   * top left corner of the canvas.\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n   * @type FabricObject\n   */\n  clipPath?: FabricObject;\n}\n\nexport interface CanvasExportOptions {\n  /**\n   * Indicates whether toObject/toDatalessObject should include default values\n   * if set to false, takes precedence over the object value.\n   * @type Boolean\n   * @default\n   */\n  includeDefaultValues: boolean;\n\n  /**\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n   * a zoomed canvas will then produce zoomed SVG output.\n   * @type Boolean\n   * @default\n   */\n  svgViewportTransformation: boolean;\n}\n\nexport interface StaticCanvasOptions\n  extends CanvasDrawableOptions,\n    CanvasRenderingOptions,\n    CanvasExportOptions {\n  /**\n   * Width in virtual/logical pixels of the canvas.\n   * The canvas can be larger than width if retina scaling is active\n   * @type number\n   */\n  width: number;\n\n  /**\n   * Height in virtual/logical pixels of the canvas.\n   * The canvas can be taller than width if retina scaling is active\n   * @type height\n   */\n  height: number;\n\n  /**\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: boolean;\n\n  /**\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n   * It gives PRIORITY to DOM scrolling, it doesn't make it always possible.\n   * If is true, when using a touch event on the canvas, the canvas will scroll if scroll is possible.\n   * If we are in drawing mode or if we are selecting an object the canvas preventDefault and so it won't scroll\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: boolean;\n\n  /**\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n   * @type Array\n   * @example <caption>Default transform</caption>\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n   * @default\n   */\n  viewportTransform: TMat2D;\n}\n\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\n  backgroundVpt: true,\n  backgroundColor: '',\n  overlayVpt: true,\n  overlayColor: '',\n\n  includeDefaultValues: true,\n  svgViewportTransformation: true,\n\n  renderOnAddRemove: true,\n  skipOffscreen: true,\n  enableRetinaScaling: true,\n  imageSmoothingEnabled: true,\n\n  /**\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: false,\n  /**\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: false,\n\n  viewportTransform: [...iMatrix],\n};\n","import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor, toBlob, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents,\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  protected declare hasLostContext: boolean;\n  protected declare nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  /**\n   * When true control drawing is skipped.\n   * This boolean is used to avoid toDataURL to export controls.\n   * Usage of this boolean to build up other flows and features is not supported\n   * @type Boolean\n   * @default false\n   */\n  protected declare skipControlsDrawing: boolean;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  protected declare __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {},\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults(),\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.skipControlsDrawing = false;\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas',\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Sets width of this canvas instance\n   * @param {Number|String} value                         Value to set width to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setWidth(\n    value: TSize['width'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setWidth(\n    value: CSSDimensions['width'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setWidth(value: number, options?: never) {\n    return this.setDimensions({ width: value }, options);\n  }\n\n  /**s\n   * Sets height of this canvas instance\n   * @param {Number|String} value                         Value to set height to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setHeight(\n    value: TSize['height'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setHeight(\n    value: CSSDimensions['height'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setHeight(value: CSSDimensions['height'], options?: never) {\n    return this.setDimensions({ height: value }, options);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {},\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions,\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    this.viewportTransform = vpt;\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5],\n      ),\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(_ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      // todo migrate to the newer one\n      path.shouldCache();\n      path._transformDone = true;\n      (path as TCachedFabricObject).renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject,\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY,\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay',\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * Returned value is an object with top and left properties\n   * @return {Object} object with \"top\" and \"left\" number values\n   * @deprecated migrate to `getCenterPoint`\n   */\n  getCenter() {\n    return {\n      top: this.height / 2,\n      left: this.width / 2,\n    };\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y),\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform),\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * var json = canvas.toJSON();\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude),\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n',\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n',\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver,\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`,\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver?: TSVGReviver,\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`,\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n',\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {},\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal },\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElementFor(this);\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n  toBlob(options = {} as TDataUrlOptions): Promise<Blob | null> {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toBlob(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions,\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      originalSkipControlsDrawing = this.skipControlsDrawing,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElementFor({\n        width: scaledWidth,\n        height: scaledHeight,\n      }),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.skipControlsDrawing = true;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    this.skipControlsDrawing = originalSkipControlsDrawing;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { getScrollLeftTop } from './dom_misc';\n\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\n\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\n  const touchProp = (event as TouchEvent).changedTouches;\n  if (touchProp && touchProp[0]) {\n    return touchProp[0];\n  }\n  return event as MouseEvent;\n}\n\nexport const getPointer = (event: TPointerEvent): Point => {\n  const element = event.target as HTMLElement,\n    scroll = getScrollLeftTop(element),\n    _evt = getTouchInfo(event);\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\n};\n\nexport const isTouchEvent = (event: TPointerEvent) =>\n  touchEvents.includes(event.type) ||\n  (event as PointerEvent).pointerType === 'touch';\n\nexport const stopEvent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import type { XY } from '../../Point';\nimport type { TBBox } from '../../typedefs';\n\n/**\n * Calculates bounding box (left, top, width, height) from given `points`\n * @param {XY[]} points\n * @return {Object} Object with left, top, width, height properties\n */\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\n  let left = 0,\n    top = 0,\n    width = 0,\n    height = 0;\n\n  for (let i = 0, len = points.length; i < len; i++) {\n    const { x, y } = points[i];\n    if (x > width || !i) width = x;\n    if (x < left || !i) left = x;\n    if (y > height || !i) height = y;\n    if (y < top || !i) top = y;\n  }\n\n  return {\n    left,\n    top,\n    width: width - left,\n    height: height - top,\n  };\n};\n","import { Point } from '../../Point';\nimport { CENTER } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from './matrix';\n\n/**\n * given an object and a transform, apply the inverse transform to the object,\n * this is equivalent to remove from that object that transformation, so that\n * added in a space with the removed transform, the object will be the same as before.\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\n * in the opposite direction.\n * This util is used to add objects inside transformed groups or nested groups.\n * @param {FabricObject} object the object you want to transform\n * @param {TMat2D} transform the destination transform\n */\nexport const removeTransformFromObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const inverted = invertTransform(transform),\n    finalTransform = multiplyTransformMatrices(\n      inverted,\n      object.calcOwnMatrix(),\n    );\n  applyTransformToObject(object, finalTransform);\n};\n\n/**\n * given an object and a transform, apply the transform to the object.\n * this is equivalent to change the space where the object is drawn.\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\n * This is used when removing an object from an active selection for example.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(transform, object.calcOwnMatrix()),\n  );\n\n/**\n * discard an object transform state and apply the one from the matrix.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const applyTransformToObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\n      qrDecompose(transform),\n    center = new Point(translateX, translateY);\n  object.flipX = false;\n  object.flipY = false;\n  Object.assign(object, otherOptions);\n  object.set({ scaleX, scaleY });\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n/**\n * reset an object transform state to neutral. Top and left are not accounted for\n * @param  {FabricObject} target object to transform\n */\nexport const resetObjectTransform = (target: FabricObject) => {\n  target.scaleX = 1;\n  target.scaleY = 1;\n  target.skewX = 0;\n  target.skewY = 0;\n  target.flipX = false;\n  target.flipY = false;\n  target.rotate(0);\n};\n\n/**\n * Extract Object transform values\n * @param  {FabricObject} target object to read from\n * @return {Object} Components of transform\n */\nexport const saveObjectTransform = (target: FabricObject) => ({\n  scaleX: target.scaleX,\n  scaleY: target.scaleY,\n  skewX: target.skewX,\n  skewY: target.skewY,\n  angle: target.angle,\n  left: target.left,\n  flipX: target.flipX,\n  flipY: target.flipY,\n  top: target.top,\n});\n\n/**\n * given a width and height, return the size of the bounding box\n * that can contains the box with width/height with applied transform.\n * Use to calculate the boxes around objects for controls.\n * @param {Number} width\n * @param {Number} height\n * @param {TMat2D} t\n * @returns {Point} size\n */\nexport const sizeAfterTransform = (\n  width: number,\n  height: number,\n  t: TMat2D,\n) => {\n  const dimX = width / 2,\n    dimY = height / 2,\n    points = [\n      new Point(-dimX, -dimY),\n      new Point(dimX, -dimY),\n      new Point(-dimX, dimY),\n      new Point(dimX, dimY),\n    ].map((p) => p.transform(t)),\n    bbox = makeBoundingBoxFromPoints(points);\n  return new Point(bbox.width, bbox.height);\n};\n","import { iMatrix } from '../../constants';\nimport type { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\nimport { applyTransformToObject } from './objectTransforms';\n\n/**\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\n * @param [from]\n * @param [to]\n * @returns\n */\nexport const calcPlaneChangeMatrix = (\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n) => multiplyTransformMatrices(invertTransform(to), from);\n\n/**\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\n * From the canvas/viewer's perspective the point remains unchanged.\n *\n * @example <caption>Send point from canvas plane to group plane</caption>\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\n * var group = new Group([obj], { strokeWidth: 0 });\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\n *\n * @param {Point} point\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\n * @returns {Point} transformed point\n */\nexport const sendPointToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\n\n/**\n * See {@link sendPointToPlane}\n */\nexport const sendVectorToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\n\n/**\n *\n * A util that abstracts applying transform to objects.\\\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\n * Changes the space/plane where `object` is drawn.\\\n * From the canvas/viewer's perspective `object` remains unchanged.\n *\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\n * let obj, obj2;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * // render\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\n * obj.clipPath = undefined;\n * obj2.clipPath = clipPath;\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\n *\n * @example <caption>Clip an object's clip path with an existing object</caption>\n * let obj, existingObj;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\n * clipPath.clipPath = existingObj;\n *\n * @param {FabricObject} object\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\n * @returns {Matrix} the transform matrix that was applied to `object`\n */\nexport const sendObjectToPlane = (\n  object: FabricObject,\n  from?: TMat2D,\n  to?: TMat2D,\n): TMat2D => {\n  const t = calcPlaneChangeMatrix(from, to);\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(t, object.calcOwnMatrix()),\n  );\n  return t;\n};\n","import type {\n  ObjectModificationEvents,\n  TModificationEvents,\n} from '../EventTypeDefs';\n\nexport const fireEvent = (\n  eventName: TModificationEvents,\n  options: ObjectModificationEvents[typeof eventName],\n) => {\n  const {\n    transform: { target },\n  } = options;\n  target.canvas?.fire(`object:${eventName}`, {\n    ...options,\n    target,\n  });\n  target.fire(eventName, options);\n};\n","import type { TOriginX, TOriginY } from '../../typedefs';\n\nconst originOffset = {\n  left: -0.5,\n  top: -0.5,\n  center: 0,\n  bottom: 0.5,\n  right: 0.5,\n};\n/**\n * Resolves origin value relative to center\n * @private\n * @param {TOriginX | TOriginY} originValue originX / originY\n * @returns number\n */\n\nexport const resolveOrigin = (\n  originValue: TOriginX | TOriginY | number,\n): number =>\n  typeof originValue === 'string'\n    ? originOffset[originValue]\n    : originValue - 0.5;\n","import type {\n  TPointerEvent,\n  Transform,\n  TransformAction,\n  BasicTransformEvent,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TOriginX, TOriginY } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { CENTER } from '../constants';\n\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\n\n/**\n * @param {Boolean} alreadySelected true if target is already selected\n * @param {String} corner a string representing the corner ml, mr, tl ...\n * @param {Event} e Event object\n * @param {FabricObject} [target] inserted back to help overriding. Unused\n */\nexport const getActionFromCorner = (\n  alreadySelected: boolean,\n  corner: string | undefined,\n  e: TPointerEvent,\n  target: FabricObject,\n) => {\n  if (!corner || !alreadySelected) {\n    return 'drag';\n  }\n  const control = target.controls[corner];\n  return control.getActionName(e, control, target);\n};\n\n/**\n * Checks if transform is centered\n * @param {Object} transform transform data\n * @return {Boolean} true if transform is centered\n */\nexport function isTransformCentered(transform: Transform) {\n  return (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) &&\n    resolveOrigin(transform.originY) === resolveOrigin(CENTER)\n  );\n}\n\nexport function invertOrigin(origin: TOriginX | TOriginY) {\n  return -resolveOrigin(origin) + 0.5;\n}\n\nexport const isLocked = (\n  target: FabricObject,\n  lockingKey:\n    | 'lockMovementX'\n    | 'lockMovementY'\n    | 'lockRotation'\n    | 'lockScalingX'\n    | 'lockScalingY'\n    | 'lockSkewingX'\n    | 'lockSkewingY'\n    | 'lockScalingFlip',\n) => target[lockingKey];\n\nexport const commonEventInfo: TransformAction<\n  Transform,\n  BasicTransformEvent\n> = (eventData, transform, x, y) => {\n  return {\n    e: eventData,\n    transform,\n    pointer: new Point(x, y),\n  };\n};\n\n/**\n * Combine control position and object angle to find the control direction compared\n * to the object center.\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n * @param {Control} control the control class\n * @return {Number} 0 - 7 a quadrant number\n */\nexport function findCornerQuadrant(\n  fabricObject: FabricObject,\n  control: Control,\n): number {\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle(),\n    cornerAngle =\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n  return Math.round((cornerAngle % 360) / 45);\n}\n\n/**\n * @returns the normalized point (rotated relative to center) in local coordinates\n */\nfunction normalizePoint(\n  target: FabricObject,\n  point: Point,\n  originX: TOriginX,\n  originY: TOriginY,\n): Point {\n  const center = target.getRelativeCenterPoint(),\n    p =\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\n        ? target.translateToGivenOrigin(\n            center,\n            CENTER,\n            CENTER,\n            originX,\n            originY,\n          )\n        : new Point(target.left, target.top),\n    p2 = target.angle\n      ? point.rotate(-degreesToRadians(target.angle), center)\n      : point;\n  return p2.subtract(p);\n}\n\n/**\n * Transforms a point to the offset from the given origin\n * @param {Object} transform\n * @param {String} originX\n * @param {String} originY\n * @param {number} x\n * @param {number} y\n * @return {Fabric.Point} the normalized point\n */\nexport function getLocalPoint(\n  { target, corner }: Transform,\n  originX: TOriginX,\n  originY: TOriginY,\n  x: number,\n  y: number,\n) {\n  const control = target.controls[corner],\n    zoom = target.canvas?.getZoom() || 1,\n    padding = target.padding / zoom,\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\n  if (localPoint.x >= padding) {\n    localPoint.x -= padding;\n  }\n  if (localPoint.x <= -padding) {\n    localPoint.x += padding;\n  }\n  if (localPoint.y >= padding) {\n    localPoint.y -= padding;\n  }\n  if (localPoint.y <= padding) {\n    localPoint.y += padding;\n  }\n  localPoint.x -= control.offsetX;\n  localPoint.y -= control.offsetY;\n  return localPoint;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { LEFT, TOP, MOVING } from '../constants';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo, isLocked } from './util';\n\n/**\n * Action handler\n * @private\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if the translation occurred\n */\nexport const dragHandler: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const { target, offsetX, offsetY } = transform,\n    newLeft = x - offsetX,\n    newTop = y - offsetY,\n    moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\n  moveX && target.set(LEFT, newLeft);\n  moveY && target.set(TOP, newTop);\n  if (moveX || moveY) {\n    fireEvent(MOVING, commonEventInfo(eventData, transform, x, y));\n  }\n  return moveX || moveY;\n};\n","import type { TSVGReviver } from '../../typedefs';\nimport { uid } from '../../util/internals/uid';\nimport { colorPropToSVG, matrixToSVG } from '../../util/misc/svgParsing';\nimport { FILL, NONE, STROKE } from '../../constants';\nimport type { FabricObject } from './FabricObject';\nimport { isFiller } from '../../util/typeAssertions';\n\nexport class FabricObjectSVGExportMixin {\n  /**\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\n   * This reference is a UID in the fabric namespace and is temporary stored here.\n   * @type {String}\n   */\n  declare clipPathId?: string;\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    skipShadow?: boolean,\n  ) {\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n      strokeDashArray = this.strokeDashArray\n        ? this.strokeDashArray.join(' ')\n        : NONE,\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n      visibility = this.visible ? '' : ' visibility: hidden;',\n      filter = skipShadow ? '' : this.getSvgFilter(),\n      fill = colorPropToSVG(FILL, this.fill),\n      stroke = colorPropToSVG(STROKE, this.stroke);\n\n    return [\n      stroke,\n      'stroke-width: ',\n      strokeWidth,\n      '; ',\n      'stroke-dasharray: ',\n      strokeDashArray,\n      '; ',\n      'stroke-linecap: ',\n      strokeLineCap,\n      '; ',\n      'stroke-dashoffset: ',\n      strokeDashOffset,\n      '; ',\n      'stroke-linejoin: ',\n      strokeLineJoin,\n      '; ',\n      'stroke-miterlimit: ',\n      strokeMiterLimit,\n      '; ',\n      fill,\n      'fill-rule: ',\n      fillRule,\n      '; ',\n      'opacity: ',\n      opacity,\n      ';',\n      filter,\n      visibility,\n    ].join('');\n  }\n\n  /**\n   * Returns filter for svg shadow\n   * @return {String}\n   */\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\n  }\n\n  /**\n   * Returns id attribute for svg output\n   * @return {String}\n   */\n  getSvgCommons(\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string },\n  ) {\n    return [\n      this.id ? `id=\"${this.id}\" ` : '',\n      this.clipPath\n        ? `clip-path=\"url(#${\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\n              .clipPathId\n          })\" `\n        : '',\n    ].join('');\n  }\n\n  /**\n   * Returns transform-string for svg-export\n   * @param {Boolean} use the full transform or the single object one.\n   * @return {String}\n   */\n  getSvgTransform(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    full?: boolean,\n    additionalTransform = '',\n  ) {\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\n    return `${svgTransform}${additionalTransform}\" `;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * This function is implemented in each subclass\n   * This is just because typescript otherwise cryies all the time\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(_reviver?: TSVGReviver): string[] {\n    return [''];\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\n      reviver,\n    });\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver,\n      })\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createBaseClipPathSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      reviver,\n      additionalTransform = '',\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {},\n  ) {\n    const commonPieces = [\n        this.getSvgTransform(true, additionalTransform),\n        this.getSvgCommons(),\n      ].join(''),\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    objectMarkup[index] = commonPieces;\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      noStyle,\n      reviver,\n      withShadow,\n      additionalTransform,\n    }: {\n      noStyle?: boolean;\n      reviver?: TSVGReviver;\n      withShadow?: boolean;\n      additionalTransform?: string;\n    } = {},\n  ): string {\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\n      vectorEffect = this.strokeUniform\n        ? 'vector-effect=\"non-scaling-stroke\" '\n        : '',\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\n      stroke = this.stroke,\n      fill = this.fill,\n      shadow = this.shadow,\n      markup = [],\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    let clipPathMarkup;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      clipPathMarkup = `<clipPath id=\"${\n        clipPath.clipPathId\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\n    }\n    if (absoluteClipPath) {\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n    }\n    markup.push(\n      '<g ',\n      this.getSvgTransform(false),\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n      ' >\\n',\n    );\n    const commonPieces = [\n      styleInfo,\n      vectorEffect,\n      noStyle ? '' : this.addPaintOrder(),\n      ' ',\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\n    ].join('');\n    objectMarkup[index] = commonPieces;\n    if (isFiller(fill)) {\n      markup.push(fill.toSVG(this));\n    }\n    if (isFiller(stroke)) {\n      markup.push(stroke.toSVG(this));\n    }\n    if (shadow) {\n      markup.push(shadow.toSVG(this));\n    }\n    if (clipPath) {\n      markup.push(clipPathMarkup);\n    }\n    markup.push(objectMarkup.join(''));\n    markup.push('</g>\\n');\n    absoluteClipPath && markup.push('</g>\\n');\n    return reviver ? reviver(markup.join('')) : markup.join('');\n  }\n\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.paintFirst !== FILL ? ` paint-order=\"${this.paintFirst}\" ` : '';\n  }\n}\n","export function getSvgRegex(arr: string[]) {\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n}\n","import { getSvgRegex } from './getSvgRegex';\nimport { LEFT, TOP } from '../constants';\n\nexport const reNum = String.raw`(?:[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?)`;\n\nexport const svgNS = 'http://www.w3.org/2000/svg';\n\nexport const reFontDeclaration = new RegExp(\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n    reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\n    reNum +\n    '))?\\\\s+(.*)',\n);\n\nexport const svgValidTagNames = [\n    'path',\n    'circle',\n    'polygon',\n    'polyline',\n    'ellipse',\n    'rect',\n    'line',\n    'image',\n    'text',\n  ],\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n  svgInvalidAncestors = [\n    'pattern',\n    'defs',\n    'symbol',\n    'metadata',\n    'clipPath',\n    'mask',\n    'desc',\n  ],\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n  attributesMap = {\n    cx: LEFT,\n    x: LEFT,\n    r: 'radius',\n    cy: TOP,\n    y: TOP,\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform',\n    'image-rendering': 'imageSmoothing',\n  },\n  fSize = 'font-size',\n  cPath = 'clip-path';\n\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n// matches, e.g.: +14.56e-12, etc.\nexport const reViewBoxAttrValue = new RegExp(\n  '^' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*' +\n    '$',\n);\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n\nconst unitVectorX = new Point(1, 0);\nconst zero = new Point();\n\n/**\n * Rotates `vector` with `radians`\n * @param {Point} vector The vector to rotate (x and y)\n * @param {Number} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotateVector = (vector: Point, radians: TRadian) =>\n  vector.rotate(radians);\n\n/**\n * Creates a vector from points represented as a point\n *\n * @param {Point} from\n * @param {Point} to\n * @returns {Point} vector\n */\nexport const createVector = (from: XY, to: XY): Point =>\n  new Point(to).subtract(from);\n\n/**\n * return the magnitude of a vector\n * @return {number}\n */\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\n\n/**\n * Calculates the angle between 2 vectors\n * @param {Point} a\n * @param {Point} b\n * @returns the angle in radians from `a` to `b`\n */\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\n\n/**\n * Calculates the angle between the x axis and the vector\n * @param {Point} v\n * @returns the angle in radians of `v`\n */\nexport const calcVectorRotation = (v: Point) =>\n  calcAngleBetweenVectors(unitVectorX, v);\n\n/**\n * @param {Point} v\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\n */\nexport const getUnitVector = (v: Point): Point =>\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\n\n/**\n * @param {Point} v\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\n * @returns {Point} the unit orthogonal vector\n */\nexport const getOrthonormalVector = (\n  v: Point,\n  counterClockwise = true,\n): Point =>\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\n\n/**\n * Cross product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number} the magnitude of Z vector\n */\nexport const crossProduct = (a: Point, b: Point): number =>\n  a.x * b.y - a.y * b.x;\n\n/**\n * Dot product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number}\n */\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\n\n/**\n * Checks if the vector is between two others. It is considered\n * to be inside when the vector to be tested is between the\n * initial vector and the final vector (included) in a counterclockwise direction.\n * @param {Point} t vector to be tested\n * @param {Point} a initial vector\n * @param {Point} b final vector\n * @returns {boolean} true if the vector is among the others\n */\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\n  if (t.eq(a) || t.eq(b)) return true;\n  const AxB = crossProduct(a, b),\n    AxT = crossProduct(a, t),\n    BxT = crossProduct(b, t);\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\n};\n","import { classRegistry } from './ClassRegistry';\nimport { Color } from './color/Color';\nimport { config } from './config';\nimport { reNum } from './parser/constants';\nimport { Point } from './Point';\nimport type { FabricObject } from './shapes/Object/FabricObject';\nimport type { TClassProperties } from './typedefs';\nimport { uid } from './util/internals/uid';\nimport { pickBy } from './util/misc/pick';\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\nimport { toFixed } from './util/misc/toFixed';\nimport { rotateVector } from './util/misc/vectors';\n\n/**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\n   *   - (?:px)?: Optionally captures the \"px\" unit.\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\n\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\n\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\n\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\n   */\n// eslint-disable-next-line max-len\n\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\n\nconst reOffsetsAndBlur = new RegExp(\n  '(?:\\\\s|^)' +\n    shadowOffsetRegex +\n    shadowOffsetRegex +\n    '(' +\n    reNum +\n    '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)',\n);\n\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\n  color: 'rgb(0,0,0)',\n  blur: 0,\n  offsetX: 0,\n  offsetY: 0,\n  affectStroke: false,\n  includeDefaultValues: true,\n  nonScaling: false,\n};\n\nexport type SerializedShadowOptions = {\n  color: string;\n  blur: number;\n  offsetX: number;\n  offsetY: number;\n  affectStroke: boolean;\n  nonScaling: boolean;\n  type: string;\n};\n\nexport class Shadow {\n  /**\n   * Shadow color\n   * @type String\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * Shadow blur\n   * @type Number\n   */\n  declare blur: number;\n\n  /**\n   * Shadow horizontal offset\n   * @type Number\n   * @default\n   */\n  declare offsetX: number;\n\n  /**\n   * Shadow vertical offset\n   * @type Number\n   * @default\n   */\n  declare offsetY: number;\n\n  /**\n   * Whether the shadow should affect stroke operations\n   * @type Boolean\n   * @default\n   */\n  declare affectStroke: boolean;\n\n  /**\n   * Indicates whether toObject should include default values\n   * @type Boolean\n   * @default\n   */\n  declare includeDefaultValues: boolean;\n\n  /**\n   * When `false`, the shadow will scale with the object.\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n   * default to false\n   * @type Boolean\n   * @default\n   */\n  declare nonScaling: boolean;\n\n  declare id: number;\n\n  static ownDefaults = shadowDefaultValues;\n\n  static type = 'shadow';\n\n  /**\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n   */\n  constructor(options: Partial<TClassProperties<Shadow>>);\n  constructor(svgAttribute: string);\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\n    const options: Partial<TClassProperties<Shadow>> =\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\n    Object.assign(this, Shadow.ownDefaults, options);\n    this.id = uid();\n  }\n\n  /**\n   * @param {String} value Shadow value to parse\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\n   */\n  static parseShadow(value: string) {\n    const shadowStr = value.trim(),\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\n        reOffsetsAndBlur.exec(shadowStr) || []\n      ).map((value) => parseFloat(value) || 0),\n      color = (shadowStr.replace(reOffsetsAndBlur, '') || 'rgb(0,0,0)').trim();\n\n    return {\n      color,\n      offsetX,\n      offsetY,\n      blur,\n    };\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n   * @return {String} Returns CSS3 text-shadow declaration\n   */\n  toString() {\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n  }\n\n  /**\n   * Returns SVG representation of a shadow\n   * @param {FabricObject} object\n   * @return {String} SVG representation of a shadow\n   */\n  toSVG(object: FabricObject) {\n    const offset = rotateVector(\n        new Point(this.offsetX, this.offsetY),\n        degreesToRadians(-object.angle),\n      ),\n      BLUR_BOX = 20,\n      color = new Color(this.color);\n    let fBoxX = 40,\n      fBoxY = 40;\n\n    if (object.width && object.height) {\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n      // we add some extra space to filter box to contain the blur ( 20 )\n      fBoxX =\n        toFixed(\n          (Math.abs(offset.x) + this.blur) / object.width,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n      fBoxY =\n        toFixed(\n          (Math.abs(offset.y) + this.blur) / object.height,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n    }\n    if (object.flipX) {\n      offset.x *= -1;\n    }\n    if (object.flipY) {\n      offset.y *= -1;\n    }\n\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\n      100 + 2 * fBoxY\n    }%\" x=\"-${fBoxX}%\" width=\"${\n      100 + 2 * fBoxX\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\n      this.blur ? this.blur / 2 : 0,\n      config.NUM_FRACTION_DIGITS,\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\n      offset.x,\n      config.NUM_FRACTION_DIGITS,\n    )}\" dy=\"${toFixed(\n      offset.y,\n      config.NUM_FRACTION_DIGITS,\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\n  }\n\n  /**\n   * Returns object representation of a shadow\n   * @return {Object} Object representation of a shadow instance\n   */\n  toObject() {\n    const data: SerializedShadowOptions = {\n      color: this.color,\n      blur: this.blur,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      affectStroke: this.affectStroke,\n      nonScaling: this.nonScaling,\n      type: (this.constructor as typeof Shadow).type,\n    };\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\n    return !this.includeDefaultValues\n      ? pickBy(data, (value, key) => value !== defaults[key])\n      : data;\n  }\n\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\n    return new this(options);\n  }\n}\n\nclassRegistry.setClass(Shadow, 'shadow');\n","export const capValue = (min: number, value: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n","import {\n  TOP,\n  LEFT,\n  SCALE_Y,\n  SCALE_X,\n  SKEW_X,\n  SKEW_Y,\n  FILL,\n  STROKE,\n} from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { InteractiveFabricObject } from './InteractiveObject';\nimport type { FabricObject } from './Object';\n\nexport const stateProperties = [\n  TOP,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  'flipX',\n  'flipY',\n  'originX',\n  'originY',\n  'angle',\n  'opacity',\n  'globalCompositeOperation',\n  'shadow',\n  'visible',\n  SKEW_X,\n  SKEW_Y,\n];\n\nexport const cacheProperties = [\n  FILL,\n  STROKE,\n  'strokeWidth',\n  'strokeDashArray',\n  'width',\n  'height',\n  'paintFirst',\n  'strokeUniform',\n  'strokeLineCap',\n  'strokeDashOffset',\n  'strokeLineJoin',\n  'strokeMiterLimit',\n  'backgroundColor',\n  'clipPath',\n];\n\nexport const fabricObjectDefaultValues: Partial<\n  TClassProperties<FabricObject>\n> = {\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  angle: 0,\n  flipX: false,\n  flipY: false,\n  scaleX: 1,\n  scaleY: 1,\n  minScaleLimit: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: LEFT,\n  originY: TOP,\n  strokeWidth: 1,\n  strokeUniform: false,\n  padding: 0,\n  opacity: 1,\n  paintFirst: FILL,\n  fill: 'rgb(0,0,0)',\n  fillRule: 'nonzero',\n  stroke: null,\n  strokeDashArray: null,\n  strokeDashOffset: 0,\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  strokeMiterLimit: 4,\n  globalCompositeOperation: 'source-over',\n  backgroundColor: '',\n  shadow: null,\n  visible: true,\n  includeDefaultValues: true,\n  excludeFromExport: false,\n  objectCaching: true,\n  clipPath: undefined,\n  inverted: false,\n  absolutePositioned: false,\n  centeredRotation: true,\n  centeredScaling: false,\n  dirty: true,\n} as const;\n\nexport const interactiveObjectDefaultValues: Partial<\n  TClassProperties<InteractiveFabricObject>\n> = {\n  noScaleCache: true,\n  lockMovementX: false,\n  lockMovementY: false,\n  lockRotation: false,\n  lockScalingX: false,\n  lockScalingY: false,\n  lockSkewingX: false,\n  lockSkewingY: false,\n  lockScalingFlip: false,\n  cornerSize: 13,\n  touchCornerSize: 24,\n  transparentCorners: true,\n  cornerColor: 'rgb(178,204,255)',\n  cornerStrokeColor: '',\n  cornerStyle: 'rect',\n  cornerDashArray: null,\n  hasControls: true,\n  borderColor: 'rgb(178,204,255)',\n  borderDashArray: null,\n  borderOpacityWhenMoving: 0.4,\n  borderScaleFactor: 1,\n  hasBorders: true,\n  selectionBackgroundColor: '',\n  selectable: true,\n  evented: true,\n  perPixelTargetFind: false,\n  activeOn: 'down',\n  hoverCursor: null,\n  moveCursor: null,\n};\n","/**\n * Easing functions\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\n */\n\nimport { twoMathPi, halfPI } from '../../constants';\nimport type { TEasingFunction } from './types';\n\nconst normalize = (a: number, c: number, p: number, s: number) => {\n  if (a < Math.abs(c)) {\n    a = c;\n    s = p / 4;\n  } else {\n    //handle the 0/0 case:\n    if (c === 0 && a === 0) {\n      s = (p / twoMathPi) * Math.asin(1);\n    } else {\n      s = (p / twoMathPi) * Math.asin(c / a);\n    }\n  }\n  return { a, c, p, s };\n};\n\nconst elastic = (\n  a: number,\n  s: number,\n  p: number,\n  t: number,\n  d: number,\n): number =>\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\n\n/**\n * Default sinusoidal easing\n */\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Cubic easing in\n */\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 3 + b;\n\n/**\n * Cubic easing out\n */\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 3 + 1) + b;\n\n/**\n * Cubic easing in and out\n */\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 3 + b;\n  }\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\n};\n\n/**\n * Quartic easing in\n */\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\n  c * (t /= d) * t ** 3 + b;\n\n/**\n * Quartic easing out\n */\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\n\n/**\n * Quartic easing in and out\n */\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 4 + b;\n  }\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\n};\n\n/**\n * Quintic easing in\n */\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 5 + b;\n\n/**\n * Quintic easing out\n */\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 5 + 1) + b;\n\n/**\n * Quintic easing in and out\n */\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 5 + b;\n  }\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\n};\n\n/**\n * Sinusoidal easing in\n */\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Sinusoidal easing out\n */\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\n  c * Math.sin((t / d) * halfPI) + b;\n\n/**\n * Sinusoidal easing in and out\n */\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n\n/**\n * Exponential easing in\n */\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\n\n/**\n * Exponential easing out\n */\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\n\n/**\n * Exponential easing in and out\n */\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\n  if (t === 0) {\n    return b;\n  }\n  if (t === d) {\n    return b + c;\n  }\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\n  }\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\n};\n\n/**\n * Circular easing in\n */\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\n/**\n * Circular easing out\n */\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\n/**\n * Circular easing in and out\n */\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\n  }\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n};\n\n/**\n * Elastic easing in\n */\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\n  return -elastic(normA, normS, normP, t, d) + b;\n};\n\n/**\n * Elastic easing out\n */\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  return (\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\n    normC +\n    b\n  );\n};\n\n/**\n * Elastic easing in and out\n */\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d / 2;\n  if (t === 2) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * (0.3 * 1.5);\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  if (t < 1) {\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\n  }\n  return (\n    normA *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\n      0.5 +\n    normC +\n    b\n  );\n};\n\n/**\n * Backwards easing in\n */\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\n\n/**\n * Backwards easing out\n */\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\n/**\n * Backwards easing in and out\n */\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n  }\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n};\n\n/**\n * Bouncing easing out\n */\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\n  if ((t /= d) < 1 / 2.75) {\n    return c * (7.5625 * t * t) + b;\n  } else if (t < 2 / 2.75) {\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n  } else if (t < 2.5 / 2.75) {\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n  } else {\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n};\n\n/**\n * Bouncing easing in\n */\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\n  c - easeOutBounce(d - t, 0, c, d) + b;\n\n/**\n * Bouncing easing in and out\n */\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\n  t < d / 2\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\n/**\n * Quadratic easing in\n */\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\n\n/**\n * Quadratic easing out\n */\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\n  -c * (t /= d) * (t - 2) + b;\n\n/**\n * Quadratic easing in and out\n */\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 2 + b;\n  }\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\n};\n","import { noop } from '../../constants';\nimport { requestAnimFrame } from './AnimationFrameProvider';\nimport { runningAnimations } from './AnimationRegistry';\nimport { defaultEasing } from './easing';\nimport type {\n  AnimationState,\n  TAbortCallback,\n  TBaseAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultAbort = () => false;\n\nexport abstract class AnimationBase<\n  T extends number | number[] = number | number[],\n> {\n  declare readonly startValue: T;\n  declare readonly endValue: T;\n  declare readonly duration: number;\n  declare readonly delay: number;\n\n  protected declare readonly byValue: T;\n  protected declare readonly easing: TEasingFunction<T>;\n\n  private declare readonly _onStart: VoidFunction;\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _abort: TAbortCallback<T>;\n\n  /**\n   * Used to register the animation to a target object\n   * so that it can be cancelled within the object context\n   */\n  declare readonly target?: unknown;\n\n  private _state: AnimationState = 'pending';\n  /**\n   * Time %, or the ratio of `timeElapsed / duration`\n   * @see tick\n   */\n  durationProgress = 0;\n  /**\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\n   */\n  valueProgress = 0;\n  /**\n   * Current value\n   */\n  declare value: T;\n  /**\n   * Animation start time ms\n   */\n  private declare startTime: number;\n\n  constructor({\n    startValue,\n    byValue,\n    duration = 500,\n    delay = 0,\n    easing = defaultEasing,\n    onStart = noop,\n    onChange = noop,\n    onComplete = noop,\n    abort = defaultAbort,\n    target,\n  }: TBaseAnimationOptions<T>) {\n    this.tick = this.tick.bind(this);\n\n    this.duration = duration;\n    this.delay = delay;\n    this.easing = easing;\n    this._onStart = onStart;\n    this._onChange = onChange;\n    this._onComplete = onComplete;\n    this._abort = abort;\n    this.target = target;\n\n    this.startValue = startValue;\n    this.byValue = byValue;\n    this.value = this.startValue;\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  isDone() {\n    return this._state === 'aborted' || this._state === 'completed';\n  }\n\n  /**\n   * Calculate the current value based on the easing parameters\n   * @param timeElapsed in ms\n   * @protected\n   */\n  protected abstract calculate(timeElapsed: number): {\n    value: T;\n    valueProgress: number;\n  };\n\n  start() {\n    const firstTick: FrameRequestCallback = (timestamp) => {\n      if (this._state !== 'pending') return;\n      this.startTime = timestamp || +new Date();\n      this._state = 'running';\n      this._onStart();\n      this.tick(this.startTime);\n    };\n\n    this.register();\n\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\n    // we don't want that\n    if (this.delay > 0) {\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\n    } else {\n      requestAnimFrame(firstTick);\n    }\n  }\n\n  private tick(t: number) {\n    const durationMs = (t || +new Date()) - this.startTime;\n    const boundDurationMs = Math.min(durationMs, this.duration);\n    this.durationProgress = boundDurationMs / this.duration;\n    const { value, valueProgress } = this.calculate(boundDurationMs);\n    this.value = Object.freeze(value);\n    this.valueProgress = valueProgress;\n\n    if (this._state === 'aborted') {\n      return;\n    } else if (\n      this._abort(this.value, this.valueProgress, this.durationProgress)\n    ) {\n      this._state = 'aborted';\n      this.unregister();\n    } else if (durationMs >= this.duration) {\n      this.durationProgress = this.valueProgress = 1;\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\n      this._state = 'completed';\n      this._onComplete(\n        this.endValue,\n        this.valueProgress,\n        this.durationProgress,\n      );\n      this.unregister();\n    } else {\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\n      requestAnimFrame(this.tick);\n    }\n  }\n\n  private register() {\n    runningAnimations.push(this as unknown as AnimationBase);\n  }\n\n  private unregister() {\n    runningAnimations.remove(this as unknown as AnimationBase);\n  }\n\n  abort() {\n    this._state = 'aborted';\n    this.unregister();\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ValueAnimationOptions } from './types';\n\nexport class ValueAnimation extends AnimationBase<number> {\n  constructor({\n    startValue = 0,\n    endValue = 100,\n    ...otherOptions\n  }: ValueAnimationOptions) {\n    super({\n      ...otherOptions,\n      startValue,\n      byValue: endValue - startValue,\n    });\n  }\n\n  protected calculate(timeElapsed: number) {\n    const value = this.easing(\n      timeElapsed,\n      this.startValue,\n      this.byValue,\n      this.duration,\n    );\n    return {\n      value,\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\n    };\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ArrayAnimationOptions } from './types';\n\nexport class ArrayAnimation extends AnimationBase<number[]> {\n  constructor({\n    startValue = [0],\n    endValue = [100],\n    ...options\n  }: ArrayAnimationOptions) {\n    super({\n      ...options,\n      startValue,\n      byValue: endValue.map((value, i) => value - startValue[i]),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const values = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    );\n    return {\n      value: values,\n      valueProgress: Math.abs(\n        (values[0] - this.startValue[0]) / this.byValue[0],\n      ),\n    };\n  }\n}\n","import { Color } from '../../color/Color';\nimport type { TRGBAColorSource } from '../../color/typedefs';\nimport { halfPI } from '../../constants';\nimport { capValue } from '../misc/capValue';\nimport { AnimationBase } from './AnimationBase';\nimport type {\n  ColorAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultColorEasing: TEasingFunction = (\n  timeElapsed,\n  startValue,\n  byValue,\n  duration,\n) => {\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\n  return startValue + byValue * durationProgress;\n};\n\nconst wrapColorCallback = <R>(\n  callback?: TOnAnimationChangeCallback<string, R>,\n) =>\n  callback &&\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\n\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\n  constructor({\n    startValue,\n    endValue,\n    easing = defaultColorEasing,\n    onChange,\n    onComplete,\n    abort,\n    ...options\n  }: ColorAnimationOptions) {\n    const startColor = new Color(startValue).getSource();\n    const endColor = new Color(endValue).getSource();\n    super({\n      ...options,\n      startValue: startColor,\n      byValue: endColor.map(\n        (value, i) => value - startColor[i],\n      ) as TRGBAColorSource,\n      easing,\n      onChange: wrapColorCallback(onChange),\n      onComplete: wrapColorCallback(onComplete),\n      abort: wrapColorCallback(abort),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const [r, g, b, a] = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    ) as TRGBAColorSource;\n    const value = [\n      ...[r, g, b].map(Math.round),\n      capValue(0, a, 1),\n    ] as TRGBAColorSource;\n    return {\n      value,\n      valueProgress:\n        // to correctly calculate the change ratio we must find a changed value\n        value\n          .map((p, i) =>\n            this.byValue[i] !== 0\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\n              : 0,\n          )\n          .find((p) => p !== 0) || 0,\n    };\n  }\n}\n","import { ValueAnimation } from './ValueAnimation';\nimport { ArrayAnimation } from './ArrayAnimation';\nimport { ColorAnimation } from './ColorAnimation';\nimport type {\n  ValueAnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n} from './types';\nimport type { TColorArg } from '../../color/typedefs';\n\nexport type TAnimation<T extends number | number[] | TColorArg> =\n  T extends TColorArg\n    ? ColorAnimation\n    : T extends number[]\n      ? ArrayAnimation\n      : ValueAnimation;\n\nconst isArrayAnimation = (\n  options: ArrayAnimationOptions | ValueAnimationOptions,\n): options is ArrayAnimationOptions => {\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\n};\n\n/**\n * Changes value(s) from startValue to endValue within a certain period of time,\n * invoking callbacks as the value(s) change.\n *\n * @example\n * animate({\n *   startValue: 1,\n *   endValue: 0,\n *   onChange: (v) => {\n *     obj.set('opacity', v);\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\n *     canvas.renderAll();\n *   }\n * });\n *\n * @example Using lists:\n * animate({\n *   startValue: [1, 2, 3],\n *   endValue: [2, 4, 6],\n *   onChange: ([x, y, zoom]) => {\n *     canvas.zoomToPoint(new Point(x, y), zoom);\n *     canvas.renderAll();\n *   }\n * });\n *\n */\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n>(\n  options: T,\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation,\n>(options: T): R {\n  const animation = (\n    isArrayAnimation(options)\n      ? new ArrayAnimation(options)\n      : new ValueAnimation(options)\n  ) as R;\n  animation.start();\n  return animation;\n}\n\nexport function animateColor(options: ColorAnimationOptions) {\n  const animation = new ColorAnimation(options);\n  animation.start();\n  return animation;\n}\n","import { Point } from './Point';\nimport { createVector } from './util/misc/vectors';\n\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\n\nexport class Intersection {\n  declare points: Point[];\n\n  declare status?: IntersectionType;\n\n  constructor(status?: IntersectionType) {\n    this.status = status;\n    this.points = [];\n  }\n\n  /**\n   * Used to verify if a point is alredy in the collection\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  private includes(point: Point): boolean {\n    return this.points.some((p) => p.eq(point));\n  }\n\n  /**\n   * Appends points of intersection\n   * @param {...Point[]} points\n   * @return {Intersection} thisArg\n   * @chainable\n   */\n  private append(...points: Point[]): Intersection {\n    this.points = this.points.concat(\n      points.filter((point) => {\n        return !this.includes(point);\n      }),\n    );\n    return this;\n  }\n\n  /**\n   * check if point T is on the segment or line defined between A and B\n   *\n   * @param {Point} T the point we are checking for\n   * @param {Point} A one extremity of the segment\n   * @param {Point} B the other extremity of the segment\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\n   * @returns true if `T` is contained\n   */\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\n    if (A.eq(B)) {\n      // Edge case: the segment is a point, we check for coincidence,\n      // infinite param has no meaning because there are infinite lines to consider\n      return T.eq(A);\n    } else if (A.x === B.x) {\n      // Edge case: horizontal line.\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\n      return (\n        T.x === A.x &&\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\n      );\n    } else if (A.y === B.y) {\n      // Edge case: vertical line.\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\n      return (\n        T.y === A.y &&\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\n      );\n    } else {\n      // Generic case: sloped line.\n      // we check that AT has the same slope as AB\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\n      const AB = createVector(A, B);\n      const AT = createVector(A, T);\n      const s = AT.divide(AB);\n      return infinite\n        ? Math.abs(s.x) === Math.abs(s.y)\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\n    }\n  }\n\n  /**\n   * Use the ray casting algorithm to determine if {@link point} is in the polygon defined by {@link points}\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\n   * @param point\n   * @param points polygon points\n   * @returns\n   */\n  static isPointInPolygon(point: Point, points: Point[]) {\n    const other = new Point(point).setX(\n      Math.min(point.x - 1, ...points.map((p) => p.x)),\n    );\n    let hits = 0;\n    for (let index = 0; index < points.length; index++) {\n      const inter = this.intersectSegmentSegment(\n        // polygon side\n        points[index],\n        points[(index + 1) % points.length],\n        // ray\n        point,\n        other,\n      );\n      if (inter.includes(point)) {\n        // point is on the polygon side\n        return true;\n      }\n      hits += Number(inter.status === 'Intersection');\n    }\n    return hits % 2 === 1;\n  }\n\n  /**\n   * Checks if a line intersects another\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\n   * @static\n   * @param {Point} a1\n   * @param {Point} a2\n   * @param {Point} b1\n   * @param {Point} b2\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLineLine(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n    aInfinite = true,\n    bInfinite = true,\n  ): Intersection {\n    const a2xa1x = a2.x - a1.x,\n      a2ya1y = a2.y - a1.y,\n      b2xb1x = b2.x - b1.x,\n      b2yb1y = b2.y - b1.y,\n      a1xb1x = a1.x - b1.x,\n      a1yb1y = a1.y - b1.y,\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\n    if (uB !== 0) {\n      const ua = uaT / uB,\n        ub = ubT / uB;\n      if (\n        (aInfinite || (0 <= ua && ua <= 1)) &&\n        (bInfinite || (0 <= ub && ub <= 1))\n      ) {\n        return new Intersection('Intersection').append(\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y),\n        );\n      } else {\n        return new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        const segmentsCoincide =\n          aInfinite ||\n          bInfinite ||\n          Intersection.isPointContained(a1, b1, b2) ||\n          Intersection.isPointContained(a2, b1, b2) ||\n          Intersection.isPointContained(b1, a1, a2) ||\n          Intersection.isPointContained(b2, a1, a2);\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\n      } else {\n        return new Intersection('Parallel');\n      }\n    }\n  }\n\n  /**\n   * Checks if a segment intersects a line\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} s1 boundary point of segment\n   * @param {Point} s2 other boundary point of segment\n   * @param {Point} l1 point on line\n   * @param {Point} l2 other point on line\n   * @return {Intersection}\n   */\n  static intersectSegmentLine(\n    s1: Point,\n    s2: Point,\n    l1: Point,\n    l2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\n  }\n\n  /**\n   * Checks if a segment intersects another\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point} b1 boundary point of segment\n   * @param {Point} b2 other boundary point of segment\n   * @return {Intersection}\n   */\n  static intersectSegmentSegment(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\n  }\n\n  /**\n   * Checks if line intersects polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @see {@link intersectSegmentPolygon} for segment intersection\n   * @param {Point} a1 point on line\n   * @param {Point} a2 other point on line\n   * @param {Point[]} points polygon points\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLinePolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n    infinite = true,\n  ): Intersection {\n    const result = new Intersection();\n    const length = points.length;\n\n    for (let i = 0, b1, b2, inter; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\n      if (inter.status === 'Coincident') {\n        return inter;\n      }\n      result.append(...inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if segment intersects polygon\n   * @static\n   * @see {@link intersectLinePolygon} for line intersection\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point[]} points polygon points\n   * @return {Intersection}\n   */\n  static intersectSegmentPolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n  ): Intersection {\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\n  }\n\n  /**\n   * Checks if polygon intersects another polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @param {Point[]} points1\n   * @param {Point[]} points2\n   * @return {Intersection}\n   */\n  static intersectPolygonPolygon(\n    points1: Point[],\n    points2: Point[],\n  ): Intersection {\n    const result = new Intersection(),\n      length = points1.length;\n    const coincidences: Intersection[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const a1 = points1[i],\n        a2 = points1[(i + 1) % length],\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\n      if (inter.status === 'Coincident') {\n        coincidences.push(inter);\n        result.append(a1, a2);\n      } else {\n        result.append(...inter.points);\n      }\n    }\n\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\n      return new Intersection('Coincident');\n    } else if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @see {@link intersectPolygonPolygon} for polygon intersection\n   * @param {Point[]} points polygon points\n   * @param {Point} r1 top left point of rect\n   * @param {Point} r2 bottom right point of rect\n   * @return {Intersection}\n   */\n  static intersectPolygonRectangle(\n    points: Point[],\n    r1: Point,\n    r2: Point,\n  ): Intersection {\n    const min = r1.min(r2),\n      max = r1.max(r2),\n      topRight = new Point(max.x, min.y),\n      bottomLeft = new Point(min.x, max.y);\n\n    return Intersection.intersectPolygonPolygon(points, [\n      min,\n      topRight,\n      max,\n      bottomLeft,\n    ]);\n  }\n}\n","import type {\n  TBBox,\n  TCornerPoint,\n  TDegree,\n  TMat2D,\n  TOriginX,\n  TOriginY,\n} from '../../typedefs';\nimport { SCALE_X, SCALE_Y, iMatrix } from '../../constants';\nimport { Intersection } from '../../Intersection';\nimport { Point } from '../../Point';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  createRotateMatrix,\n  createTranslateMatrix,\n  composeMatrix,\n  invertTransform,\n  multiplyTransformMatrices,\n  transformPoint,\n  calcPlaneRotation,\n} from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { ControlProps } from './types/ControlProps';\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\nimport type { Group } from '../Group';\nimport { calcDimensionsMatrix } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport { CommonMethods } from '../../CommonMethods';\nimport type { BaseProps } from './types/BaseProps';\nimport type { FillStrokeProps } from './types/FillStrokeProps';\nimport { CENTER, LEFT, TOP } from '../../constants';\n\ntype TMatrixCache = {\n  key: number[];\n  value: TMat2D;\n};\n\ntype TACoords = TCornerPoint;\n\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\n  extends CommonMethods<EventSpec>\n  implements\n    Pick<ControlProps, 'padding'>,\n    BaseProps,\n    Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\n{\n  // #region Geometry\n\n  declare padding: number;\n\n  /**\n   * Describe object's corner position in scene coordinates.\n   * The coordinates are derived from the following:\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\n   * The coordinates do not depend on viewport changes.\n   * The coordinates get updated with {@link setCoords}.\n   * You can calculate them without updating with {@link calcACoords()}\n   */\n  declare aCoords: TACoords;\n\n  /**\n   * storage cache for object transform matrix\n   */\n  declare ownMatrixCache?: TMatrixCache;\n\n  /**\n   * storage cache for object full transform matrix\n   */\n  declare matrixCache?: TMatrixCache;\n\n  /**\n   * A Reference of the Canvas where the object is actually added\n   * @type StaticCanvas | Canvas;\n   * @default undefined\n   * @private\n   */\n  declare canvas?: StaticCanvas | Canvas;\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  getX(): number {\n    return this.getXY().x;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  setX(value: number) {\n    this.setXY(this.getXY().setX(value));\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  getY(): number {\n    return this.getXY().y;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  setY(value: number) {\n    this.setXY(this.getXY().setY(value));\n  }\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getX}\n   */\n  getRelativeX(): number {\n    return this.left;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this method is identical to {@link setX}\n   */\n  setRelativeX(value: number) {\n    this.left = value;\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getY}\n   */\n  getRelativeY(): number {\n    return this.top;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link setY}\n   */\n  setRelativeY(value: number) {\n    this.top = value;\n  }\n\n  /**\n   * @returns {Point} x position according to object's {@link originX} {@link originY} properties in canvas coordinate plane\n   */\n  getXY(): Point {\n    const relativePosition = this.getRelativeXY();\n    return this.group\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\n      : relativePosition;\n  }\n\n  /**\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\n   * You can specify {@link originX} and {@link originY} values,\n   * that otherwise are the object's current values.\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\n   * @param {Point} point position in scene coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\n    if (this.group) {\n      point = transformPoint(\n        point,\n        invertTransform(this.group.calcTransformMatrix()),\n      );\n    }\n    this.setRelativeXY(point, originX, originY);\n  }\n\n  /**\n   * @returns {Point} x,y position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   */\n  getRelativeXY(): Point {\n    return new Point(this.left, this.top);\n  }\n\n  /**\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\n   * @param {Point} point position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setRelativeXY(\n    point: Point,\n    originX: TOriginX = this.originX,\n    originY: TOriginY = this.originY,\n  ) {\n    this.setPositionByOrigin(point, originX, originY);\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return false;\n  }\n\n  /**\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\n   */\n  getCoords(): Point[] {\n    const { tl, tr, br, bl } =\n      this.aCoords || (this.aCoords = this.calcACoords());\n    const coords = [tl, tr, br, bl];\n    if (this.group) {\n      const t = this.group.calcTransformMatrix();\n      return coords.map((p) => transformPoint(p, t));\n    }\n    return coords;\n  }\n\n  /**\n   * Checks if object intersects with the scene rect formed by {@link tl} and {@link br}\n   */\n  intersectsWithRect(tl: Point, br: Point): boolean {\n    const intersection = Intersection.intersectPolygonRectangle(\n      this.getCoords(),\n      tl,\n      br,\n    );\n    return intersection.status === 'Intersection';\n  }\n\n  /**\n   * Checks if object intersects with another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object intersects with another object\n   */\n  intersectsWithObject(other: ObjectGeometry): boolean {\n    const intersection = Intersection.intersectPolygonPolygon(\n      this.getCoords(),\n      other.getCoords(),\n    );\n\n    return (\n      intersection.status === 'Intersection' ||\n      intersection.status === 'Coincident' ||\n      other.isContainedWithinObject(this) ||\n      this.isContainedWithinObject(other)\n    );\n  }\n\n  /**\n   * Checks if object is fully contained within area of another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object is fully contained within area of another object\n   */\n  isContainedWithinObject(other: ObjectGeometry): boolean {\n    const points = this.getCoords();\n    return points.every((point) => other.containsPoint(point));\n  }\n\n  /**\n   * Checks if object is fully contained within the scene rect formed by {@link tl} and {@link br}\n   */\n  isContainedWithinRect(tl: Point, br: Point): boolean {\n    const { left, top, width, height } = this.getBoundingRect();\n    return (\n      left >= tl.x &&\n      left + width <= br.x &&\n      top >= tl.y &&\n      top + height <= br.y\n    );\n  }\n\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\n    return (\n      this.intersectsWithObject(other) ||\n      this.isContainedWithinObject(other) ||\n      other.isContainedWithinObject(this)\n    );\n  }\n\n  /**\n   * Checks if point is inside the object\n   * @param {Point} point Point to check against\n   * @return {Boolean} true if point is inside the object\n   */\n  containsPoint(point: Point): boolean {\n    return Intersection.isPointInPolygon(point, this.getCoords());\n  }\n\n  /**\n   * Checks if object is contained within the canvas with current viewportTransform\n   * the check is done stopping at first point that appears on screen\n   * @return {Boolean} true if object is fully or partially contained within canvas\n   */\n  isOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    const points = this.getCoords();\n    // if some point is on screen, the object is on screen.\n    if (\n      points.some(\n        (point) =>\n          point.x <= br.x &&\n          point.x >= tl.x &&\n          point.y <= br.y &&\n          point.y >= tl.y,\n      )\n    ) {\n      return true;\n    }\n    // no points on screen, check intersection with absolute coordinates\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    // check if the object is so big that it contains the entire viewport\n    return this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Checks if object is partially contained within the canvas with current viewportTransform\n   * @return {Boolean} true if object is partially contained within canvas\n   */\n  isPartiallyOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    const allPointsAreOutside = this.getCoords().every(\n      (point) =>\n        (point.x >= br.x || point.x <= tl.x) &&\n        (point.y >= br.y || point.y <= tl.y),\n    );\n    // check if the object is so big that it contains the entire viewport\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\n   * the box is intended as aligned to axis of canvas.\n   * @return {Object} Object with left, top, width, height properties\n   */\n  getBoundingRect(): TBBox {\n    return makeBoundingBoxFromPoints(this.getCoords());\n  }\n\n  /**\n   * Returns width of an object's bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} width value\n   */\n  getScaledWidth(): number {\n    return this._getTransformedDimensions().x;\n  }\n\n  /**\n   * Returns height of an object bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} height value\n   */\n  getScaledHeight(): number {\n    return this._getTransformedDimensions().y;\n  }\n\n  /**\n   * Scales an object (equally by x and y)\n   * @param {Number} value Scale factor\n   * @return {void}\n   */\n  scale(value: number): void {\n    this._set(SCALE_X, value);\n    this._set(SCALE_Y, value);\n    this.setCoords();\n  }\n\n  /**\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New width value\n   * @return {void}\n   */\n  scaleToWidth(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().width / this.getScaledWidth();\n    return this.scale(value / this.width / boundingRectFactor);\n  }\n\n  /**\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New height value\n   * @return {void}\n   */\n  scaleToHeight(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().height / this.getScaledHeight();\n    return this.scale(value / this.height / boundingRectFactor);\n  }\n\n  getCanvasRetinaScaling() {\n    return this.canvas?.getRetinaScaling() || 1;\n  }\n\n  /**\n   * Returns the object angle relative to canvas counting also the group property\n   * @returns {TDegree}\n   */\n  getTotalAngle(): TDegree {\n    return this.group\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\n      : this.angle;\n  }\n\n  /**\n   * Retrieves viewportTransform from Object's canvas if available\n   * @return {TMat2D}\n   */\n  getViewportTransform(): TMat2D {\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\n  }\n\n  /**\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\n   * those never change with zoom or viewport changes.\n   * @return {TCornerPoint}\n   */\n  calcACoords(): TCornerPoint {\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\n      { x, y } = this.getRelativeCenterPoint(),\n      tMatrix = createTranslateMatrix(x, y),\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\n      dim = this._getTransformedDimensions(),\n      w = dim.x / 2,\n      h = dim.y / 2;\n    return {\n      // corners\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\n      br: transformPoint({ x: w, y: h }, finalMatrix),\n    };\n  }\n\n  /**\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n   * aCoords are used to quickly find an object on the canvas.\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   */\n  setCoords(): void {\n    this.aCoords = this.calcACoords();\n  }\n\n  transformMatrixKey(skipGroup = false): number[] {\n    let prefix: number[] = [];\n    if (!skipGroup && this.group) {\n      prefix = this.group.transformMatrixKey(skipGroup);\n    }\n    prefix.push(\n      this.top,\n      this.left,\n      this.width,\n      this.height,\n      this.scaleX,\n      this.scaleY,\n      this.angle,\n      this.strokeWidth,\n      this.skewX,\n      this.skewY,\n      +this.flipX,\n      +this.flipY,\n      resolveOrigin(this.originX),\n      resolveOrigin(this.originY),\n    );\n\n    return prefix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties.\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n   * There are some situation in which this is useful to avoid the fake rotation.\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcTransformMatrix(skipGroup = false): TMat2D {\n    let matrix = this.calcOwnMatrix();\n    if (skipGroup || !this.group) {\n      return matrix;\n    }\n    const key = this.transformMatrixKey(skipGroup),\n      cache = this.matrixCache;\n    if (cache && cache.key.every((x, i) => x === key[i])) {\n      return cache.value;\n    }\n    if (this.group) {\n      matrix = multiplyTransformMatrices(\n        this.group.calcTransformMatrix(false),\n        matrix,\n      );\n    }\n    this.matrixCache = {\n      key,\n      value: matrix,\n    };\n    return matrix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties, this matrix does not include the group transformation\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcOwnMatrix(): TMat2D {\n    const key = this.transformMatrixKey(true),\n      cache = this.ownMatrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    const center = this.getRelativeCenterPoint(),\n      options = {\n        angle: this.angle,\n        translateX: center.x,\n        translateY: center.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY,\n        flipX: this.flipX,\n        flipY: this.flipY,\n      },\n      value = composeMatrix(options);\n    this.ownMatrixCache = {\n      key,\n      value,\n    };\n    return value;\n  }\n\n  /**\n   * Calculate object dimensions from its properties\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getNonTransformedDimensions(): Point {\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\n  }\n\n  /**\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\n   * and active selection\n   * @private\n   * @param {object} [options] transform options\n   * @returns {Point} dimensions\n   */\n  _calculateCurrentDimensions(options?: any): Point {\n    return this._getTransformedDimensions(options)\n      .transform(this.getViewportTransform(), true)\n      .scalarAdd(2 * this.padding);\n  }\n\n  // #region Origin\n\n  declare top: number;\n  declare left: number;\n  declare width: number;\n  declare height: number;\n  declare flipX: boolean;\n  declare flipY: boolean;\n  declare scaleX: number;\n  declare scaleY: number;\n  declare skewX: number;\n  declare skewY: number;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originX: TOriginX;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originY: TOriginY;\n  declare angle: TDegree;\n  declare strokeWidth: number;\n  declare strokeUniform: boolean;\n\n  /**\n   * Object containing this object.\n   * can influence its size and position\n   */\n  declare group?: Group;\n\n  /**\n   * Calculate object bounding box dimensions from its properties scale, skew.\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\n   * @param {Object} [options]\n   * @param {Number} [options.scaleX]\n   * @param {Number} [options.scaleY]\n   * @param {Number} [options.skewX]\n   * @param {Number} [options.skewY]\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getTransformedDimensions(options: any = {}): Point {\n    const dimOptions = {\n      // if scaleX or scaleY are negative numbers,\n      // this will return dimensions that are negative.\n      // and this will break assumptions around the codebase\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      width: this.width,\n      height: this.height,\n      strokeWidth: this.strokeWidth,\n      // TODO remove this spread. is visible in the performance inspection\n      ...options,\n    };\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\n    const strokeWidth = dimOptions.strokeWidth;\n    let preScalingStrokeValue = strokeWidth,\n      postScalingStrokeValue = 0;\n\n    if (this.strokeUniform) {\n      preScalingStrokeValue = 0;\n      postScalingStrokeValue = strokeWidth;\n    }\n    const dimX = dimOptions.width + preScalingStrokeValue,\n      dimY = dimOptions.height + preScalingStrokeValue,\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\n    let finalDimensions;\n    if (noSkew) {\n      finalDimensions = new Point(\n        dimX * dimOptions.scaleX,\n        dimY * dimOptions.scaleY,\n      );\n    } else {\n      finalDimensions = sizeAfterTransform(\n        dimX,\n        dimY,\n        calcDimensionsMatrix(dimOptions),\n      );\n    }\n\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\n  }\n\n  /**\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToGivenOrigin(\n    point: Point,\n    fromOriginX: TOriginX,\n    fromOriginY: TOriginY,\n    toOriginX: TOriginX,\n    toOriginY: TOriginY,\n  ): Point {\n    let x = point.x,\n      y = point.y;\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\n\n    if (offsetX || offsetY) {\n      const dim = this._getTransformedDimensions();\n      x += offsetX * dim.x;\n      y += offsetY * dim.y;\n    }\n\n    return new Point(x, y);\n  }\n\n  /**\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToCenterPoint(\n    point: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    if (originX === CENTER && originY === CENTER) {\n      return point;\n    }\n    const p = this.translateToGivenOrigin(\n      point,\n      originX,\n      originY,\n      CENTER,\n      CENTER,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), point);\n    }\n    return p;\n  }\n\n  /**\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n   * @param {Point} center The point which corresponds to center of the object\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToOriginPoint(\n    center: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      center,\n      CENTER,\n      CENTER,\n      originX,\n      originY,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), center);\n    }\n    return p;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to canvas\n   * @return {Point}\n   */\n  getCenterPoint(): Point {\n    const relCenter = this.getRelativeCenterPoint();\n    return this.group\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\n      : relCenter;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to it's parent\n   * @return {Point}\n   */\n  getRelativeCenterPoint(): Point {\n    return this.translateToCenterPoint(\n      new Point(this.left, this.top),\n      this.originX,\n      this.originY,\n    );\n  }\n\n  /**\n   * Returns the position of the object as if it has a different origin.\n   * Take an object that has left, top set to 100, 100 with origin 'left', 'top'.\n   * Return the values of left top ( wrapped in a point ) that you would need to keep\n   * the same position if origin where different.\n   * Alternatively you can use this to also find which point in the parent plane is a specific origin\n   * ( where is the bottom right corner of my object? )\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      originX,\n      originY,\n    );\n  }\n\n  /**\n   * Sets the position of the object taking into consideration the object's origin\n   * @param {Point} pos The new position of the object\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {void}\n   */\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\n    const center = this.translateToCenterPoint(pos, originX, originY),\n      position = this.translateToOriginPoint(\n        center,\n        this.originX,\n        this.originY,\n      );\n    this.set({ left: position.x, top: position.y });\n  }\n\n  /**\n   * @private\n   */\n  _getLeftTopCoords() {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      LEFT,\n      TOP,\n    );\n  }\n}\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport {\n  ALIASING_LIMIT,\n  CENTER,\n  iMatrix,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  STROKE,\n  FILL,\n  TOP,\n  VERSION,\n} from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport { Shadow } from '../../Shadow';\nimport type {\n  TDegree,\n  TFiller,\n  TSize,\n  TCacheCanvasDimensions,\n  Abortable,\n  TOptions,\n  ImageFormat,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\nimport { capValue } from '../../util/misc/capValue';\nimport {\n  createCanvasElement,\n  createCanvasElementFor,\n  toDataURL,\n  toBlob,\n} from '../../util/misc/dom';\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\nimport {\n  resetObjectTransform,\n  saveObjectTransform,\n} from '../../util/misc/objectTransforms';\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\nimport { pick, pickBy } from '../../util/misc/pick';\nimport { toFixed } from '../../util/misc/toFixed';\nimport type { Group } from '../Group';\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\nimport { isFiller, isSerializableFiller } from '../../util/typeAssertions';\nimport type { FabricImage } from '../Image';\nimport {\n  cacheProperties,\n  fabricObjectDefaultValues,\n  stateProperties,\n} from './defaultValues';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\nimport type { ObjectProps } from './types/ObjectProps';\nimport { getDevicePixelRatio, getEnv } from '../../env';\nimport { log } from '../../util/internals/console';\nimport type { TColorArg } from '../../color/typedefs';\nimport type { TAnimation } from '../../util/animation/animate';\nimport { animate, animateColor } from '../../util/animation/animate';\nimport type {\n  AnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n  ValueAnimationOptions,\n} from '../../util/animation/types';\nimport { ObjectGeometry } from './ObjectGeometry';\n\ntype TAncestor = FabricObject;\ntype TCollection = Group;\n\nexport type Ancestors =\n  | [FabricObject | Group]\n  | [FabricObject | Group, ...Group[]]\n  | Group[];\n\nexport type AncestryComparison = {\n  /**\n   * common ancestors of `this` and`other`(may include`this` | `other`)\n   */\n  common: Ancestors;\n  /**\n   * ancestors that are of `this` only\n   */\n  fork: Ancestors;\n  /**\n   * ancestors that are of `other` only\n   */\n  otherFork: Ancestors;\n};\n\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\n  Required<\n    Pick<\n      T,\n      | 'zoomX'\n      | 'zoomY'\n      | '_cacheCanvas'\n      | '_cacheContext'\n      | 'cacheTranslationX'\n      | 'cacheTranslationY'\n    >\n  > & {\n    _cacheContext: CanvasRenderingContext2D;\n  };\n\nexport type ObjectToCanvasElementOptions = {\n  format?: ImageFormat;\n  /** Multiplier to scale by */\n  multiplier?: number;\n  /** Cropping left offset. Introduced in v1.2.14 */\n  left?: number;\n  /** Cropping top offset. Introduced in v1.2.14 */\n  top?: number;\n  /** Cropping width. Introduced in v1.2.14 */\n  width?: number;\n  /** Cropping height. Introduced in v1.2.14 */\n  height?: number;\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\n  enableRetinaScaling?: boolean;\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\n  withoutTransform?: boolean;\n  /** Remove current object shadow. Introduced in 2.4.2 */\n  withoutShadow?: boolean;\n  /** Account for canvas viewport transform */\n  viewportTransform?: boolean;\n  /** Function to create the output canvas to export onto */\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\n};\n\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\n  quality?: number;\n};\n\nexport type DrawContext =\n  | {\n      parentClipPaths: FabricObject[];\n      width: number;\n      height: number;\n      cacheTranslationX: number;\n      cacheTranslationY: number;\n      zoomX: number;\n      zoomY: number;\n    }\n  | Record<string, never>;\n\n/**\n * Root object class from which all 2d shape classes inherit from\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n *\n * @fires added\n * @fires removed\n *\n * @fires selected\n * @fires deselected\n *\n * @fires rotating\n * @fires scaling\n * @fires moving\n * @fires skewing\n * @fires modified\n *\n * @fires mousedown\n * @fires mouseup\n * @fires mouseover\n * @fires mouseout\n * @fires mousewheel\n * @fires mousedblclick\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drop\n */\nexport class FabricObject<\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends ObjectGeometry<EventSpec>\n  implements ObjectProps\n{\n  declare minScaleLimit: number;\n\n  declare opacity: number;\n\n  declare paintFirst: 'fill' | 'stroke';\n  declare fill: string | TFiller | null;\n  declare fillRule: CanvasFillRule;\n  declare stroke: string | TFiller | null;\n  declare strokeDashArray: number[] | null;\n  declare strokeDashOffset: number;\n  declare strokeLineCap: CanvasLineCap;\n  declare strokeLineJoin: CanvasLineJoin;\n  declare strokeMiterLimit: number;\n\n  declare globalCompositeOperation: GlobalCompositeOperation;\n  declare backgroundColor: string;\n\n  declare shadow: Shadow | null;\n\n  declare visible: boolean;\n\n  declare includeDefaultValues: boolean;\n  declare excludeFromExport: boolean;\n\n  declare objectCaching: boolean;\n\n  declare clipPath?: FabricObject;\n  declare inverted: boolean;\n  declare absolutePositioned: boolean;\n  declare centeredRotation: boolean;\n  declare centeredScaling: boolean;\n\n  /**\n   * This list of properties is used to check if the state of an object is changed.\n   * This state change now is only used for children of groups to understand if a group\n   * needs its cache regenerated during a .set call\n   * @type Array\n   */\n  static stateProperties: string[] = stateProperties;\n\n  /**\n   * List of properties to consider when checking if cache needs refresh\n   * Those properties are checked by\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n   * and refreshed at the next render\n   * @type Array\n   */\n  static cacheProperties: string[] = cacheProperties;\n\n  /**\n   * When set to `true`, object's cache will be rerendered next render call.\n   * since 1.7.0\n   * @type Boolean\n   * @default true\n   */\n  declare dirty: boolean;\n\n  /**\n   * Quick access for the _cacheCanvas rendering context\n   * This is part of the objectCaching feature\n   * since 1.7.0\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  _cacheContext: CanvasRenderingContext2D | null = null;\n\n  /**\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\n   * this canvas element is resized and cleared as needed\n   * Is marked private, you can read it, don't use it since it is handled by fabric\n   * since 1.7.0\n   * @type HTMLCanvasElement\n   * @default undefined\n   * @private\n   */\n  declare _cacheCanvas?: HTMLCanvasElement;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, X axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomX?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomY?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationX?: number;\n\n  /**\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationY?: number;\n\n  /**\n   * A reference to the parent of the object, usually a Group\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare group?: Group;\n\n  /**\n   * Indicate if the object is sitting on a cache dedicated to it\n   * or is part of a larger cache for many object ( a group for example)\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare ownCaching?: boolean;\n\n  /**\n   * Private. indicates if the object inside a group is on a transformed context or not\n   * or is part of a larger cache for many object ( a group for example)\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  declare _transformDone?: boolean;\n\n  static ownDefaults = fabricObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return FabricObject.ownDefaults;\n  }\n\n  /**\n   * The class type.\n   * This is used for serialization and deserialization purposes and internally it can be used\n   * to identify classes.\n   * When we transform a class in a plain JS object we need a way to recognize which class it was,\n   * and the type is the way we do that. It has no other purposes and you should not give one.\n   * Hard to reach on instances and please do not use to drive instance's logic (this.constructor.type).\n   * To idenfity a class use instanceof class ( instanceof Rect ).\n   * We do not do that in fabricJS code because we want to try to have code splitting possible.\n   */\n  static type = 'FabricObject';\n\n  /**\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\n   * Will be removed in fabric 7 or 8.\n   * The setter exists to avoid type errors in old code and possibly current deserialization code.\n   * DO NOT build new code around this type value\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    const name = (this.constructor as typeof FabricObject).type;\n    if (name === 'FabricObject') {\n      return 'object';\n    }\n    return name.toLowerCase();\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, FabricObject.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * Create a the canvas used to keep the cached copy of the object\n   * @private\n   */\n  _createCacheCanvas() {\n    this._cacheCanvas = createCanvasElement();\n    this._cacheContext = this._cacheCanvas.getContext('2d');\n    this._updateCacheCanvas();\n    // if canvas gets created, is empty, so dirty.\n    this.dirty = true;\n  }\n\n  /**\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\n   * and each side do not cross fabric.cacheSideLimit\n   * those numbers are configurable so that you can get as much detail as you want\n   * making bargain with performances.\n   * @param {Object} dims\n   * @param {Object} dims.width width of canvas\n   * @param {Object} dims.height height of canvas\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _limitCacheSize(\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any,\n  ) {\n    const width = dims.width,\n      height = dims.height,\n      max = config.maxCacheSideLimit,\n      min = config.minCacheSideLimit;\n    if (\n      width <= max &&\n      height <= max &&\n      width * height <= config.perfLimitSizeTotal\n    ) {\n      if (width < min) {\n        dims.width = min;\n      }\n      if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    }\n    const ar = width / height,\n      [limX, limY] = cache.limitDimsByArea(ar),\n      x = capValue(min, limX, max),\n      y = capValue(min, limY, max);\n    if (width > x) {\n      dims.zoomX /= width / x;\n      dims.width = x;\n      dims.capped = true;\n    }\n    if (height > y) {\n      dims.zoomY /= height / y;\n      dims.height = y;\n      dims.capped = true;\n    }\n    return dims;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @return {Object}.x width of object to be cached\n   * @return {Object}.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const objectScale = this.getTotalObjectScaling(),\n      // calculate dimensions without skewing\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\n      neededX = (dim.x * objectScale.x) / this.scaleX,\n      neededY = (dim.y * objectScale.y) / this.scaleY;\n    return {\n      // for sure this ALIASING_LIMIT is slightly creating problem\n      // in situation in which the cache canvas gets an upper limit\n      // also objectScale contains already scaleX and scaleY\n      width: Math.ceil(neededX + ALIASING_LIMIT),\n      height: Math.ceil(neededY + ALIASING_LIMIT),\n      zoomX: objectScale.x,\n      zoomY: objectScale.y,\n      x: neededX,\n      y: neededY,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const canvas = this._cacheCanvas!,\n      context = this._cacheContext,\n      { width, height, zoomX, zoomY, x, y } = this._limitCacheSize(\n        this._getCacheCanvasDimensions(),\n      ),\n      dimensionsChanged = width !== canvas.width || height !== canvas.height,\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\n\n    if (!canvas || !context) {\n      return false;\n    }\n\n    const shouldRedraw = dimensionsChanged || zoomChanged;\n\n    if (shouldRedraw) {\n      if (width !== canvas.width || height !== canvas.height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      const drawingWidth = x / 2;\n      const drawingHeight = y / 2;\n      this.cacheTranslationX =\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n      this.cacheTranslationY =\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\n      context.scale(zoomX, zoomY);\n      this.zoomX = zoomX;\n      this.zoomY = zoomY;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sets object's properties from options, for class constructor only.\n   * Needs to be overridden for different defaults.\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected setOptions(options: Record<string, any> = {}) {\n    this._setOptions(options);\n  }\n\n  /**\n   * Transforms context when rendering an object\n   * @param {CanvasRenderingContext2D} ctx Context\n   */\n  transform(ctx: CanvasRenderingContext2D) {\n    const needFullTransform =\n      (this.group && !this.group._transformDone) ||\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\n    const m = this.calcTransformMatrix(!needFullTransform);\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling\n   * @return {Point}\n   */\n  getObjectScaling() {\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\n    // otherwise the complex method with angles will return approximations and decimals\n    // and will likely kill the cache when not needed\n    // https://github.com/fabricjs/fabric.js/issues/7157\n    if (!this.group) {\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\n    }\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n    const options = qrDecompose(this.calcTransformMatrix());\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling, zoom and retina\n   * @return {Object} object with scaleX and scaleY properties\n   */\n  getTotalObjectScaling() {\n    const scale = this.getObjectScaling();\n    if (this.canvas) {\n      const zoom = this.canvas.getZoom();\n      const retina = this.getCanvasRetinaScaling();\n      return scale.scalarMultiply(zoom * retina);\n    }\n    return scale;\n  }\n\n  /**\n   * Return the object opacity counting also the group property\n   * @return {Number}\n   */\n  getObjectOpacity() {\n    let opacity = this.opacity;\n    if (this.group) {\n      opacity *= this.group.getObjectOpacity();\n    }\n    return opacity;\n  }\n\n  /**\n   * Makes sure the scale is valid and modifies it if necessary\n   * @todo: this is a control action issue, not a geometry one\n   * @private\n   * @param {Number} value, unconstrained\n   * @return {Number} constrained value;\n   */\n  _constrainScale(value: number): number {\n    if (Math.abs(value) < this.minScaleLimit) {\n      if (value < 0) {\n        return -this.minScaleLimit;\n      } else {\n        return this.minScaleLimit;\n      }\n    } else if (value === 0) {\n      return 0.0001;\n    }\n    return value;\n  }\n\n  /**\n   * Handles setting values on the instance and handling internal side effects\n   * @protected\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (key === SCALE_X || key === SCALE_Y) {\n      value = this._constrainScale(value);\n    }\n    if (key === SCALE_X && value < 0) {\n      this.flipX = !this.flipX;\n      value *= -1;\n    } else if (key === 'scaleY' && value < 0) {\n      this.flipY = !this.flipY;\n      value *= -1;\n      // i don't like this automatic initialization here\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\n      value = new Shadow(value);\n    }\n\n    const isChanged = this[key as keyof this] !== value;\n    this[key as keyof this] = value;\n\n    // invalidate caches\n    if (\n      isChanged &&\n      (this.constructor as typeof FabricObject).cacheProperties.includes(key)\n    ) {\n      this.dirty = true;\n    }\n    // a dirty child makes the parent dirty.\n    // but a non dirty child does not make the parent not dirty.\n    // the parent could be dirty for some other reason.\n    this.parent &&\n      (this.dirty ||\n        (isChanged &&\n          (this.constructor as typeof FabricObject).stateProperties.includes(\n            key,\n          ))) &&\n      this.parent._set('dirty', true);\n\n    return this;\n  }\n\n  /*\n   * @private\n   * return if the object would be visible in rendering\n   * @memberOf FabricObject.prototype\n   * @return {Boolean}\n   */\n  isNotVisible() {\n    return (\n      this.opacity === 0 ||\n      (!this.width && !this.height && this.strokeWidth === 0) ||\n      !this.visible\n    );\n  }\n\n  /**\n   * Renders an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    // do not render if width/height are zeros or object is not visible\n    if (this.isNotVisible()) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    ctx.save();\n    this._setupCompositeOperation(ctx);\n    this.drawSelectionBackground(ctx);\n    this.transform(ctx);\n    this._setOpacity(ctx);\n    this._setShadow(ctx);\n    if (this.shouldCache()) {\n      (this as TCachedFabricObject).renderCache();\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\n    } else {\n      this._removeCacheCanvas();\n      this.drawObject(ctx, false, {});\n      this.dirty = false;\n    }\n    ctx.restore();\n  }\n\n  drawSelectionBackground(_ctx: CanvasRenderingContext2D) {\n    /* no op */\n  }\n\n  renderCache(this: TCachedFabricObject, options?: any) {\n    options = options || {};\n    if (!this._cacheCanvas || !this._cacheContext) {\n      this._createCacheCanvas();\n    }\n    if (this.isCacheDirty() && this._cacheContext) {\n      const { zoomX, zoomY, cacheTranslationX, cacheTranslationY } = this;\n      const { width, height } = this._cacheCanvas;\n      this.drawObject(this._cacheContext, options.forClipping, {\n        zoomX,\n        zoomY,\n        cacheTranslationX,\n        cacheTranslationY,\n        width,\n        height,\n        parentClipPaths: [],\n      });\n      this.dirty = false;\n    }\n  }\n\n  /**\n   * Remove cacheCanvas and its dimensions from the objects\n   */\n  _removeCacheCanvas() {\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  /**\n   * return true if the object will draw a stroke\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when stroke happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the stroke is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasStroke() {\n    return (\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\n    );\n  }\n\n  /**\n   * return true if the object will draw a fill\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when fill happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the fill is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasFill() {\n    return this.fill && this.fill !== 'transparent';\n  }\n\n  /**\n   * When returns `true`, force the object to have its own cache, even if it is inside a group\n   * it may be needed when your object behave in a particular way on the cache and always needs\n   * its own isolated canvas to render correctly.\n   * Created to be overridden\n   * since 1.7.12\n   * @returns Boolean\n   */\n  needsItsOwnCache() {\n    // TODO re-evaluate this shadow condition\n    if (\n      this.paintFirst === STROKE &&\n      this.hasFill() &&\n      this.hasStroke() &&\n      !!this.shadow\n    ) {\n      return true;\n    }\n    if (this.clipPath) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    this.ownCaching =\n      (this.objectCaching && (!this.parent || !this.parent.isOnACache())) ||\n      this.needsItsOwnCache();\n    return this.ownCaching;\n  }\n\n  /**\n   * Check if this object will cast a shadow with an offset.\n   * used by Group.shouldCache to know if child has a shadow recursively\n   * @return {Boolean}\n   * @deprecated\n   */\n  willDrawShadow() {\n    return (\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\n    );\n  }\n\n  /**\n   * Execute the drawing operation for an object clipPath\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {FabricObject} clipPath\n   */\n  drawClipPathOnCache(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject,\n    canvasWithClipPath: HTMLCanvasElement,\n  ) {\n    ctx.save();\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4\n    if (clipPath.inverted) {\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'destination-in';\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    //ctx.scale(1 / 2, 1 / 2);\n    ctx.drawImage(canvasWithClipPath, 0, 0);\n    ctx.restore();\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {boolean} forClipping apply clipping styles\n   * @param {DrawContext} context additional context for rendering\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    const originalFill = this.fill,\n      originalStroke = this.stroke;\n    if (forClipping) {\n      this.fill = 'black';\n      this.stroke = '';\n      this._setClippingProperties(ctx);\n    } else {\n      this._renderBackground(ctx);\n    }\n    this._render(ctx);\n    this._drawClipPath(ctx, this.clipPath, context);\n    this.fill = originalFill;\n    this.stroke = originalStroke;\n  }\n\n  private createClipPathLayer(\n    this: TCachedFabricObject,\n    clipPath: FabricObject,\n    context: DrawContext,\n  ) {\n    const canvas = createCanvasElementFor(context as TSize);\n    const ctx = canvas.getContext('2d')!;\n    ctx.translate(context.cacheTranslationX, context.cacheTranslationY);\n    ctx.scale(context.zoomX, context.zoomY);\n    clipPath._cacheCanvas = canvas;\n    context.parentClipPaths.forEach((prevClipPath) => {\n      prevClipPath.transform(ctx);\n    });\n    context.parentClipPaths.push(clipPath);\n    if (clipPath.absolutePositioned) {\n      const m = invertTransform(this.calcTransformMatrix());\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    clipPath.transform(ctx);\n    clipPath.drawObject(ctx, true, context);\n    return canvas;\n  }\n\n  /**\n   * Prepare clipPath state and cache and draw it on instance's cache\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {FabricObject} clipPath\n   */\n  _drawClipPath(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject | undefined,\n    context: DrawContext,\n  ) {\n    if (!clipPath) {\n      return;\n    }\n    // needed to setup _transformDone\n    // TODO find a better solution?\n    clipPath._transformDone = true;\n    const canvas = (this as TCachedFabricObject).createClipPathLayer(\n      clipPath,\n      context,\n    );\n    this.drawClipPathOnCache(ctx, clipPath, canvas);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n    ctx.drawImage(\n      this._cacheCanvas,\n      -this.cacheTranslationX,\n      -this.cacheTranslationY,\n    );\n  }\n\n  /**\n   * Check if cache is dirty and if is dirty clear the context.\n   * This check has a big side effect, it changes the underlying cache canvas if necessary.\n   * Do not call this method on your own to check if the cache is dirty, because if it is,\n   * it is also going to wipe the cache. This is badly designed and needs to be fixed.\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n   * on parent canvas.\n   */\n  isCacheDirty(skipCanvas = false) {\n    if (this.isNotVisible()) {\n      return false;\n    }\n    const canvas = this._cacheCanvas;\n    const ctx = this._cacheContext;\n    if (canvas && ctx && !skipCanvas && this._updateCacheCanvas()) {\n      // in this case the context is already cleared.\n      return true;\n    } else {\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\n        if (canvas && ctx && !skipCanvas) {\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.restore();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Draws a background for the object big as its untransformed dimensions\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.backgroundColor) {\n      return;\n    }\n    const dim = this._getNonTransformedDimensions();\n    ctx.fillStyle = this.backgroundColor;\n\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n    // if there is background color no other shadows\n    // should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setOpacity(ctx: CanvasRenderingContext2D) {\n    if (this.group && !this.group._transformDone) {\n      ctx.globalAlpha = this.getObjectOpacity();\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n  }\n\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    decl: Pick<\n      this,\n      | 'stroke'\n      | 'strokeWidth'\n      | 'strokeLineCap'\n      | 'strokeDashOffset'\n      | 'strokeLineJoin'\n      | 'strokeMiterLimit'\n    >,\n  ) {\n    const stroke = decl.stroke;\n    if (stroke) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = decl.strokeLineCap;\n      ctx.lineDashOffset = decl.strokeDashOffset;\n      ctx.lineJoin = decl.strokeLineJoin;\n      ctx.miterLimit = decl.strokeMiterLimit;\n      if (isFiller(stroke)) {\n        if (\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\n          (stroke as Gradient<'linear'>).gradientTransform ||\n          (stroke as Pattern).patternTransform\n        ) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          this._applyPatternForTransformedGradient(ctx, stroke);\n        } else {\n          // is a simple gradient or pattern\n          ctx.strokeStyle = stroke.toLive(ctx)!;\n          this._applyPatternGradientTransform(ctx, stroke);\n        }\n      } else {\n        // is a color\n        ctx.strokeStyle = decl.stroke as string;\n      }\n    }\n  }\n\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    if (fill) {\n      if (isFiller(fill)) {\n        ctx.fillStyle = fill.toLive(ctx)!;\n        this._applyPatternGradientTransform(ctx, fill);\n      } else {\n        ctx.fillStyle = fill;\n      }\n    }\n  }\n\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = '#000000';\n  }\n\n  /**\n   * @private\n   * Sets line dash\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n   * @param {Array} dashArray array representing dashes\n   */\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\n    if (!dashArray || dashArray.length === 0) {\n      return;\n    }\n    ctx.setLineDash(dashArray);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    const shadow = this.shadow,\n      canvas = this.canvas,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\n      multX = sx * retinaScaling,\n      multY = sy * retinaScaling,\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur =\n      (shadow.blur *\n        config.browserShadowBlurConstant *\n        (multX + multY) *\n        (scaling.x + scaling.y)) /\n      4;\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _removeShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\n   */\n  _applyPatternGradientTransform(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    if (!isFiller(filler)) {\n      return { offsetX: 0, offsetY: 0 };\n    }\n    const t =\n      (filler as Gradient<'linear'>).gradientTransform ||\n      (filler as Pattern).patternTransform;\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\n      offsetY = -this.height / 2 + filler.offsetY || 0;\n\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n    } else {\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n    }\n    if (t) {\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n    }\n    return { offsetX: offsetX, offsetY: offsetY };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderStroke(ctx);\n      this._renderFill(ctx);\n    } else {\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * function that actually render something on the context.\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\n   * not related to rendering\n   * @param {CanvasRenderingContext2D} _ctx Context to render on\n   */\n  _render(_ctx: CanvasRenderingContext2D) {\n    // placeholder to be overridden\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill) {\n      return;\n    }\n\n    ctx.save();\n    this._setFillStyles(ctx, this);\n    if (this.fillRule === 'evenodd') {\n      ctx.fill('evenodd');\n    } else {\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderStroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    if (this.strokeUniform) {\n      const scaling = this.getObjectScaling();\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\n    }\n    this._setLineDash(ctx, this.strokeDashArray);\n    this._setStrokeStyles(ctx, this);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Gradient} filler\n   */\n  _applyPatternForTransformedGradient(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      retinaScaling = this.getCanvasRetinaScaling(),\n      width = dims.x / this.scaleX / retinaScaling,\n      height = dims.y / this.scaleY / retinaScaling,\n      pCanvas = createCanvasElementFor({\n        // in case width and height are less than 1px, we have to round up.\n        // since the pattern is no-repeat, this is fine\n        width: Math.ceil(width),\n        height: Math.ceil(height),\n      });\n\n    const pCtx = pCanvas.getContext('2d');\n    if (!pCtx) {\n      return;\n    }\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.scale(\n      dims.zoomX / this.scaleX / retinaScaling,\n      dims.zoomY / this.scaleY / retinaScaling,\n    );\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fillStyle = filler.toLive(ctx)!;\n    pCtx.fill();\n    ctx.translate(\n      -this.width / 2 - this.strokeWidth / 2,\n      -this.height / 2 - this.strokeWidth / 2,\n    );\n    ctx.scale(\n      (retinaScaling * this.scaleX) / dims.zoomX,\n      (retinaScaling * this.scaleY) / dims.zoomY,\n    );\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement() {\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\n  }\n\n  /**\n   * Clones an instance.\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {Promise<FabricObject>}\n   */\n  clone(propertiesToInclude?: string[]): Promise<this> {\n    const objectForm = this.toObject(propertiesToInclude);\n    return (this.constructor as typeof FabricObject).fromObject(\n      objectForm,\n    ) as unknown as Promise<this>;\n  }\n\n  /**\n   * Creates an instance of Image out of an object\n   * makes use of toCanvasElement.\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\n   * and format option. toCanvasElement is faster and produce no loss of quality.\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {FabricImage} Object cloned as image.\n   */\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\n    const canvasEl = this.toCanvasElement(options);\n    // TODO: how to import Image w/o an import cycle?\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\n    return new ImageClass(canvasEl);\n  }\n\n  /**\n   * Converts an object into a HTMLCanvas element\n   * @param {ObjectToCanvasElementOptions} options Options object\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\n   */\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\n    const origParams = saveObjectTransform(this),\n      originalGroup = this.group,\n      originalShadow = this.shadow,\n      abs = Math.abs,\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\n      multiplier = (options.multiplier || 1) * retinaScaling,\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\n        options.canvasProvider ||\n        ((el: HTMLCanvasElement) =>\n          new StaticCanvas(el, {\n            enableRetinaScaling: false,\n            renderOnAddRemove: false,\n            skipOffscreen: false,\n          }));\n    delete this.group;\n    if (options.withoutTransform) {\n      resetObjectTransform(this);\n    }\n    if (options.withoutShadow) {\n      this.shadow = null;\n    }\n    if (options.viewportTransform) {\n      sendObjectToPlane(this, this.getViewportTransform());\n    }\n\n    this.setCoords();\n    const el = createCanvasElement(),\n      boundingRect = this.getBoundingRect(),\n      shadow = this.shadow,\n      shadowOffset = new Point();\n\n    if (shadow) {\n      const shadowBlur = shadow.blur;\n      const scaling = shadow.nonScaling\n        ? new Point(1, 1)\n        : this.getObjectScaling();\n      // consider non scaling shadow.\n      shadowOffset.x =\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\n      shadowOffset.y =\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\n    }\n    const width = boundingRect.width + shadowOffset.x,\n      height = boundingRect.height + shadowOffset.y;\n    // if the current width/height is not an integer\n    // we need to make it so.\n    el.width = Math.ceil(width);\n    el.height = Math.ceil(height);\n    const canvas = canvasProvider(el);\n    if (options.format === 'jpeg') {\n      canvas.backgroundColor = '#fff';\n    }\n    this.setPositionByOrigin(\n      new Point(canvas.width / 2, canvas.height / 2),\n      CENTER,\n      CENTER,\n    );\n    const originalCanvas = this.canvas;\n    // static canvas and canvas have both an array of InteractiveObjects\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\n    canvas._objects = [this];\n    this.set('canvas', canvas);\n    this.setCoords();\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n    this.set('canvas', originalCanvas);\n    this.shadow = originalShadow;\n    if (originalGroup) {\n      this.group = originalGroup;\n    }\n    this.set(origParams);\n    this.setCoords();\n    // canvas.dispose will call image.dispose that will nullify the elements\n    // since this canvas is a simple element for the process, we remove references\n    // to objects in this way in order to avoid object trashing.\n    canvas._objects = [];\n    // since render has settled it is safe to destroy canvas\n    canvas.destroy();\n    return canvasEl;\n  }\n\n  /**\n   * Converts an object into a data-url-like string\n   * @param {Object} options Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL(options: toDataURLOptions = {}) {\n    return toDataURL(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n  toBlob(options: toDataURLOptions = {}) {\n    return toBlob(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n\n  /**\n   * Returns true if any of the specified types is identical to the type of an instance\n   * @param {String} type Type to check against\n   * @return {Boolean}\n   */\n  isType(...types: string[]) {\n    return (\n      types.includes((this.constructor as typeof FabricObject).type) ||\n      types.includes(this.type)\n    );\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\n   */\n  complexity() {\n    return 1;\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  /**\n   * Sets \"angle\" of an instance with centered rotation\n   * @param {TDegree} angle Angle value (in degrees)\n   */\n  rotate(angle: TDegree) {\n    const { centeredRotation, originX, originY } = this;\n\n    if (centeredRotation) {\n      const { x, y } = this.getRelativeCenterPoint();\n      this.originX = CENTER;\n      this.originY = CENTER;\n      this.left = x;\n      this.top = y;\n    }\n\n    this.set('angle', angle);\n\n    if (centeredRotation) {\n      const { x, y } = this.translateToOriginPoint(\n        this.getRelativeCenterPoint(),\n        originX,\n        originY,\n      );\n      this.left = x;\n      this.top = y;\n      this.originX = originX;\n      this.originY = originY;\n    }\n  }\n\n  /**\n   * This callback function is called by the parent group of an object every\n   * time a non-delegated property changes on the group. It is passed the key\n   * and value as parameters. Not adding in this function's signature to avoid\n   * Travis build error about unused variables.\n   */\n  setOnGroup() {\n    // implemented by sub-classes, as needed.\n  }\n\n  /**\n   * Sets canvas globalCompositeOperation for specific object\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n   */\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\n    if (this.globalCompositeOperation) {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n  }\n\n  /**\n   * cancel instance's running animations\n   * override if necessary to dispose artifacts such as `clipPath`\n   */\n  dispose() {\n    runningAnimations.cancelByTarget(this);\n    this.off();\n    this._set('canvas', undefined);\n    // clear caches\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  // #region Animation methods\n  /**\n   * List of properties to consider for animating colors.\n   * @type String[]\n   */\n  static colorProperties: string[] = [FILL, STROKE, 'backgroundColor'];\n\n  /**\n   * Animates object's properties\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\n   * @param {Partial<AnimationOptions<T>>} options\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   */\n  animate<T extends number | number[] | TColorArg>(\n    animatable: Record<string, T>,\n    options?: Partial<AnimationOptions<T>>,\n  ): Record<string, TAnimation<T>> {\n    return Object.entries(animatable).reduce(\n      (acc, [key, endValue]) => {\n        acc[key] = this._animate(key, endValue, options);\n        return acc;\n      },\n      {} as Record<string, TAnimation<T>>,\n    );\n  }\n\n  /**\n   * @private\n   * @param {String} key Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   */\n  _animate<T extends number | number[] | TColorArg>(\n    key: string,\n    endValue: T,\n    options: Partial<AnimationOptions<T>> = {},\n  ): TAnimation<T> {\n    const path = key.split('.');\n    const propIsColor = (\n      this.constructor as typeof FabricObject\n    ).colorProperties.includes(path[path.length - 1]);\n    const { abort, startValue, onChange, onComplete } = options;\n    const animationOptions = {\n      ...options,\n      target: this,\n      // path.reduce... is the current value in case start value isn't provided\n      startValue:\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\n      endValue,\n      abort: abort?.bind(this),\n      onChange: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        path.reduce((deep: Record<string, any>, key, index) => {\n          if (index === path.length - 1) {\n            deep[key] = value;\n          }\n          return deep[key];\n        }, this);\n        onChange &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onChange(value, valueProgress, durationProgress);\n      },\n      onComplete: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        this.setCoords();\n        onComplete &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onComplete(value, valueProgress, durationProgress);\n      },\n    } as AnimationOptions<T>;\n\n    return (\n      propIsColor\n        ? animateColor(animationOptions as ColorAnimationOptions)\n        : animate(\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions,\n          )\n    ) as TAnimation<T>;\n  }\n\n  // #region Object stacking methods\n\n  /**\n   * A reference to the parent of the object\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\n   */\n  declare parent?: Group;\n\n  /**\n   * Checks if object is descendant of target\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\n   * @param {TAncestor} target\n   * @returns {boolean}\n   */\n  isDescendantOf(target: TAncestor): boolean {\n    const { parent, group } = this;\n    return (\n      parent === target ||\n      group === target ||\n      // walk up\n      (!!parent && parent.isDescendantOf(target)) ||\n      (!!group && group !== parent && group.isDescendantOf(target))\n    );\n  }\n\n  /**\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\n   */\n  getAncestors(): Ancestors {\n    const ancestors: TAncestor[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: TAncestor | undefined = this;\n    do {\n      parent = parent.parent;\n      parent && ancestors.push(parent);\n    } while (parent);\n    return ancestors as Ancestors;\n  }\n\n  /**\n   * Compare ancestors\n   *\n   * @param {StackedObject} other\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\n   */\n  findCommonAncestors<T extends this>(other: T): AncestryComparison {\n    if (this === other) {\n      return {\n        fork: [],\n        otherFork: [],\n        common: [this, ...this.getAncestors()],\n      } as AncestryComparison;\n    }\n    const ancestors = this.getAncestors();\n    const otherAncestors = other.getAncestors();\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\n    if (\n      ancestors.length === 0 &&\n      otherAncestors.length > 0 &&\n      this === otherAncestors[otherAncestors.length - 1]\n    ) {\n      return {\n        fork: [],\n        otherFork: [\n          other,\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\n        ],\n        common: [this],\n      } as AncestryComparison;\n    }\n    //  compare ancestors\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\n      ancestor = ancestors[i];\n      if (ancestor === other) {\n        return {\n          fork: [this, ...ancestors.slice(0, i)],\n          otherFork: [],\n          common: ancestors.slice(i),\n        } as AncestryComparison;\n      }\n      for (let j = 0; j < otherAncestors.length; j++) {\n        if (this === otherAncestors[j]) {\n          return {\n            fork: [],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: [this, ...ancestors],\n          } as AncestryComparison;\n        }\n        if (ancestor === otherAncestors[j]) {\n          return {\n            fork: [this, ...ancestors.slice(0, i)],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: ancestors.slice(i),\n          } as AncestryComparison;\n        }\n      }\n    }\n    // nothing shared\n    return {\n      fork: [this, ...ancestors],\n      otherFork: [other, ...otherAncestors],\n      common: [],\n    } as AncestryComparison;\n  }\n\n  /**\n   *\n   * @param {StackedObject} other\n   * @returns {boolean}\n   */\n  hasCommonAncestors<T extends this>(other: T): boolean {\n    const commonAncestors = this.findCommonAncestors(other);\n    return commonAncestors && !!commonAncestors.common.length;\n  }\n\n  /**\n   *\n   * @param {FabricObject} other object to compare against\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\n   */\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\n    if (this === other) {\n      return undefined;\n    }\n    const ancestorData = this.findCommonAncestors(other);\n\n    if (ancestorData.fork.includes(other as any)) {\n      return true;\n    }\n    if (ancestorData.otherFork.includes(this as any)) {\n      return false;\n    }\n    // if there isn't a common ancestor, we take the canvas.\n    // if there is no canvas, there is nothing to compare\n    const firstCommonAncestor = ancestorData.common[0] || this.canvas;\n    if (!firstCommonAncestor) {\n      return undefined;\n    }\n    const headOfFork = ancestorData.fork.pop(),\n      headOfOtherFork = ancestorData.otherFork.pop(),\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfFork as any,\n      ),\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfOtherFork as any,\n      );\n    return thisIndex > -1 && thisIndex > otherIndex;\n  }\n\n  // #region Serialization\n  /**\n   * Define a list of custom properties that will be serialized when\n   * instance.toObject() gets called\n   */\n  static customProperties: string[] = [];\n\n  /**\n   * Returns an object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject(propertiesToInclude: any[] = []): any {\n    const propertiesToSerialize = propertiesToInclude.concat(\n      FabricObject.customProperties,\n      (this.constructor as typeof FabricObject).customProperties || [],\n    );\n    let clipPathData: Partial<SerializedObjectProps> | undefined;\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n    const {\n      clipPath,\n      fill,\n      stroke,\n      shadow,\n      strokeDashArray,\n      left,\n      top,\n      originX,\n      originY,\n      width,\n      height,\n      strokeWidth,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit,\n      scaleX,\n      scaleY,\n      angle,\n      flipX,\n      flipY,\n      opacity,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX,\n      skewY,\n    } = this;\n    if (clipPath && !clipPath.excludeFromExport) {\n      clipPathData = clipPath.toObject(\n        propertiesToSerialize.concat('inverted', 'absolutePositioned'),\n      );\n    }\n    const toFixedBound = (val: number) => toFixed(val, NUM_FRACTION_DIGITS);\n    const object = {\n      ...pick(this, propertiesToSerialize as (keyof this)[]),\n      type: (this.constructor as typeof FabricObject).type,\n      version: VERSION,\n      originX,\n      originY,\n      left: toFixedBound(left),\n      top: toFixedBound(top),\n      width: toFixedBound(width),\n      height: toFixedBound(height),\n      fill: isSerializableFiller(fill) ? fill.toObject() : fill,\n      stroke: isSerializableFiller(stroke) ? stroke.toObject() : stroke,\n      strokeWidth: toFixedBound(strokeWidth),\n      strokeDashArray: strokeDashArray\n        ? strokeDashArray.concat()\n        : strokeDashArray,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit: toFixedBound(strokeMiterLimit),\n      scaleX: toFixedBound(scaleX),\n      scaleY: toFixedBound(scaleY),\n      angle: toFixedBound(angle),\n      flipX,\n      flipY,\n      opacity: toFixedBound(opacity),\n      shadow: shadow ? shadow.toObject() : shadow,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX: toFixedBound(skewX),\n      skewY: toFixedBound(skewY),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n\n    return !this.includeDefaultValues\n      ? this._removeDefaultValues(object)\n      : object;\n  }\n\n  /**\n   * Returns (dataless) object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: any[]): any {\n    // will be overwritten by subclasses\n    return this.toObject(propertiesToInclude);\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\n    const baseValues = hasStaticDefaultValues\n      ? defaults\n      : Object.getPrototypeOf(this);\n\n    return pickBy(object, (value, key) => {\n      if (key === LEFT || key === TOP || key === 'type') {\n        return true;\n      }\n      const baseValue = baseValues[key];\n      return (\n        value !== baseValue &&\n        // basically a check for [] === []\n        !(\n          Array.isArray(value) &&\n          Array.isArray(baseValue) &&\n          value.length === 0 &&\n          baseValue.length === 0\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String}\n   */\n  toString() {\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\n  }\n\n  /**\n   *\n   * @param {Function} klass\n   * @param {object} object\n   * @param {object} [options]\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static _fromObject<S extends FabricObject>(\n    { type, ...serializedObjectOptions }: Record<string, unknown>,\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {},\n  ): Promise<S> {\n    return enlivenObjectEnlivables<any>(serializedObjectOptions, options).then(\n      (enlivedObjectOptions) => {\n        // from the resulting enlived options, extract options.extraParam to arg0\n        // to avoid accidental overrides later\n        if (extraParam) {\n          delete enlivedObjectOptions[extraParam];\n          return new this(\n            serializedObjectOptions[extraParam],\n            // @ts-expect-error different signature\n            enlivedObjectOptions,\n          );\n        } else {\n          return new this(enlivedObjectOptions);\n        }\n      },\n    ) as Promise<S>;\n  }\n\n  /**\n   *\n   * @param {object} object\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\n    object: T,\n    options?: Abortable,\n  ) {\n    return this._fromObject(object, options);\n  }\n}\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n","import type {\n  TModificationEvents,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\n/**\n * Wrap an action handler with firing an event if the action is performed\n * @param {TModificationEvents} eventName the event we want to fire\n * @param {TransformActionHandler<T>} actionHandler the function to wrap\n * @param {object} extraEventInfo extra information to pas to the event handler\n * @return {TransformActionHandler<T>} a function with an action handler signature\n */\nexport const wrapWithFireEvent = <\n  T extends Transform,\n  P extends object = Record<string, never>,\n>(\n  eventName: TModificationEvents,\n  actionHandler: TransformActionHandler<T>,\n  extraEventInfo?: P,\n) => {\n  return ((eventData, transform, x, y) => {\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    if (actionPerformed) {\n      fireEvent(eventName, {\n        ...commonEventInfo(eventData, transform, x, y),\n        ...extraEventInfo,\n      });\n    }\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n};\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const { target, originX, originY } = transform,\n      centerPoint = target.getRelativeCenterPoint(),\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\n      actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY,\n    );\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { CENTER, LEFT, RESIZING, RIGHT } from '../constants';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { getLocalPoint, isTransformCentered } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Action handler to change object's width\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const changeObjectWidth: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const localPoint = getLocalPoint(\n    transform,\n    transform.originX,\n    transform.originY,\n    x,\n    y,\n  );\n  //  make sure the control changes width ONLY from it's side of target\n  if (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(RIGHT) &&\n      localPoint.x < 0) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(LEFT) &&\n      localPoint.x > 0)\n  ) {\n    const { target } = transform,\n      strokePadding =\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      multiplier = isTransformCentered(transform) ? 2 : 1,\n      oldWidth = target.width,\n      newWidth =\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 1));\n    //  check against actual target width in case `newWidth` was rejected\n    return oldWidth !== target.width;\n  }\n  return false;\n};\n\nexport const changeWidth = wrapWithFireEvent(\n  RESIZING,\n  wrapWithFixedAnchor(changeObjectWidth),\n);\n","import { FILL, STROKE, twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners'\n  >\n>;\n\nexport type ControlRenderer<\n  O extends InteractiveFabricObject = InteractiveFabricObject,\n> = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: O,\n) => void;\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type {\n  ControlActionHandler,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { Intersection } from '../Intersection';\nimport { Point } from '../Point';\nimport { SCALE } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { renderCircleControl, renderSquareControl } from './controlRendering';\n\nexport class Control {\n  /**\n   * keep track of control visibility.\n   * mainly for backward compatibility.\n   * if you do not want to see a control, you can remove it\n   * from the control set.\n   * @type {Boolean}\n   * @default true\n   */\n  visible = true;\n\n  /**\n   * Name of the action that the control will likely execute.\n   * This is optional. FabricJS uses to identify what the user is doing for some\n   * extra optimizations. If you are writing a custom control and you want to know\n   * somewhere else in the code what is going on, you can use this string here.\n   * you can also provide a custom getActionName if your control run multiple actions\n   * depending on some external state.\n   * default to scale since is the most common, used on 4 corners by default\n   * @type {String}\n   * @default 'scale'\n   */\n  actionName = SCALE;\n\n  /**\n   * Drawing angle of the control.\n   * NOT used for now, but name marked as needed for internal logic\n   * example: to reuse the same drawing function for different rotated controls\n   * @type {Number}\n   * @default 0\n   */\n  angle = 0;\n\n  /**\n   * Relative position of the control. X\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  x = 0;\n\n  /**\n   * Relative position of the control. Y\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  y = 0;\n\n  /**\n   * Horizontal offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the right, negative to the left.\n   * It used when you want to have position of control that does not scale with\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\n   * stay 30 pixels no matter how the object is big. Another example is having 2\n   * controls in the corner, that stay in the same position when the object scale.\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  offsetX = 0;\n\n  /**\n   * Vertical offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the bottom, negative to the top.\n   * @type {Number}\n   * @default 0\n   */\n  offsetY = 0;\n\n  /**\n   * Sets the length of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeX = 0;\n\n  /**\n   * Sets the height of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeY = 0;\n\n  /**\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeX = 0;\n\n  /**\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeY = 0;\n\n  /**\n   * Css cursor style to display when the control is hovered.\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\n   * @type {String}\n   * @default 'crosshair'\n   */\n  cursorStyle = 'crosshair';\n\n  /**\n   * If controls has an offsetY or offsetX, draw a line that connects\n   * the control to the bounding box\n   * @type {Boolean}\n   * @default false\n   */\n  withConnection = false;\n\n  constructor(options?: Partial<Control>) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * The control actionHandler, provide one to handle action ( control being moved )\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare actionHandler: TransformActionHandler;\n\n  /**\n   * The control handler for mouse down, provide one to handle mouse down on control\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseDownHandler?: ControlActionHandler;\n\n  /**\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseUpHandler?: ControlActionHandler;\n\n  shouldActivate(\n    controlKey: string,\n    fabricObject: InteractiveFabricObject,\n    pointer: Point,\n    { tl, tr, br, bl }: TCornerPoint,\n  ) {\n    // TODO: locking logic can be handled here instead of in the control handler logic\n    return (\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\n      fabricObject.isControlVisible(controlKey) &&\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\n    );\n  }\n\n  /**\n   * Returns control actionHandler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getActionHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): TransformActionHandler | undefined {\n    return this.actionHandler;\n  }\n\n  /**\n   * Returns control mouseDown handler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseDownHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseDownHandler;\n  }\n\n  /**\n   * Returns control mouseUp handler.\n   * During actions the fabricObject or the control can be of different obj\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseUpHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseUpHandler;\n  }\n\n  /**\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n   * function you can pass one in the constructor\n   * the cursorStyle property\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  cursorStyleHandler(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.cursorStyle;\n  }\n\n  /**\n   * Returns the action name. The basic implementation just return the actionName property.\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  getActionName(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.actionName;\n  }\n\n  /**\n   * Returns controls visibility\n   * @param {FabricObject} object on which the control is displayed\n   * @param {String} controlKey key where the control is memorized on the\n   * @return {Boolean}\n   */\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\n  }\n\n  /**\n   * Sets controls visibility\n   * @param {Boolean} visibility for the object\n   * @return {Void}\n   */\n  setVisibility(\n    visibility: boolean,\n    name: string,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    this.visible = visibility;\n  }\n\n  positionHandler(\n    dim: Point,\n    finalMatrix: TMat2D,\n    fabricObject: InteractiveFabricObject,\n    currentControl: Control,\n  ) {\n    return new Point(\n      this.x * dim.x + this.offsetX,\n      this.y * dim.y + this.offsetY,\n    ).transform(finalMatrix);\n  }\n\n  /**\n   * Returns the coords for this control based on object values.\n   * @param {Number} objectAngle angle from the fabric object holding the control\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n   *   isTouch is true)\n   * @param {Number} centerX x coordinate where the control center should be\n   * @param {Number} centerY y coordinate where the control center should be\n   * @param {boolean} isTouch true if touch corner, false if normal corner\n   */\n  calcCornerCoords(\n    angle: TDegree,\n    objectCornerSize: number,\n    centerX: number,\n    centerY: number,\n    isTouch: boolean,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    const t = multiplyTransformMatrixArray([\n      createTranslateMatrix(centerX, centerY),\n      createRotateMatrix({ angle }),\n      createScaleMatrix(\n        (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\n        (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize,\n      ),\n    ]);\n    return {\n      tl: new Point(-0.5, -0.5).transform(t),\n      tr: new Point(0.5, -0.5).transform(t),\n      br: new Point(0.5, 0.5).transform(t),\n      bl: new Point(-0.5, 0.5).transform(t),\n    };\n  }\n\n  /**\n   * Render function for the control.\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\n   * all the functions will have to translate to the point left,top before starting Drawing\n   * if they want to draw a control where the position is detected.\n   * left and top are the result of the positionHandler function\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\n   * @param {Number} left position of the canvas where we are about to render the control.\n   * @param {Number} top position of the canvas where we are about to render the control.\n   * @param {Object} styleOverride\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\n   */\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    styleOverride = styleOverride || {};\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n      case 'circle':\n        renderCircleControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n      default:\n        renderSquareControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n    }\n  }\n}\n","import type {\n  ControlCursorCallback,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { ROTATING } from '../constants';\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Find the correct style for the control that is used for rotation.\n * this function is very simple and it just take care of not-allowed or standard cursor\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const rotationStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (fabricObject.lockRotation) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  return control.cursorStyle;\n};\n\n/**\n * Action handler for rotation and snapping, without anchor point.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n * @private\n */\nconst rotateObjectWithSnapping: TransformActionHandler = (\n  eventData,\n  { target, ex, ey, theta, originX, originY },\n  x,\n  y,\n) => {\n  const pivotPoint = target.translateToOriginPoint(\n    target.getRelativeCenterPoint(),\n    originX,\n    originY,\n  );\n\n  if (isLocked(target, 'lockRotation')) {\n    return false;\n  }\n\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x);\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\n\n  if (target.snapAngle && target.snapAngle > 0) {\n    const snapAngle = target.snapAngle,\n      snapThreshold = target.snapThreshold || snapAngle,\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n      angle = leftAngleLocked;\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n      angle = rightAngleLocked;\n    }\n  }\n\n  // normalize angle to positive value\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n  angle %= 360;\n\n  const hasRotated = target.angle !== angle;\n  // TODO: why aren't we using set?\n  target.angle = angle;\n  return hasRotated;\n};\n\nexport const rotationWithSnapping = wrapWithFireEvent(\n  ROTATING,\n  wrapWithFixedAnchor(rotateObjectWithSnapping),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxis } from '../typedefs';\nimport type { Canvas } from '../canvas/Canvas';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  invertOrigin,\n  isLocked,\n  isTransformCentered,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport { SCALE_X, SCALE_Y, SCALING } from '../constants';\n\ntype ScaleTransform = Transform & {\n  gestureScale?: number;\n  signX?: number;\n  signY?: number;\n};\n\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\n\n/**\n * Inspect event and fabricObject properties to understand if the scaling action\n * @param {Event} eventData from the user action\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @return {Boolean} true if scale is proportional\n */\nexport function scaleIsProportional(\n  eventData: TPointerEvent,\n  fabricObject: FabricObject,\n): boolean {\n  const canvas = fabricObject.canvas as Canvas,\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\n  return (\n    (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled)\n  );\n}\n\n/**\n * Inspect fabricObject to understand if the current scaling action is allowed\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @param {String} by 'x' or 'y' or ''\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n * @return {Boolean} true if scaling is not allowed at current conditions\n */\nexport function scalingIsForbidden(\n  fabricObject: FabricObject,\n  by: ScaleBy,\n  scaleProportionally: boolean,\n) {\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\n    lockY = isLocked(fabricObject, 'lockScalingY');\n  if (lockX && lockY) {\n    return true;\n  }\n  if (!by && (lockX || lockY) && scaleProportionally) {\n    return true;\n  }\n  if (lockX && by === 'x') {\n    return true;\n  }\n  if (lockY && by === 'y') {\n    return true;\n  }\n  // code crashes because of a division by 0 if a 0 sized object is scaled\n  // forbid to prevent scaling to happen. ISSUE-9475\n  const { width, height, strokeWidth } = fabricObject;\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\n    return true;\n  }\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\n    return true;\n  }\n  return false;\n}\n\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n\n/**\n * return the correct cursor style for the scale action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\n    by =\n      control.x !== 0 && control.y === 0\n        ? 'x'\n        : control.x === 0 && control.y !== 0\n          ? 'y'\n          : '';\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control);\n  return `${scaleMap[n]}-resize`;\n};\n\n/**\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @param {Object} options additional information for scaling\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n * @return {Boolean} true if some change happened\n * @private\n */\nfunction scaleObject(\n  eventData: TPointerEvent,\n  transform: ScaleTransform,\n  x: number,\n  y: number,\n  options: { by?: ScaleBy } = {},\n) {\n  const target = transform.target,\n    by = options.by,\n    scaleProportionally = scaleIsProportional(eventData, target),\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\n  let newPoint, scaleX, scaleY, dim, signX, signY;\n\n  if (forbidScaling) {\n    return false;\n  }\n  if (transform.gestureScale) {\n    scaleX = transform.scaleX * transform.gestureScale;\n    scaleY = transform.scaleY * transform.gestureScale;\n  } else {\n    newPoint = getLocalPoint(\n      transform,\n      transform.originX,\n      transform.originY,\n      x,\n      y,\n    );\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\n    if (!transform.signX) {\n      transform.signX = signX;\n    }\n    if (!transform.signY) {\n      transform.signY = signY;\n    }\n\n    if (\n      isLocked(target, 'lockScalingFlip') &&\n      (transform.signX !== signX || transform.signY !== signY)\n    ) {\n      return false;\n    }\n\n    dim = target._getTransformedDimensions();\n    // missing detection of flip and logic to switch the origin\n    if (scaleProportionally && !by) {\n      // uniform scaling\n      const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n        { original } = transform,\n        originalDistance =\n          Math.abs((dim.x * original.scaleX) / target.scaleX) +\n          Math.abs((dim.y * original.scaleY) / target.scaleY),\n        scale = distance / originalDistance;\n      scaleX = original.scaleX * scale;\n      scaleY = original.scaleY * scale;\n    } else {\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\n    }\n    // if we are scaling by center, we need to double the scale\n    if (isTransformCentered(transform)) {\n      scaleX *= 2;\n      scaleY *= 2;\n    }\n    if (transform.signX !== signX && by !== 'y') {\n      transform.originX = invertOrigin(transform.originX);\n      scaleX *= -1;\n      transform.signX = signX;\n    }\n    if (transform.signY !== signY && by !== 'x') {\n      transform.originY = invertOrigin(transform.originY);\n      scaleY *= -1;\n      transform.signY = signY;\n    }\n  }\n  // minScale is taken care of in the setter.\n  const oldScaleX = target.scaleX,\n    oldScaleY = target.scaleY;\n  if (!by) {\n    !isLocked(target, 'lockScalingX') && target.set(SCALE_X, scaleX);\n    !isLocked(target, 'lockScalingY') && target.set(SCALE_Y, scaleY);\n  } else {\n    // forbidden cases already handled on top here.\n    by === 'x' && target.set(SCALE_X, scaleX);\n    by === 'y' && target.set(SCALE_Y, scaleY);\n  }\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n}\n\n/**\n * Generic scaling logic, to scale from corners either equally or freely.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y);\n};\n\n/**\n * Scaling logic for the X axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\n};\n\n/**\n * Scaling logic for the Y axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\n};\n\nexport const scalingEqually = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectFromCorner),\n);\n\nexport const scalingX = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectX),\n);\n\nexport const scalingY = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectY),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { TAxis, TAxisKey } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  isLocked,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport {\n  CENTER,\n  SCALE_X,\n  SCALE_Y,\n  SKEWING,\n  SKEW_X,\n  SKEW_Y,\n} from '../constants';\n\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\n\nconst AXIS_KEYS: Record<\n  TAxis,\n  {\n    counterAxis: TAxis;\n    scale: TAxisKey<'scale'>;\n    skew: TAxisKey<'skew'>;\n    lockSkewing: TAxisKey<'lockSkewing'>;\n    origin: TAxisKey<'origin'>;\n    flip: TAxisKey<'flip'>;\n  }\n> = {\n  x: {\n    counterAxis: 'y',\n    scale: SCALE_X,\n    skew: SKEW_X,\n    lockSkewing: 'lockSkewingX',\n    origin: 'originX',\n    flip: 'flipX',\n  },\n  y: {\n    counterAxis: 'x',\n    scale: SCALE_Y,\n    skew: SKEW_Y,\n    lockSkewing: 'lockSkewingY',\n    origin: 'originY',\n    flip: 'flipY',\n  },\n};\n\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\n\n/**\n * return the correct cursor style for the skew action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const skewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control) % 4;\n  return `${skewMap[n]}-resize`;\n};\n\n/**\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\n * @see https://github.com/fabricjs/fabric.js/pull/8380\n */\nfunction skewObject(\n  axis: TAxis,\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\n  pointer: Point,\n) {\n  const { skew: skewKey } = AXIS_KEYS[axis],\n    offset = pointer\n      .subtract(new Point(ex, ey))\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\n    skewingBefore = target[skewKey],\n    skewingStart = transform[skewKey],\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\n    // let a, b be the size of target\n    // let a' be the value of a after applying skewing\n    // then:\n    // a' = a + b * skewA => skewA = (a' - a) / b\n    // the value b is tricky since skewY is applied before skewX\n    b =\n      axis === 'y'\n        ? target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\n            skewX: 0,\n          }).x\n        : target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n          }).y;\n\n  const shearing =\n    (2 * offset * skewingSide) /\n      // we max out fractions to safeguard from asymptotic behavior\n      Math.max(b, 1) +\n    // add starting state\n    shearingStart;\n\n  const skewing = radiansToDegrees(Math.atan(shearing));\n\n  target.set(skewKey, skewing);\n  const changed = skewingBefore !== target[skewKey];\n\n  if (changed && axis === 'y') {\n    // we don't want skewing to affect scaleX\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\n    const { skewX, scaleX } = target,\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\n      dimAfter = target._getTransformedDimensions(),\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\n    compensationFactor !== 1 &&\n      target.set(SCALE_X, compensationFactor * scaleX);\n  }\n\n  return changed;\n}\n\n/**\n * Wrapped Action handler for skewing on a given axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nfunction skewHandler(\n  axis: TAxis,\n  eventData: TPointerEvent,\n  transform: Transform,\n  x: number,\n  y: number,\n) {\n  const { target } = transform,\n    {\n      counterAxis,\n      origin: originKey,\n      lockSkewing: lockSkewingKey,\n      skew: skewKey,\n      flip: flipKey,\n    } = AXIS_KEYS[axis];\n  if (isLocked(target, lockSkewingKey)) {\n    return false;\n  }\n\n  const { origin: counterOriginKey, flip: counterFlipKey } =\n      AXIS_KEYS[counterAxis],\n    counterOriginFactor =\n      resolveOrigin(transform[counterOriginKey]) *\n      (target[counterFlipKey] ? -1 : 1),\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\n    // so we factor skewing direction by this value.\n    skewingSide = (-Math.sign(counterOriginFactor) *\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\n    skewingDirection =\n      ((target[skewKey] === 0 &&\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\n      // in case target has skewing we use that as the direction\n      target[skewKey] > 0\n        ? 1\n        : -1) * skewingSide,\n    // anchor to the opposite side of the skewing direction\n    // normalize value from [-1, 1] to origin value [0, 1]\n    origin = -skewingDirection * 0.5 + 0.5;\n\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\n    SKEWING,\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\n      skewObject(axis, transform, new Point(x, y)),\n    ),\n  );\n\n  return finalHandler(\n    eventData,\n    {\n      ...transform,\n      [originKey]: origin,\n      skewingSide,\n    },\n    x,\n    y,\n  );\n}\n\n/**\n * Wrapped Action handler for skewing on the X axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('x', eventData, transform, x, y);\n};\n\n/**\n * Wrapped Action handler for skewing on the Y axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('y', eventData, transform, x, y);\n};\n","import type {\n  ControlCallback,\n  ControlCursorCallback,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { SCALE_X, SCALE_Y, SKEW_X, SKEW_Y } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxisKey } from '../typedefs';\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\n\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\n  return eventData[target.canvas!.altActionKey!];\n}\n\n/**\n * Inspect event, control and fabricObject to return the correct action name\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} an action name\n */\nexport const scaleOrSkewActionName: ControlCallback<\n  TAxisKey<'skew' | 'scale'> | ''\n> = (eventData, control, fabricObject) => {\n  const isAlternative = isAltAction(eventData, fabricObject);\n  if (control.x === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_X : SCALE_Y;\n  }\n  if (control.y === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_Y : SCALE_X;\n  }\n  return '';\n};\n\n/**\n * Combine skew and scale style handlers to cover fabric standard use case\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  return isAltAction(eventData, fabricObject)\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\n};\n/**\n * Composed action handler to either scale X or skew Y\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingXOrSkewingY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerY(eventData, transform, x, y)\n    : scalingX(eventData, transform, x, y);\n};\n\n/**\n * Composed action handler to either scale Y or skew X\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingYOrSkewingX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerX(eventData, transform, x, y)\n    : scalingY(eventData, transform, x, y);\n};\n","import { RESIZING, ROTATE } from '../constants';\nimport { changeWidth } from './changeWidth';\nimport { Control } from './Control';\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\nimport {\n  scaleOrSkewActionName,\n  scaleSkewCursorStyleHandler,\n  scalingXOrSkewingY,\n  scalingYOrSkewingX,\n} from './scaleSkew';\n\n// use this function if you want to generate new controls for every instance\nexport const createObjectDefaultControls = () => ({\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mb: new Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mt: new Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  tl: new Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  tr: new Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  bl: new Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  br: new Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  mtr: new Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n});\n\nexport const createResizeControls = () => ({\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n});\n\nexport const createTextboxDefaultControls = () => ({\n  ...createObjectDefaultControls(),\n  ...createResizeControls(),\n});\n","import { Point, ZERO } from '../../Point';\nimport type { TCornerPoint, TDegree } from '../../typedefs';\nimport { FabricObject } from './Object';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\nimport {\n  calcDimensionsMatrix,\n  createRotateMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../../util/misc/matrix';\nimport type { Control } from '../../controls/Control';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { createObjectDefaultControls } from '../../controls/commonControls';\nimport { interactiveObjectDefaultValues } from './defaultValues';\nimport { SCALE } from '../../constants';\n\nexport type TOCoord = Point & {\n  corner: TCornerPoint;\n  touchCorner: TCornerPoint;\n};\n\nexport type TControlSet = Record<string, Control>;\n\nexport type TBorderRenderingStyleOverride = Partial<\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\n>;\n\nexport type TStyleOverride = ControlRenderingStyleOverride &\n  TBorderRenderingStyleOverride &\n  Partial<\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\n      forActiveSelection: boolean;\n    }\n  >;\n\nexport class InteractiveFabricObject<\n    Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  declare noScaleCache: boolean;\n\n  declare snapAngle?: TDegree;\n  declare snapThreshold?: TDegree;\n\n  declare lockMovementX: boolean;\n  declare lockMovementY: boolean;\n  declare lockRotation: boolean;\n  declare lockScalingX: boolean;\n  declare lockScalingY: boolean;\n  declare lockSkewingX: boolean;\n  declare lockSkewingY: boolean;\n  declare lockScalingFlip: boolean;\n\n  declare cornerSize: number;\n  declare touchCornerSize: number;\n  declare transparentCorners: boolean;\n  declare cornerColor: string;\n  declare cornerStrokeColor: string;\n  declare cornerStyle: 'rect' | 'circle';\n  declare cornerDashArray: number[] | null;\n  declare hasControls: boolean;\n\n  declare borderColor: string;\n  declare borderDashArray: number[] | null;\n  declare borderOpacityWhenMoving: number;\n  declare borderScaleFactor: number;\n  declare hasBorders: boolean;\n  declare selectionBackgroundColor: string;\n\n  declare selectable: boolean;\n  declare evented: boolean;\n  declare perPixelTargetFind: boolean;\n  declare activeOn: 'down' | 'up';\n\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\n\n  /**\n   * The object's controls' position in viewport coordinates\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\n   * Used to draw and locate controls.\n   */\n  declare oCoords: Record<string, TOCoord>;\n\n  /**\n   * keeps the value of the last hovered corner during mouse move.\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n   * It should be private, but there is no harm in using it as\n   * a read-only property.\n   * this isn't cleaned automatically. Non selected objects may have wrong values\n   * @type [string]\n   */\n  declare __corner?: string;\n\n  /**\n   * a map of control visibility for this object.\n   * this was left when controls were introduced to not break the api too much\n   * this takes priority over the generic control visibility\n   */\n  declare _controlsVisibility: Record<string, boolean>;\n\n  /**\n   * holds the controls for the object.\n   * controls are added by default_controls.js\n   */\n  declare controls: TControlSet;\n\n  /**\n   * internal boolean to signal the code that the object is\n   * part of the move action.\n   */\n  declare isMoving?: boolean;\n\n  /**\n   * A boolean used from the gesture module to keep tracking of a scaling\n   * action when there is no scaling transform in place.\n   * This is an edge case and is used twice in all codebase.\n   * Probably added to keep track of some performance issues\n   * @TODO use git blame to investigate why it was added\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\n   */\n  declare _scaling?: boolean;\n\n  declare canvas?: Canvas;\n\n  static ownDefaults = interactiveObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...InteractiveFabricObject.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof InteractiveFabricObject).createControls(),\n      InteractiveFabricObject.ownDefaults,\n    );\n    this.setOptions(options);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults\n   * @param {Object} [options] Options object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createObjectDefaultControls() };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const targetCanvas = this.canvas;\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n      const transform = targetCanvas._currentTransform,\n        target = transform.target,\n        action = transform.action;\n      if (\n        this === (target as unknown as this) &&\n        action &&\n        action.startsWith(SCALE)\n      ) {\n        return false;\n      }\n    }\n    return super._updateCacheCanvas();\n  }\n\n  getActiveControl() {\n    const key = this.__corner;\n    return key\n      ? {\n          key,\n          control: this.controls[key],\n          coord: this.oCoords[key],\n        }\n      : undefined;\n  }\n\n  /**\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\n   * This function is return a corner only if the object is the active one.\n   * This is done to avoid selecting corner of non active object and activating transformations\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\n   * an object, first you select it to show the control set\n   * @private\n   * @param {Object} pointer The pointer indicating the mouse position\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\n   */\n  findControl(\n    pointer: Point,\n    forTouch = false,\n  ): { key: string; control: Control; coord: TOCoord } | undefined {\n    if (!this.hasControls || !this.canvas) {\n      return undefined;\n    }\n\n    this.__corner = undefined;\n    const cornerEntries = Object.entries(this.oCoords);\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\n      const [key, corner] = cornerEntries[i];\n      const control = this.controls[key];\n\n      if (\n        control.shouldActivate(\n          key,\n          this,\n          pointer,\n          forTouch ? corner.touchCorner : corner.corner,\n        )\n      ) {\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\n        this.__corner = key;\n\n        return { key, control, coord: this.oCoords[key] };\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\n   * This basically just delegates to each control positionHandler\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\n   * is a public api and should be done just if extremely necessary\n   * @return {Record<string, TOCoord>}\n   */\n  calcOCoords(): Record<string, TOCoord> {\n    const vpt = this.getViewportTransform(),\n      center = this.getCenterPoint(),\n      tMatrix = createTranslateMatrix(center.x, center.y),\n      rMatrix = createRotateMatrix({\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\n      }),\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\n        1 / vpt[0],\n        0,\n        0,\n        1 / vpt[3],\n        0,\n        0,\n      ]),\n      transformOptions = this.group\n        ? qrDecompose(this.calcTransformMatrix())\n        : undefined;\n    // decomposing could bring negative scaling and `_calculateCurrentDimensions` can't take it\n    if (transformOptions) {\n      transformOptions.scaleX = Math.abs(transformOptions.scaleX);\n      transformOptions.scaleY = Math.abs(transformOptions.scaleY);\n    }\n    const dim = this._calculateCurrentDimensions(transformOptions),\n      coords: Record<string, TOCoord> = {};\n\n    this.forEachControl((control, key) => {\n      const position = control.positionHandler(dim, finalMatrix, this, control);\n      // coords[key] are sometimes used as points. Those are points to which we add\n      // the property corner and touchCorner from `_calcCornerCoords`.\n      // don't remove this assign for an object spread.\n      coords[key] = Object.assign(\n        position,\n        this._calcCornerCoords(control, position),\n      );\n    });\n\n    // debug code\n    /*\n      const canvas = this.canvas;\n      setTimeout(function () {\n      if (!canvas) return;\n        canvas.contextTop.clearRect(0, 0, 700, 700);\n        canvas.contextTop.fillStyle = 'green';\n        Object.keys(coords).forEach(function(key) {\n          const control = coords[key];\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n        });\n      } 50);\n    */\n    return coords;\n  }\n\n  /**\n   * Sets the coordinates that determine the interaction area of each control\n   * note: if we would switch to ROUND corner area, all of this would disappear.\n   * everything would resolve to a single point and a pythagorean theorem for the distance\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\n   * @private\n   */\n  private _calcCornerCoords(control: Control, position: Point) {\n    const angle = this.getTotalAngle();\n    const corner = control.calcCornerCoords(\n      angle,\n      this.cornerSize,\n      position.x,\n      position.y,\n      false,\n      this,\n    );\n    const touchCorner = control.calcCornerCoords(\n      angle,\n      this.touchCornerSize,\n      position.x,\n      position.y,\n      true,\n      this,\n    );\n    return { corner, touchCorner };\n  }\n\n  /**\n   * @override set controls' coordinates as well\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   * @return {void}\n   */\n  setCoords(): void {\n    super.setCoords();\n    this.canvas && (this.oCoords = this.calcOCoords());\n  }\n\n  /**\n   * Calls a function for each control. The function gets called,\n   * with the control, the control's key and the object that is calling the iterator\n   * @param {Function} fn function to iterate over the controls over\n   */\n  forEachControl(\n    fn: (\n      control: Control,\n      key: string,\n      fabricObject: InteractiveFabricObject,\n    ) => any,\n  ) {\n    for (const i in this.controls) {\n      fn(this.controls[i], i, this);\n    }\n  }\n\n  /**\n   * Draws a colored layer behind the object, inside its selection borders.\n   * Requires public options: padding, selectionBackgroundColor\n   * this function is called when the context is transformed\n   * has checks to be skipped when the object is on a staticCanvas\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\n   * it seemed a good option, now is an edge case\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   */\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\n    if (\n      !this.selectionBackgroundColor ||\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\n    ) {\n      return;\n    }\n    ctx.save();\n    const center = this.getRelativeCenterPoint(),\n      wh = this._calculateCurrentDimensions(),\n      vpt = this.getViewportTransform();\n    ctx.translate(center.x, center.y);\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\n    ctx.rotate(degreesToRadians(this.angle));\n    ctx.fillStyle = this.selectionBackgroundColor;\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n    ctx.restore();\n  }\n\n  /**\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\n   * @param {Point} size the control box size used\n   */\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size\n   * @param {TStyleOverride} styleOverride object to override the object style\n   */\n  _drawBorders(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n    styleOverride: TStyleOverride = {},\n  ): void {\n    const options = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      borderDashArray: this.borderDashArray,\n      ...styleOverride,\n    };\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    this._setLineDash(ctx, options.borderDashArray);\n    this.strokeBorders(ctx, size);\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\n    ctx.restore();\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * the context here is not transformed\n   * @todo move to interactivity\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: TStyleOverride = {},\n  ) {\n    const { hasBorders, hasControls } = this;\n    const styleOptions = {\n      hasBorders,\n      hasControls,\n      ...styleOverride,\n    };\n    const vpt = this.getViewportTransform(),\n      shouldDrawBorders = styleOptions.hasBorders,\n      shouldDrawControls = styleOptions.hasControls;\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\n    const options = qrDecompose(matrix);\n    ctx.save();\n    ctx.translate(options.translateX, options.translateY);\n    ctx.lineWidth = this.borderScaleFactor; // 1 * this.borderScaleFactor;\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\n    // the following equality check `this.group === this.parent` covers:\n    // object without a group ( undefined === undefined )\n    // object inside a group\n    // excludes object inside a group but multi selected since group and parent will differ in value\n    if (this.group === this.parent) {\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    }\n    if (this.flipX) {\n      options.angle -= 180;\n    }\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\n    ctx.restore();\n  }\n\n  /**\n   * Draws borders of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {object} options object representing current object parameters\n   * @param {TStyleOverride} [styleOverride] object to override the object style\n   */\n  drawBorders(\n    ctx: CanvasRenderingContext2D,\n    options: TQrDecomposeOut,\n    styleOverride: TStyleOverride,\n  ): void {\n    let size;\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\n      const bbox = sizeAfterTransform(\n          this.width,\n          this.height,\n          calcDimensionsMatrix(options),\n        ),\n        stroke = !this.isStrokeAccountedForInDimensions()\n          ? (this.strokeUniform\n              ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\n              : // this is extremely confusing. options comes from the upper function\n                // and is the qrDecompose of a matrix that takes in account zoom too\n                new Point(options.scaleX, options.scaleY)\n            ).scalarMultiply(this.strokeWidth)\n          : ZERO;\n      size = bbox\n        .add(stroke)\n        .scalarAdd(this.borderScaleFactor)\n        .scalarAdd(this.padding * 2);\n    } else {\n      size = this._calculateCurrentDimensions().scalarAdd(\n        this.borderScaleFactor,\n      );\n    }\n    this._drawBorders(ctx, size, styleOverride);\n  }\n\n  /**\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size object size x = width, y = height\n   */\n  drawControlsConnectingLines(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n  ): void {\n    let shouldStroke = false;\n\n    ctx.beginPath();\n    this.forEachControl((control, key) => {\n      // in this moment, the ctx is centered on the object.\n      // width and height of the above function are the size of the bbox.\n      if (control.withConnection && control.getVisibility(this, key)) {\n        // reset movement for each control\n        shouldStroke = true;\n        ctx.moveTo(control.x * size.x, control.y * size.y);\n        ctx.lineTo(\n          control.x * size.x + control.offsetX,\n          control.y * size.y + control.offsetY,\n        );\n      }\n    });\n    shouldStroke && ctx.stroke();\n  }\n\n  /**\n   * Draws corners of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: cornerSize, padding\n   * Be aware that since fabric 6.0 this function does not call setCoords anymore.\n   * setCoords needs to be called manually if the object of which we are rendering controls\n   * is outside the standard selection and transform process.\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\n   */\n  drawControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: ControlRenderingStyleOverride = {},\n  ) {\n    ctx.save();\n    const retinaScaling = this.getCanvasRetinaScaling();\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\n    const options = {\n      cornerStrokeColor,\n      cornerDashArray,\n      cornerColor,\n      ...styleOverride,\n    };\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\n    if (!this.transparentCorners) {\n      ctx.strokeStyle = options.cornerStrokeColor;\n    }\n    this._setLineDash(ctx, options.cornerDashArray);\n    this.forEachControl((control, key) => {\n      if (control.getVisibility(this, key)) {\n        const p = this.oCoords[key];\n        control.render(ctx, p.x, p.y, options, this);\n      }\n    });\n    ctx.restore();\n  }\n\n  /**\n   * Returns true if the specified control is visible, false otherwise.\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\n   * but since the control api allow for any control name, can be any string.\n   * @returns {boolean} true if the specified control is visible, false otherwise\n   */\n  isControlVisible(controlKey: string): boolean {\n    return (\n      this.controls[controlKey] &&\n      this.controls[controlKey].getVisibility(this, controlKey)\n    );\n  }\n\n  /**\n   * Sets the visibility of the specified control.\n   * please do not use.\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n   * but since the control api allow for any control name, can be any string.\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\n   */\n  setControlVisible(controlKey: string, visible: boolean) {\n    if (!this._controlsVisibility) {\n      this._controlsVisibility = {};\n    }\n    this._controlsVisibility[controlKey] = visible;\n  }\n\n  /**\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\n   * @param {Record<string, boolean>} [options] with an optional key per control\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n   */\n  setControlsVisibility(options: Record<string, boolean> = {}) {\n    Object.entries(options).forEach(([controlKey, visibility]) =>\n      this.setControlVisible(controlKey, visibility),\n    );\n  }\n\n  /**\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\n   * that is in the canvas.contextContainer.\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\n   * Example: blinking cursor text selection, drag effects.\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\n   * with the object transformMatrix, or restored to neutral transform\n   */\n  clearContextTop(\n    restoreManually?: boolean,\n  ): CanvasRenderingContext2D | undefined {\n    if (!this.canvas) {\n      return;\n    }\n    const ctx = this.canvas.contextTop;\n    if (!ctx) {\n      return;\n    }\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this.transform(ctx);\n    // we add 4 pixel, to be sure to do not leave any pixel out\n    const width = this.width + 4,\n      height = this.height + 4;\n    ctx.clearRect(-width / 2, -height / 2, width, height);\n\n    restoreManually || ctx.restore();\n    return ctx;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to deselect this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\n   * this is being deselected\n   */\n  onDeselect(_options?: {\n    e?: TPointerEvent;\n    object?: InteractiveFabricObject;\n  }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to select this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {Event} [_options.e] event if the process is generated by an event\n   */\n  onSelect(_options?: { e?: TPointerEvent }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\n   * Fired from {@link Canvas#_onMouseMove}\n   * @returns true in order for the window to start a drag session\n   */\n  shouldStartDragging(_e: TPointerEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\\\n   * Fired once a drag session has started\n   * @returns true to handle the drag event\n   */\n  onDragStart(_e: DragEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * @public\n   * @param {DragEvent} _e\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\n   */\n  canDrop(_e: DragEvent): boolean {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the source of a drag event\n   * example: render the selection status for the part of text that is being dragged from a text object\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDragSourceEffect(_e: DragEvent) {\n    // for subclasses\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the target of a drag event\n   * used to show that the underly object can receive a drop, or to show how the\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDropTargetEffect(_e: DragEvent) {\n    // for subclasses\n  }\n}\n","import type { Constructor } from '../typedefs';\n\n/***\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\n */\nexport function applyMixins<T extends Constructor, S extends Constructor>(\n  derivedCtor: T,\n  constructors: S[],\n) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      name !== 'constructor' &&\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n            Object.create(null),\n        );\n    });\n  });\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\nimport { InteractiveFabricObject } from './InteractiveObject';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { classRegistry } from '../../ClassRegistry';\n\n// TODO somehow we have to make a tree-shakeable import\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface FabricObject<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObjectSVGExportMixin {}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\n\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n\nexport { cacheProperties } from './defaultValues';\n","/**\n * Returns true if context has transparent pixel\n * at specified location (taking tolerance into account)\n * @param {CanvasRenderingContext2D} ctx context\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\n * @return {boolean} true if transparent\n */\nexport const isTransparent = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  tolerance: number,\n): boolean => {\n  tolerance = Math.round(tolerance);\n  const size = tolerance * 2 + 1;\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\n\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\n  for (let i = 3; i < data.length; i += 4) {\n    const alphaChannel = data[i];\n    if (alphaChannel > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport { createVector } from '../vectors';\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\n\n/**\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n * @todo consider removing skewing from points before calculating stroke projection,\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\n */\nexport abstract class StrokeProjectionsBase {\n  declare options: TProjectStrokeOnPointsOptions;\n  declare scale: Point;\n  declare strokeUniformScalar: Point;\n  declare strokeProjectionMagnitude: number;\n\n  constructor(options: TProjectStrokeOnPointsOptions) {\n    this.options = options;\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\n    this.strokeUniformScalar = this.options.strokeUniform\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\n      : new Point(1, 1);\n  }\n\n  /**\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\n   */\n  protected createSideVector(from: XY, to: XY) {\n    const v = createVector(from, to);\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\n  }\n\n  protected abstract calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude?: number,\n  ): Point;\n\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\n    return this.applySkew(\n      from.add(this.calcOrthogonalProjection(from, to, magnitude)),\n    );\n  }\n\n  protected isSkewed() {\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\n  }\n\n  protected applySkew(point: Point) {\n    const p = new Point(point);\n    // skewY must be applied before skewX as this distortion affects skewX calculation\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\n    return p;\n  }\n\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\n  }\n\n  protected abstract projectPoints(): Point[];\n\n  public abstract project(): TProjection[];\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { halfPI, twoMathPi } from '../../../constants';\nimport type { TRadian } from '../../../typedefs';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport {\n  calcAngleBetweenVectors,\n  calcVectorRotation,\n  crossProduct,\n  getOrthonormalVector,\n  getUnitVector,\n  isBetweenVectors,\n  magnitude,\n  rotateVector,\n} from '../vectors';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nconst zeroVector = new Point();\n\n/**\n * class in charge of finding projections for each type of line join\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\n *\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n *\n */\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\n  /**\n   * The point being projected (the angle ∠BAC)\n   */\n  declare A: Point;\n  /**\n   * The point before A\n   */\n  declare B: Point;\n  /**\n   * The point after A\n   */\n  declare C: Point;\n  /**\n   * The AB vector\n   */\n  AB: Point;\n  /**\n   * The AC vector\n   */\n  AC: Point;\n  /**\n   * The angle of A (∠BAC)\n   */\n  alpha: TRadian;\n  /**\n   * The bisector of A (∠BAC)\n   */\n  bisector: Point;\n\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\n    const angle = vector2\n      ? calcAngleBetweenVectors(vector1, vector2)\n      : calcVectorRotation(vector1);\n    return Math.abs(angle) < halfPI ? -1 : 1;\n  }\n\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.B = new Point(B);\n    this.C = new Point(C);\n    this.AB = this.createSideVector(this.A, this.B);\n    this.AC = this.createSideVector(this.A, this.C);\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\n    this.bisector = getUnitVector(\n      // if AC is also the zero vector nothing will be projected\n      // in that case the next point will handle the projection\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2),\n    );\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    const orthogonalProjection = getOrthonormalVector(vector);\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\n      orthogonalProjection,\n      this.bisector,\n    );\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\n  }\n\n  /**\n   * BEVEL\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\n   */\n  projectBevel() {\n    const projections: Point[] = [];\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\n      (to) => {\n        projections.push(this.projectOrthogonally(this.A, to));\n        projections.push(\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude),\n        );\n      },\n    );\n    return projections;\n  }\n\n  /**\n   * MITER\n   * Calculation: the corner is formed by extending the outer edges of the stroke\n   * at the tangents of the path segments until they intersect.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\n   */\n  projectMiter() {\n    const projections: Point[] = [],\n      alpha = Math.abs(this.alpha),\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\n      miterVector = this.scaleUnitVector(\n        this.bisector,\n        -this.strokeProjectionMagnitude * hypotUnitScalar,\n      );\n\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\n    // a limit on the extent of the line join.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\n    const strokeMiterLimit = this.options.strokeUniform\n      ? magnitude(\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit),\n        )\n      : this.options.strokeMiterLimit;\n\n    if (\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\n      strokeMiterLimit\n    ) {\n      projections.push(this.applySkew(this.A.add(miterVector)));\n    }\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\n      We always need two orthogonal projections which are basically bevel-type projections,\n      so regardless of whether the miter-limit was reached or not, we include these projections.\n    */\n    projections.push(...this.projectBevel());\n\n    return projections;\n  }\n\n  /**\n   * ROUND (without skew)\n   * Calculation: the projections are the two vectors parallel to X and Y axes\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\n   */\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [],\n      // correctSide is used to only consider projecting for the outer side\n      correctSide = new Point(\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\n          new Point(this.bisector.y, this.bisector.x),\n        ),\n      ),\n      radiusOnAxisX = new Point(1, 0)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide),\n      radiusOnAxisY = new Point(0, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide);\n\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\n        projections.push(this.A.add(vector));\n      }\n    });\n    return projections;\n  }\n\n  /**\n   * ROUND (with skew)\n   * Calculation: the projections are the points furthest from the vertex in\n   * the direction of the X and Y axes after distortion.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\n   */\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [];\n\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\n      shearing = new Point(\n        Math.tan(degreesToRadians(skewX)),\n        Math.tan(degreesToRadians(skewY)),\n      );\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\n    const circleRadius = this.strokeProjectionMagnitude,\n      newY = strokeUniform\n        ? circleRadius /\n          scaleY /\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\n      furthestY = new Point(\n        // Safe guard due to floating point precision. In some situations the square root\n        // was returning NaN because of a negative number close to zero.\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\n        newY,\n      ),\n      newX = strokeUniform\n        ? circleRadius /\n          Math.sqrt(\n            1 +\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2,\n          )\n        : circleRadius /\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\n      furthestX = new Point(\n        newX,\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0)),\n      );\n\n    [\n      furthestX,\n      furthestX.scalarMultiply(-1),\n      furthestY,\n      furthestY.scalarMultiply(-1),\n    ]\n      // We need to skew the vector here as this information is used to check if\n      // it is between the start and end of the circle segment\n      .map((vector) =>\n        this.applySkew(\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector,\n        ),\n      )\n      .forEach((vector) => {\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\n          projections.push(this.applySkew(this.A).add(vector));\n        }\n      });\n\n    return projections;\n  }\n\n  projectRound() {\n    const projections: Point[] = [];\n    /* Include the start and end points of the circle segment, so that only\n      the projections contained within it are included */\n    // add the orthogonal projections (start and end points of circle segment)\n    projections.push(...this.projectBevel());\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\n    const isStraightLine = this.alpha % twoMathPi === 0,\n      // change the origin of the projections to point A\n      // so that the cross product calculation is correct\n      newOrigin = this.applySkew(this.A),\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\n      comparisonVector = isStraightLine\n        ? this.applySkew(this.AB.scalarMultiply(-1))\n        : this.applySkew(\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1),\n          ),\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\n      startCircle = isProj0Start ? proj0 : proj1,\n      endCircle = isProj0Start ? proj1 : proj0;\n    if (!this.isSkewed()) {\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\n    } else {\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\n    }\n    return projections;\n  }\n\n  /**\n   * Project stroke width on points returning projections for each point as follows:\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\n   */\n  protected projectPoints() {\n    switch (this.options.strokeLineJoin) {\n      case 'miter':\n        return this.projectMiter();\n      case 'round':\n        return this.projectRound();\n      default:\n        return this.projectBevel();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n      angle: this.alpha,\n      bisector: this.bisector,\n    }));\n  }\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\n/**\n * class in charge of finding projections for each type of line cap for start/end of an open path\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\n *\n * Reference:\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n */\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\n  /**\n   * edge point\n   */\n  declare A: Point;\n  /**\n   * point next to edge point\n   */\n  declare T: Point;\n\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.T = new Point(T);\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Butt\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\n   */\n  projectButt() {\n    return [\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\n    ];\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Round\n   * Calculation: same as stroke line join `round`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\n   */\n  projectRound() {\n    const projections: Point[] = [];\n\n    if (!this.isSkewed() && this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(\n        this.applySkew(this.A.add(projection)),\n        this.applySkew(this.A.subtract(projection)),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(\n          this.A,\n          this.T,\n          this.T,\n          this.options,\n        ).projectRound(),\n      );\n    }\n\n    return projections;\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Square\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\n   */\n  projectSquare() {\n    const projections: Point[] = [];\n\n    if (this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(this.A.add(projection), this.A.subtract(projection));\n    } else {\n      const orthogonalProjection = this.calcOrthogonalProjection(\n        this.A,\n        this.T,\n        this.strokeProjectionMagnitude,\n      );\n      const strokePointingOut = this.scaleUnitVector(\n        getUnitVector(this.createSideVector(this.A, this.T)),\n        -this.strokeProjectionMagnitude,\n      );\n      const projectedA = this.A.add(strokePointingOut);\n      projections.push(\n        projectedA.add(orthogonalProjection),\n        projectedA.subtract(orthogonalProjection),\n      );\n    }\n\n    return projections.map((p) => this.applySkew(p));\n  }\n\n  protected projectPoints() {\n    switch (this.options.strokeLineCap) {\n      case 'round':\n        return this.projectRound();\n      case 'square':\n        return this.projectSquare();\n      default:\n        return this.projectButt();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n    }));\n  }\n}\n","import { Point, type XY } from '../../../Point';\nimport { findIndexRight } from '../../internals/findRight';\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nexport * from './types';\n\n/**\n *\n * Used to calculate object's bounding box\n *\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n *\n */\nexport const projectStrokeOnPoints = (\n  points: XY[],\n  options: TProjectStrokeOnPointsOptions,\n  openPath = false,\n): TProjection[] => {\n  const projections: TProjection[] = [];\n\n  if (points.length === 0) {\n    return projections;\n  }\n\n  // first we remove duplicate neighboring points\n  const reduced = points.reduce(\n    (reduced, point) => {\n      if (!reduced[reduced.length - 1].eq(point)) {\n        reduced.push(new Point(point));\n      }\n      return reduced;\n    },\n    [new Point(points[0])],\n  );\n\n  if (reduced.length === 1) {\n    openPath = true;\n  } else if (!openPath) {\n    // remove points from end in case they equal the first point\n    // in order to correctly project the first point\n    const start = reduced[0];\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\n    reduced.splice(index + 1);\n  }\n\n  reduced.forEach((A, index, points) => {\n    let B: XY, C: XY;\n    if (index === 0) {\n      C = points[1];\n      B = openPath ? A : points[points.length - 1];\n    } else if (index === points.length - 1) {\n      B = points[index - 1];\n      C = openPath ? A : points[0];\n    } else {\n      B = points[index - 1];\n      C = points[index + 1];\n    }\n\n    if (openPath && points.length === 1) {\n      projections.push(\n        ...new StrokeLineCapProjections(A, A, options).project(),\n      );\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\n      projections.push(\n        ...new StrokeLineCapProjections(\n          A,\n          index === 0 ? C : B,\n          options,\n        ).project(),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(A, B, C, options).project(),\n      );\n    }\n  });\n\n  return projections;\n};\n","export const findIndexRight = <T>(\n  array: T[],\n  predicate: (value: T, index: number, array: T[]) => boolean,\n) => {\n  for (let index = array.length - 1; index >= 0; index--) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n","import type { TextStyle } from '../../shapes/Text/StyledText';\n\nexport const cloneStyles = (style: TextStyle): TextStyle => {\n  const newObj: TextStyle = {};\n  Object.keys(style).forEach((key) => {\n    newObj[key] = {};\n    Object.keys(style[key]).forEach((keyInner) => {\n      newObj[key][keyInner] = { ...style[key][keyInner] };\n    });\n  });\n  return newObj;\n};\n","/**\n * Capitalizes a string\n * @param {String} string String to capitalize\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n * and other letters stay untouched, if false first letter is capitalized\n * and other letters are converted to lowercase.\n * @return {String} Capitalized version of a string\n */\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\n  `${string.charAt(0).toUpperCase()}${\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\n  }`;\n\n/**\n * Escapes XML in a string\n * @param {String} string String to escape\n * @return {String} Escaped version of a string\n */\nexport const escapeXml = (string: string): string =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n/**\n * Divide a string in the user perceived single units\n * @param {String} textstring String to escape\n * @return {Array} array containing the graphemes\n */\nexport const graphemeSplit = (textstring: string): string[] => {\n  const graphemes = [];\n  for (let i = 0, chr; i < textstring.length; i++) {\n    if ((chr = getWholeChar(textstring, i)) === false) {\n      continue;\n    }\n    graphemes.push(chr as string);\n  }\n  return graphemes;\n};\n\n// taken from mdn in the charAt doc page.\nconst getWholeChar = (str: string, i: number): string | boolean => {\n  const code = str.charCodeAt(i);\n  if (isNaN(code)) {\n    return ''; // Position not found\n  }\n  if (code < 0xd800 || code > 0xdfff) {\n    return str.charAt(i);\n  }\n\n  // High surrogate (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 <= code && code <= 0xdbff) {\n    if (str.length <= i + 1) {\n      throw 'High surrogate without following low surrogate';\n    }\n    const next = str.charCodeAt(i + 1);\n    if (0xdc00 > next || next > 0xdfff) {\n      throw 'High surrogate without following low surrogate';\n    }\n    return str.charAt(i) + str.charAt(i + 1);\n  }\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n  if (i === 0) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  const prev = str.charCodeAt(i - 1);\n\n  // (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 > prev || prev > 0xdbff) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  // We can pass over low surrogates now as the second component\n  // in a pair which we have already processed\n  return false;\n};\n","import { reNewline } from '../../constants';\nimport type {\n  TextStyle,\n  TextStyleDeclaration,\n} from '../../shapes/Text/StyledText';\nimport { cloneStyles } from '../internals/cloneStyles';\nimport { graphemeSplit } from '../lang_string';\n\nexport type TextStyleArray = {\n  start: number;\n  end: number;\n  style: TextStyleDeclaration;\n}[];\n\n/**\n * @param {Object} prevStyle first style to compare\n * @param {Object} thisStyle second style to compare\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n * @return {boolean} true if the style changed\n */\nexport const hasStyleChanged = (\n  prevStyle: TextStyleDeclaration,\n  thisStyle: TextStyleDeclaration,\n  forTextSpans = false,\n) =>\n  prevStyle.fill !== thisStyle.fill ||\n  prevStyle.stroke !== thisStyle.stroke ||\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n  prevStyle.fontSize !== thisStyle.fontSize ||\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n  prevStyle.deltaY !== thisStyle.deltaY ||\n  (forTextSpans &&\n    (prevStyle.overline !== thisStyle.overline ||\n      prevStyle.underline !== thisStyle.underline ||\n      prevStyle.linethrough !== thisStyle.linethrough));\n\n/**\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\n * rather than per character. This format is less verbose, and is better suited for storage\n * so it is used in serialization (not during runtime).\n * @param {object} styles per character styles for a text object\n * @param {String} text the text string that the styles are applied to\n * @return {{start: number, end: number, style: object}[]}\n */\nexport const stylesToArray = (\n  styles: TextStyle,\n  text: string,\n): TextStyleArray => {\n  const textLines = text.split('\\n'),\n    stylesArray = [];\n  let charIndex = -1,\n    prevStyle = {};\n  // clone style structure to prevent mutation\n  styles = cloneStyles(styles);\n\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n    if (!styles[i]) {\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\n      charIndex += chars.length;\n      prevStyle = {};\n      continue;\n    }\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      const thisStyle = styles[i][c];\n      //check if style exists for this character\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\n          stylesArray.push({\n            start: charIndex,\n            end: charIndex + 1,\n            style: thisStyle,\n          });\n        } else {\n          //if style is the same as previous character, increase end index\n          stylesArray[stylesArray.length - 1].end++;\n        }\n      }\n      prevStyle = thisStyle || {};\n    }\n  }\n  return stylesArray;\n};\n\n/**\n * Returns the object form of the styles property with styles that are assigned per\n * character rather than grouped by range. This format is more verbose, and is\n * only used during runtime (not for serialization/storage)\n * @param {Array} styles the serialized form of a text object's styles\n * @param {String} text the text string that the styles are applied to\n * @return {Object}\n */\nexport const stylesFromArray = (\n  styles: TextStyleArray | TextStyle,\n  text: string,\n): TextStyle => {\n  if (!Array.isArray(styles)) {\n    // clone to prevent mutation\n    return cloneStyles(styles);\n  }\n  const textLines = text.split(reNewline),\n    stylesObject: TextStyle = {};\n  let charIndex = -1,\n    styleIndex = 0;\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      //check if there's a style collection that includes the current character\n      if (\n        styles[styleIndex] &&\n        styles[styleIndex].start <= charIndex &&\n        charIndex < styles[styleIndex].end\n      ) {\n        //create object for line index if it doesn't exist\n        stylesObject[i] = stylesObject[i] || {};\n        //assign a style at this character's index\n        stylesObject[i][c] = { ...styles[styleIndex].style };\n        //if character is at the end of the current style collection, move to the next\n        if (charIndex === styles[styleIndex].end - 1) {\n          styleIndex++;\n        }\n      }\n    }\n  }\n  return stylesObject;\n};\n","import { FILL, STROKE } from '../constants';\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nexport const SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  FILL,\n  'fill-opacity',\n  'fill-rule',\n  'opacity',\n  STROKE,\n  'stroke-dasharray',\n  'stroke-linecap',\n  'stroke-dashoffset',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'id',\n  'paint-order',\n  'vector-effect',\n  'instantiated_by_use',\n  'clip-path',\n];\n","export function selectorMatches(element: HTMLElement, selector: string) {\n  const nodeName = element.nodeName;\n  const classNames = element.getAttribute('class');\n  const id = element.getAttribute('id');\n  const azAz = '(?![a-zA-Z\\\\-]+)';\n  let matcher;\n  // i check if a selector matches slicing away part from it.\n  // if i get empty string i should match\n  matcher = new RegExp('^' + nodeName, 'i');\n  selector = selector.replace(matcher, '');\n  if (id && selector.length) {\n    matcher = new RegExp('#' + id + azAz, 'i');\n    selector = selector.replace(matcher, '');\n  }\n  if (classNames && selector.length) {\n    const splitClassNames = classNames.split(' ');\n    for (let i = splitClassNames.length; i--; ) {\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\n      selector = selector.replace(matcher, '');\n    }\n  }\n  return selector.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\n\n/**\n * @private\n */\n\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\n  let parentMatching = true;\n  // start from rightmost selector.\n  const firstMatching = selectorMatches(element, selectors.pop()!);\n  if (firstMatching && selectors.length) {\n    parentMatching = doesSomeParentMatch(element, selectors);\n  }\n  return firstMatching && parentMatching && selectors.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\n\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\n  let selector: string,\n    parentMatching = true;\n  while (\n    element.parentElement &&\n    element.parentElement.nodeType === 1 &&\n    selectors.length\n  ) {\n    if (parentMatching) {\n      selector = selectors.pop()!;\n    }\n    element = element.parentElement;\n    parentMatching = selectorMatches(element, selector!);\n  }\n  return selectors.length === 0;\n}\n","import { attributesMap } from './constants';\n\nexport const normalizeAttr = (\n  attr: keyof typeof attributesMap | string,\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\n","import { reNum } from '../../parser/constants';\n\nconst regex = new RegExp(`(${reNum})`, 'gi');\n\nexport const cleanupSvgAttribute = (attributeValue: string) =>\n  attributeValue\n    .replace(regex, ' $1 ')\n    // replace annoying commas and arbitrary whitespace with single spaces\n    .replace(/,/gi, ' ')\n    .replace(/\\s+/gi, ' ');\n","import { ROTATE, SCALE, SKEW_X, SKEW_Y, iMatrix } from '../constants';\nimport { reNum } from './constants';\nimport type { TMat2D } from '../typedefs';\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createSkewXMatrix,\n  createSkewYMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\n\n// == begin transform regexp\nconst p = `(${reNum})`;\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\nconst transforms = `(?:${transform}*)`;\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\nconst reTransformList = new RegExp(transformList);\nconst reTransform = new RegExp(transform);\nconst reTransformAll = new RegExp(transform, 'g');\n// == end transform regexp\n\n/**\n * Parses \"transform\" attribute, returning an array of values\n * @static\n * @function\n * @memberOf fabric\n * @param {String} attributeValue String containing attribute value\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\n */\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\n  // first we clean the string\n  attributeValue = cleanupSvgAttribute(attributeValue)\n    // remove spaces around front parentheses\n    .replace(/\\s*([()])\\s*/gi, '$1');\n\n  // start with identity matrix\n  const matrices: TMat2D[] = [];\n\n  // return if no argument was given or\n  // an argument does not match transform attribute regexp\n  if (\n    !attributeValue ||\n    (attributeValue && !reTransformList.test(attributeValue))\n  ) {\n    return [...iMatrix];\n  }\n\n  for (const match of attributeValue.matchAll(reTransformAll)) {\n    const transformMatch = reTransform.exec(match[0]);\n    if (!transformMatch) {\n      continue;\n    }\n    let matrix: TMat2D = iMatrix;\n    const matchedParams = transformMatch.filter((m) => !!m);\n    const [, operation, ...rawArgs] = matchedParams;\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\n      parseFloat(arg),\n    );\n\n    switch (operation) {\n      case 'translate':\n        matrix = createTranslateMatrix(arg0, arg1);\n        break;\n      case ROTATE:\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\n        break;\n      case SCALE:\n        matrix = createScaleMatrix(arg0, arg1);\n        break;\n      case SKEW_X:\n        matrix = createSkewXMatrix(arg0);\n        break;\n      case SKEW_Y:\n        matrix = createSkewYMatrix(arg0);\n        break;\n      case 'matrix':\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\n        break;\n    }\n\n    // snapshot current matrix into matrices array\n    matrices.push(matrix);\n  }\n\n  return multiplyTransformMatrixArray(matrices);\n}\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { parseTransformAttribute } from './parseTransformAttribute';\nimport { CENTER, LEFT, RIGHT, NONE, FILL, STROKE } from '../constants';\n\nexport function normalizeValue(\n  attr: string,\n  value: any,\n  parentAttributes: Record<string, any>,\n  fontSize: number,\n): string | null | boolean | number[] | number {\n  const isArray = Array.isArray(value);\n  let parsed: number | number[];\n  let ouputValue: string | null | boolean | number[] | number = value;\n  if ((attr === FILL || attr === STROKE) && value === NONE) {\n    ouputValue = '';\n  } else if (attr === 'strokeUniform') {\n    return value === 'non-scaling-stroke';\n  } else if (attr === 'strokeDashArray') {\n    if (value === NONE) {\n      ouputValue = null;\n    } else {\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n    }\n  } else if (attr === 'transformMatrix') {\n    if (parentAttributes && parentAttributes.transformMatrix) {\n      ouputValue = multiplyTransformMatrices(\n        parentAttributes.transformMatrix,\n        parseTransformAttribute(value),\n      );\n    } else {\n      ouputValue = parseTransformAttribute(value);\n    }\n  } else if (attr === 'visible') {\n    ouputValue = value !== NONE && value !== 'hidden';\n    // display=none on parent element always takes precedence over child element\n    if (parentAttributes && parentAttributes.visible === false) {\n      ouputValue = false;\n    }\n  } else if (attr === 'opacity') {\n    ouputValue = parseFloat(value);\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n      ouputValue *= parentAttributes.opacity as number;\n    }\n  } else if (attr === 'textAnchor' /* text-anchor */) {\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\n  } else if (attr === 'charSpacing') {\n    // parseUnit returns px and we convert it to em\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\n  } else if (attr === 'paintFirst') {\n    const fillIndex = value.indexOf(FILL);\n    const strokeIndex = value.indexOf(STROKE);\n    ouputValue = FILL;\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n      ouputValue = STROKE;\n    } else if (fillIndex === -1 && strokeIndex > -1) {\n      ouputValue = STROKE;\n    }\n  } else if (\n    attr === 'href' ||\n    attr === 'xlink:href' ||\n    attr === 'font' ||\n    attr === 'id'\n  ) {\n    return value;\n  } else if (attr === 'imageSmoothing') {\n    return value === 'optimizeQuality';\n  } else {\n    parsed = isArray\n      ? (value as string[]).map(parseUnit)\n      : parseUnit(value, fontSize);\n  }\n\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\n}\n","import { parseUnit } from '../util/misc/svgParsing';\nimport { reFontDeclaration } from './constants';\n\n/**\n * Parses a short font declaration, building adding its properties to a style object\n * @static\n * @function\n * @memberOf fabric\n * @param {String} value font declaration\n * @param {Object} oStyle definition\n */\nexport function parseFontDeclaration(\n  value: string,\n  oStyle: Record<string, any>,\n): void {\n  const match = value.match(reFontDeclaration);\n\n  if (!match) {\n    return;\n  }\n  const fontStyle = match[1],\n    // font variant is not used\n    // fontVariant = match[2],\n    fontWeight = match[3],\n    fontSize = match[4],\n    lineHeight = match[5],\n    fontFamily = match[6];\n\n  if (fontStyle) {\n    oStyle.fontStyle = fontStyle;\n  }\n  if (fontWeight) {\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\n      ? fontWeight\n      : parseFloat(fontWeight);\n  }\n  if (fontSize) {\n    oStyle.fontSize = parseUnit(fontSize);\n  }\n  if (fontFamily) {\n    oStyle.fontFamily = fontFamily;\n  }\n  if (lineHeight) {\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n  }\n}\n","/**\n * Takes a style string and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleString(\n  style: string,\n  oStyle: Record<string, any>,\n): void {\n  style\n    .replace(/;\\s*$/, '')\n    .split(';')\n    .forEach((chunk) => {\n      if (!chunk) return;\n      const [attr, value] = chunk.split(':');\n      oStyle[attr.trim().toLowerCase()] = value.trim();\n    });\n}\n","import { parseStyleObject } from './parseStyleObject';\nimport { parseStyleString } from './parseStyleString';\n\n/**\n * Parses \"style\" attribute, retuning an object with values\n * @static\n * @memberOf fabric\n * @param {SVGElement} element Element to parse\n * @return {Object} Objects with values parsed from style attribute of an element\n */\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\n  const oStyle: Record<string, any> = {},\n    style = element.getAttribute('style');\n\n  if (!style) {\n    return oStyle;\n  }\n\n  if (typeof style === 'string') {\n    parseStyleString(style, oStyle);\n  } else {\n    parseStyleObject(style, oStyle);\n  }\n\n  return oStyle;\n}\n","/**\n * Takes a style object and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleObject(\n  style: Record<string, any>,\n  oStyle: Record<string, any>,\n): void {\n  Object.entries(style).forEach(([prop, value]) => {\n    if (value === undefined) {\n      return;\n    }\n    oStyle[prop.toLowerCase()] = value;\n  });\n}\n","import { Color } from '../color/Color';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject } from '../shapes/Object/FabricObject';\n\nconst colorAttributesMap = {\n  stroke: 'strokeOpacity',\n  fill: 'fillOpacity',\n};\n\n/**\n * @private\n * @param {Object} attributes Array of attributes to parse\n */\n\nexport function setStrokeFillOpacity(\n  attributes: Record<string, any>,\n): Record<string, any> {\n  const defaults = FabricObject.getDefaults();\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\n    if (\n      typeof attributes[colorAttr] === 'undefined' ||\n      attributes[attr] === ''\n    ) {\n      return;\n    }\n    if (typeof attributes[attr] === 'undefined') {\n      if (!defaults[attr]) {\n        return;\n      }\n      attributes[attr] = defaults[attr];\n    }\n    if (attributes[attr].indexOf('url(') === 0) {\n      return;\n    }\n    const color = new Color(attributes[attr]);\n    attributes[attr] = color\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\n      .toRgba();\n  });\n  return attributes;\n}\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\nimport { normalizeAttr } from './normalizeAttr';\nimport { normalizeValue } from './normalizeValue';\nimport { parseFontDeclaration } from './parseFontDeclaration';\nimport { parseStyleAttribute } from './parseStyleAttribute';\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\nimport type { CSSRules } from './typedefs';\n\n/**\n * Returns an object of attributes' name/value, given element and an array of attribute names;\n * Parses parent \"g\" nodes recursively upwards.\n * @param {SVGElement | HTMLElement} element Element to parse\n * @param {Array} attributes Array of attributes to parse\n * @return {Object} object containing parsed attributes' names/values\n */\nexport function parseAttributes(\n  element: HTMLElement | null,\n  attributes: string[],\n  cssRules?: CSSRules,\n): Record<string, any> {\n  if (!element) {\n    return {};\n  }\n\n  let parentAttributes: Record<string, string> = {},\n    fontSize: number,\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\n\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n  if (\n    element.parentNode &&\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\n  ) {\n    parentAttributes = parseAttributes(\n      element.parentElement,\n      attributes,\n      cssRules,\n    );\n    if (parentAttributes.fontSize) {\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\n    }\n  }\n\n  const ownAttributes: Record<string, string> = {\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\n      const value = element.getAttribute(attr);\n      if (value) {\n        memo[attr] = value;\n      }\n      return memo;\n    }, {}),\n    // add values parsed from style, which take precedence over attributes\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n    ...getGlobalStylesForElement(element, cssRules),\n    ...parseStyleAttribute(element),\n  };\n\n  if (ownAttributes[cPath]) {\n    element.setAttribute(cPath, ownAttributes[cPath]);\n  }\n  if (ownAttributes[fSize]) {\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n    ownAttributes[fSize] = `${fontSize}`;\n  }\n\n  // this should have its own complex type\n  const normalizedStyle: Record<\n    string,\n    string | boolean | number | number[] | null\n  > = {};\n  for (const attr in ownAttributes) {\n    const normalizedAttr = normalizeAttr(attr);\n    const normalizedValue = normalizeValue(\n      normalizedAttr,\n      ownAttributes[attr],\n      parentAttributes,\n      fontSize!,\n    );\n    normalizedStyle[normalizedAttr] = normalizedValue;\n  }\n  if (normalizedStyle && normalizedStyle.font) {\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\n  }\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\n  return svgValidParentsRegEx.test(element.nodeName)\n    ? mergedAttrs\n    : setStrokeFillOpacity(mergedAttrs);\n}\n","import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {},\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n","import { kRect } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueRectProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedRectProps\n  extends SerializedObjectProps,\n    UniqueRectProps {}\n\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\n\nconst RECT_PROPS = ['rx', 'ry'] as const;\n\nexport class Rect<\n    Props extends TOptions<RectProps> = Partial<RectProps>,\n    SProps extends SerializedRectProps = SerializedRectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements RectProps\n{\n  /**\n   * Horizontal border radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical border radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Rect';\n\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\n\n  static ownDefaults = rectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Rect.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Rect.ownDefaults);\n    this.setOptions(options);\n    this._initRxRy();\n  }\n  /**\n   * Initializes rx/ry attributes\n   * @private\n   */\n  _initRxRy() {\n    const { rx, ry } = this;\n    if (rx && !ry) {\n      this.ry = rx;\n    } else if (ry && !rx) {\n      this.rx = ry;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const { width: w, height: h } = this;\n    const x = -w / 2;\n    const y = -h / 2;\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\n    const isRounded = rx !== 0 || ry !== 0;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x + rx, y);\n\n    ctx.lineTo(x + w - rx, y);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w - kRect * rx,\n        y,\n        x + w,\n        y + kRect * ry,\n        x + w,\n        y + ry,\n      );\n\n    ctx.lineTo(x + w, y + h - ry);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w,\n        y + h - kRect * ry,\n        x + w - kRect * rx,\n        y + h,\n        x + w - rx,\n        y + h,\n      );\n\n    ctx.lineTo(x + rx, y + h);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + kRect * rx,\n        y + h,\n        x,\n        y + h - kRect * ry,\n        x,\n        y + h - ry,\n      );\n\n    ctx.lineTo(x, y + ry);\n    isRounded &&\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\n\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { width, height, rx, ry } = this;\n    return [\n      '<rect ',\n      'COMMON_PARTS',\n      `x=\"${-width / 2}\" y=\"${\n        -height / 2\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\n   * @static\n   * @memberOf Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'rx',\n    'ry',\n    'width',\n    'height',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns {@link Rect} instance from an SVG element\n   * @static\n   * @memberOf Rect\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      left = 0,\n      top = 0,\n      width = 0,\n      height = 0,\n      visible = true,\n      ...restOfparsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n\n    return new this({\n      ...options,\n      ...restOfparsedAttributes,\n      left,\n      top,\n      width,\n      height,\n      visible: Boolean(visible && width && height),\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Rect);\nclassRegistry.setSVGClass(Rect);\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\nexport const LAYOUT_TYPE_ADDED = 'added';\nexport const LAYOUT_TYPE_REMOVED = 'removed';\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\n","import { Point, ZERO } from '../../Point';\nimport type { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport {\n  calcPlaneChangeMatrix,\n  sendVectorToPlane,\n} from '../../util/misc/planeChange';\n\n/**\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\n * but also belong to the active selection.\n */\nexport const getObjectBounds = (\n  destinationGroup: Group,\n  object: FabricObject,\n): Point[] => {\n  const {\n    strokeUniform,\n    strokeWidth,\n    width,\n    height,\n    group: currentGroup,\n  } = object;\n  const t =\n    currentGroup && currentGroup !== destinationGroup\n      ? calcPlaneChangeMatrix(\n          currentGroup.calcTransformMatrix(),\n          destinationGroup.calcTransformMatrix(),\n        )\n      : null;\n  const objectCenter = t\n    ? object.getRelativeCenterPoint().transform(t)\n    : object.getRelativeCenterPoint();\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\n  const strokeUniformVector =\n    strokeUniform && accountForStroke\n      ? sendVectorToPlane(\n          new Point(strokeWidth, strokeWidth),\n          undefined,\n          destinationGroup.calcTransformMatrix(),\n        )\n      : ZERO;\n  const scalingStrokeWidth =\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\n  const sizeVector = sizeAfterTransform(\n    width + scalingStrokeWidth,\n    height + scalingStrokeWidth,\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true),\n  )\n    .add(strokeUniformVector)\n    .scalarDivide(2);\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\n};\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @TODO/fix: if this method is calcResult, should calc unconditionally.\n   * the condition to not calc should be evaluated by the layoutManager.\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout({ type, prevStrategy, strategy }: StrictLayoutContext) {\n    return (\n      type === LAYOUT_TYPE_INITIALIZATION ||\n      type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!prevStrategy && strategy !== prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext,\n  ): LayoutStrategyResult | undefined {\n    const { type, target } = context;\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), []),\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n","import type { StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to fit target's objects.\n */\nexport class FitContentLayout extends LayoutStrategy {\n  static readonly type = 'fit-content';\n\n  /**\n   * @override layout on all triggers\n   * Override at will\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return true;\n  }\n}\n\nclassRegistry.setClass(FitContentLayout);\n","import { Point } from '../Point';\nimport {\n  CENTER,\n  CHANGED,\n  MODIFIED,\n  MODIFY_PATH,\n  MODIFY_POLY,\n  MOVING,\n  RESIZING,\n  ROTATING,\n  SCALING,\n  SKEWING,\n  iMatrix,\n} from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TModificationEvents } from '../EventTypeDefs';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  protected declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    if (layoutResult) {\n      this.commitLayout(strictContext, layoutResult);\n    }\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * Attach handlers for events that we know will invalidate the layout when\n   * performed on child objects ( general transforms ).\n   * Returns the disposers for later unsubscribing and cleanup\n   * @param {FabricObject} object\n   * @param {RegistrationContext & Partial<StrictLayoutContext>} context\n   * @returns {VoidFunction[]} disposers remove the handlers\n   */\n  protected attachHandlers(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): VoidFunction[] {\n    const { target } = context;\n    return (\n      [\n        MODIFIED,\n        MOVING,\n        RESIZING,\n        ROTATING,\n        SCALING,\n        SKEWING,\n        CHANGED,\n        MODIFY_POLY,\n        MODIFY_PATH,\n      ] as (TModificationEvents & 'modified')[]\n    ).map((key) =>\n      object.on(key, (e) =>\n        this.performLayout(\n          key === MODIFIED\n            ? {\n                type: LAYOUT_TYPE_OBJECT_MODIFIED,\n                trigger: key,\n                e,\n                target,\n              }\n            : {\n                type: LAYOUT_TYPE_OBJECT_MODIFYING,\n                trigger: key,\n                e,\n                target,\n              },\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Subscribe an object to transform events that will trigger a layout change on the parent\n   * This is important only for interactive groups.\n   * @param object\n   * @param context\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    this.unsubscribe(object, context);\n    const disposers = this.attachHandlers(object, context);\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    _context?: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target, type } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    // @TODO: gate the registration when the group is interactive\n    if (type === LAYOUT_TYPE_INITIALIZATION || type === LAYOUT_TYPE_ADDED) {\n      this.subscribeTargets(context);\n    } else if (type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject(\n        (object) =>\n          (object as Group).layoutManager &&\n          (object as Group).layoutManager.performLayout({\n            ...tricklingContext,\n            bubbles: false,\n            target: object as Group,\n          }),\n      );\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext,\n  ): Required<LayoutResult> | undefined {\n    const { target, strategy, type } = context;\n\n    const result = strategy.calcLayoutResult(context, target.getObjects());\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true,\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set('dirty', true);\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject,\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult,\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.parent;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n    target.set('dirty', true);\n  }\n\n  dispose() {\n    const { _subscriptions } = this;\n    _subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    _subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\nimport { createCollectionMixin } from '../Collection';\nimport type {\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n  Abortable,\n} from '../typedefs';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n} from '../util/misc/matrix';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\nimport { FabricObject } from './Object/FabricObject';\nimport { Rect } from './Rect';\nimport { classRegistry } from '../ClassRegistry';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport { log } from '../util/internals/console';\nimport type {\n  ImperativeLayoutOptions,\n  LayoutBeforeEvent,\n  LayoutAfterEvent,\n} from '../LayoutManager/types';\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\nimport type { FitContentLayout } from '../LayoutManager';\nimport type { DrawContext } from './Object/Object';\n\n/**\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\n */\nclass NoopLayoutManager extends LayoutManager {\n  performLayout() {}\n}\n\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\n  'layout:before': LayoutBeforeEvent;\n  'layout:after': LayoutAfterEvent;\n}\n\nexport interface GroupOwnProps {\n  subTargetCheck: boolean;\n  interactive: boolean;\n}\n\nexport interface SerializedGroupProps\n  extends SerializedObjectProps,\n    GroupOwnProps {\n  objects: SerializedObjectProps[];\n  layoutManager: SerializedLayoutManager;\n}\n\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\n  layoutManager: LayoutManager;\n}\n\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\n  strokeWidth: 0,\n  subTargetCheck: false,\n  interactive: false,\n};\n\n/**\n * @fires object:added\n * @fires object:removed\n * @fires layout:before\n * @fires layout:after\n */\nexport class Group\n  extends createCollectionMixin(\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>,\n  )\n  implements GroupProps\n{\n  /**\n   * Used to optimize performance\n   * set to `false` if you don't need contained objects to be targets of events\n   * @default\n   * @type boolean\n   */\n  declare subTargetCheck: boolean;\n\n  /**\n   * Used to allow targeting of object inside groups.\n   * set to true if you want to select an object inside a group.\\\n   * **REQUIRES** `subTargetCheck` set to true\n   * This will be not removed but slowly replaced with a method setInteractive\n   * that will take care of enabling subTargetCheck and necessary object events.\n   * There is too much attached to group interactivity to just be evaluated by a\n   * boolean in the code\n   * @default\n   * @deprecated\n   * @type boolean\n   */\n  declare interactive: boolean;\n\n  declare layoutManager: LayoutManager;\n\n  /**\n   * Used internally to optimize performance\n   * Once an object is selected, instance is rendered without the selected object.\n   * This way instance is cached only once for the entire interaction with the selected object.\n   * @private\n   */\n  protected _activeObjects: FabricObject[] = [];\n\n  static type = 'Group';\n\n  static ownDefaults: Record<string, any> = groupDefaultValues;\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Group.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {FabricObject[]} [objects] instance objects\n   * @param {Object} [options] Options object\n   */\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\n    super();\n    Object.assign(this, Group.ownDefaults);\n    this.setOptions(options);\n    this.groupInit(objects, options);\n  }\n\n  /**\n   * Shared code between group and active selection\n   * Meant to be used by the constructor.\n   */\n  protected groupInit(\n    objects: FabricObject[],\n    options: {\n      layoutManager?: LayoutManager;\n      top?: number;\n      left?: number;\n    },\n  ) {\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\n\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\n      this,\n      true,\n    );\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\n      this,\n      false,\n    );\n\n    this.forEachObject((object) => {\n      this.enterGroup(object, false);\n    });\n\n    // perform initial layout\n    this.layoutManager = options.layoutManager ?? new LayoutManager();\n    this.layoutManager.performLayout({\n      type: LAYOUT_TYPE_INITIALIZATION,\n      target: this,\n      targets: [...objects],\n      // @TODO remove this concept from the layout manager.\n      // Layout manager will calculate the correct position,\n      // group options can override it later.\n      x: options.left,\n      y: options.top,\n    });\n  }\n\n  /**\n   * Checks if object can enter group and logs relevant warnings\n   * @private\n   * @param {FabricObject} object\n   * @returns\n   */\n  canEnterGroup(object: FabricObject) {\n    if (object === this || this.isDescendantOf(object)) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'Group: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    } else if (this._objects.indexOf(object) !== -1) {\n      // is already in the objects array\n      log(\n        'error',\n        'Group: duplicate objects are not supported inside group, this call has no effect',\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Override this method to enhance performance (for groups with a lot of objects).\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\n   * @private\n   */\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\n    return objects.filter((object, index, array) => {\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\n    });\n  }\n\n  /**\n   * Add objects\n   * @param {...FabricObject[]} objects\n   */\n  add(...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.add(...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Inserts an object into collection at specified index\n   * @param {FabricObject[]} objects Object to insert\n   * @param {Number} index Index to insert object at\n   */\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.insertAt(index, ...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Remove objects\n   * @param {...FabricObject[]} objects\n   * @returns {FabricObject[]} removed objects\n   */\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\n    return removed;\n  }\n\n  _onObjectAdded(object: FabricObject) {\n    this.enterGroup(object, true);\n    this.fire('object:added', { target: object });\n    object.fire('added', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\n    this.exitGroup(object, removeParentTransform);\n    this.fire('object:removed', { target: object });\n    object.fire('removed', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    this.layoutManager.performLayout({\n      type,\n      targets,\n      target: this,\n    });\n  }\n\n  _onStackOrderChanged() {\n    this._set('dirty', true);\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const prev = this[key as keyof this];\n    super._set(key, value);\n    if (key === 'canvas' && prev !== value) {\n      (this._objects || []).forEach((object) => {\n        object._set(key, value);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return this.subTargetCheck;\n  }\n\n  /**\n   * Remove all objects\n   * @returns {FabricObject[]} removed objects\n   */\n  removeAll() {\n    this._activeObjects = [];\n    return this.remove(...this._objects);\n  }\n\n  /**\n   * keeps track of the selected objects\n   * @private\n   */\n  __objectSelectionMonitor<T extends boolean>(\n    selected: T,\n    {\n      target: object,\n    }: ObjectEvents[T extends true ? 'selected' : 'deselected'],\n  ) {\n    const activeObjects = this._activeObjects;\n    if (selected) {\n      activeObjects.push(object);\n      this._set('dirty', true);\n    } else if (activeObjects.length > 0) {\n      const index = activeObjects.indexOf(object);\n      if (index > -1) {\n        activeObjects.splice(index, 1);\n        this._set('dirty', true);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} watch\n   * @param {FabricObject} object\n   */\n  _watchObject(watch: boolean, object: FabricObject) {\n    //  make sure we listen only once\n    watch && this._watchObject(false, object);\n    if (watch) {\n      object.on('selected', this.__objectSelectionTracker);\n      object.on('deselected', this.__objectSelectionDisposer);\n    } else {\n      object.off('selected', this.__objectSelectionTracker);\n      object.off('deselected', this.__objectSelectionDisposer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object.group && object.group.remove(object);\n    object._set('parent', this);\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    if (removeParentTransform) {\n      // can this be converted to utils (sendObjectToPlane)?\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          invertTransform(this.calcTransformMatrix()),\n          object.calcTransformMatrix(),\n        ),\n      );\n    }\n    this._shouldSetNestedCoords() && object.setCoords();\n    object._set('group', this);\n    object._set('canvas', this.canvas);\n    this._watchObject(true, object);\n    const activeObject =\n      this.canvas &&\n      this.canvas.getActiveObject &&\n      this.canvas.getActiveObject();\n    // if we are adding the activeObject in a group\n    if (\n      activeObject &&\n      (activeObject === object || object.isDescendantOf(activeObject))\n    ) {\n      this._activeObjects.push(object);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    object._set('parent', undefined);\n    object._set('canvas', undefined);\n  }\n\n  /**\n   * Executes the inner fabric logic of exiting a group.\n   * - Stop watching the object\n   * - Remove the object from the optimization map this._activeObjects\n   * - unset the group property of the object\n   * @protected\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object._set('group', undefined);\n    if (!removeParentTransform) {\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          this.calcTransformMatrix(),\n          object.calcTransformMatrix(),\n        ),\n      );\n      object.setCoords();\n    }\n    this._watchObject(false, object);\n    const index =\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\n    if (index > -1) {\n      this._activeObjects.splice(index, 1);\n    }\n  }\n\n  /**\n   * Decide if the group should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step.\n   * Generally you do not cache objects in groups because the group is already cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\n    if (ownCache) {\n      for (let i = 0; i < this._objects.length; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          this.ownCaching = false;\n          return false;\n        }\n      }\n    }\n    return ownCache;\n  }\n\n  /**\n   * Check if this object or a child object will cast a shadow\n   * @return {Boolean}\n   */\n  willDrawShadow() {\n    if (super.willDrawShadow()) {\n      return true;\n    }\n    for (let i = 0; i < this._objects.length; i++) {\n      if (this._objects[i].willDrawShadow()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if instance or its group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache(): boolean {\n    return this.ownCaching || (!!this.parent && this.parent.isOnACache());\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    this._renderBackground(ctx);\n    for (let i = 0; i < this._objects.length; i++) {\n      const obj = this._objects[i];\n      // TODO: handle rendering edge case somehow\n      if (this.canvas?.preserveObjectStacking && obj.group !== this) {\n        ctx.save();\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\n        obj.render(ctx);\n        ctx.restore();\n      } else if (obj.group === this) {\n        obj.render(ctx);\n      }\n    }\n    this._drawClipPath(ctx, this.clipPath, context);\n  }\n\n  /**\n   * @override\n   * @return {Boolean}\n   */\n  setCoords() {\n    super.setCoords();\n    this._shouldSetNestedCoords() &&\n      this.forEachObject((object) => object.setCoords());\n  }\n\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\n    this.layoutManager.performLayout({\n      target: this,\n      type: LAYOUT_TYPE_IMPERATIVE,\n      ...options,\n    });\n  }\n\n  /**\n   * Renders instance on a given context\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    this._transformDone = true;\n    super.render(ctx);\n    this._transformDone = false;\n  }\n\n  /**\n   *\n   * @private\n   * @param {'toObject'|'toDatalessObject'} [method]\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {FabricObject[]} serialized objects\n   */\n  __serializeObjects(\n    method: 'toObject' | 'toDatalessObject',\n    propertiesToInclude?: string[],\n  ) {\n    const _includeDefaultValues = this.includeDefaultValues;\n    return this._objects\n      .filter(function (obj) {\n        return !obj.excludeFromExport;\n      })\n      .map(function (obj) {\n        const originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        const data = obj[method || 'toObject'](propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        // delete data.version;\n        return data;\n      });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<\n      GroupProps & TClassProperties<this>,\n      keyof SerializedGroupProps\n    >,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\n    const layoutManager = this.layoutManager.toObject();\n\n    return {\n      ...super.toObject([\n        'subTargetCheck',\n        'interactive',\n        ...propertiesToInclude,\n      ]),\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\n        ? { layoutManager }\n        : {}),\n      objects: this.__serializeObjects(\n        'toObject',\n        propertiesToInclude as string[],\n      ),\n    };\n  }\n\n  toString() {\n    return `#<Group: (${this.complexity()})>`;\n  }\n\n  dispose() {\n    this.layoutManager.unsubscribeTargets({\n      targets: this.getObjects(),\n      target: this,\n    });\n    this._activeObjects = [];\n    this.forEachObject((object) => {\n      this._watchObject(false, object);\n      object.dispose();\n    });\n    super.dispose();\n  }\n\n  /**\n   * @private\n   */\n  _createSVGBgRect(reviver?: TSVGReviver) {\n    if (!this.backgroundColor) {\n      return '';\n    }\n    const fillStroke = Rect.prototype._toSVG.call(this);\n    const commons = fillStroke.indexOf('COMMON_PARTS');\n    fillStroke[commons] = 'for=\"group\" ';\n    const markup = fillStroke.join('');\n    return reviver ? reviver(markup) : markup;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  _toSVG(reviver?: TSVGReviver) {\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n    }\n    svgString.push('</g>\\n');\n    return svgString;\n  }\n\n  /**\n   * Returns styles-string for svg-export, specific version for group\n   * @return {String}\n   */\n  getSvgStyles(): string {\n    const opacity =\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\n          ? `opacity: ${this.opacity};`\n          : '',\n      visibility = this.visible ? '' : ' visibility: hidden;';\n    return [opacity, this.getSvgFilter(), visibility].join('');\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const svgString = [];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n    }\n    return this._createBaseClipPathSVGMarkup(svgString, {\n      reviver,\n    });\n  }\n\n  /**\n   * @todo support loading from svg\n   * @private\n   * @static\n   * @memberOf Group\n   * @param {Object} object Object to create a group from\n   * @returns {Promise<Group>}\n   */\n  static fromObject<T extends TOptions<SerializedGroupProps>>(\n    { type, objects = [], layoutManager, ...options }: T,\n    abortable?: Abortable,\n  ) {\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, abortable),\n      enlivenObjectEnlivables(options, abortable),\n    ]).then(([objects, hydratedOptions]) => {\n      const group = new this(objects, {\n        ...options,\n        ...hydratedOptions,\n        layoutManager: new NoopLayoutManager(),\n      });\n      if (layoutManager) {\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\n          layoutManager.type,\n        );\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\n          layoutManager.strategy,\n        );\n        group.layoutManager = new layoutClass(new strategyClass());\n      } else {\n        group.layoutManager = new LayoutManager();\n      }\n      group.layoutManager.subscribeTargets({\n        type: LAYOUT_TYPE_INITIALIZATION,\n        target: group,\n        targets: group.getObjects(),\n      });\n      group.setCoords();\n      return group;\n    });\n  }\n}\n\nclassRegistry.setClass(Group);\n","import type { GroupProps } from '../../shapes/Group';\nimport { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\n\n/**\n * TODO experiment with different layout manager and svg results ( fixed fit content )\n * Groups SVG elements (usually those retrieved from SVG document)\n * @static\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\n * @return {FabricObject | Group}\n */\nexport const groupSVGElements = (\n  elements: FabricObject[],\n  options?: Partial<GroupProps>,\n) => {\n  if (elements && elements.length === 1) {\n    return elements[0];\n  }\n  return new Group(elements, options);\n};\n","import type { TSize } from '../../typedefs';\n\n/**\n * Finds the scale for the object source to fit inside the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to fit into destination\n */\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\n  Math.min(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n\n/**\n * Finds the scale for the object source to cover entirely the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to cover destination\n */\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\n  Math.max(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n","import { reNum } from '../../parser/constants';\n\nconst commaWsp = `\\\\s*,?\\\\s*`;\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n * p is a number that is preceded by an arbitary number of spaces, maybe 0,\n * a comma or not, and then possibly more spaces or not.\n */\nconst p = `${commaWsp}(${reNum})`;\n\n// const reMoveToCommand = `(M) ?(?:${p}${p} ?)+`;\n\n// const reLineCommand = `(L) ?(?:${p}${p} ?)+`;\n\n// const reHorizontalLineCommand = `(H) ?(?:${p} ?)+`;\n\n// const reVerticalLineCommand = `(V) ?(?:${p} ?)+`;\n\n// const reClosePathCommand = String.raw`(Z)\\s*`;\n\n// const reCubicCurveCommand = `(C) ?(?:${p}${p}${p}${p}${p}${p} ?)+`;\n\n// const reCubicCurveShortcutCommand = `(S) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveCommand = `(Q) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveShortcutCommand = `(T) ?(?:${p}${p} ?)+`;\n\nexport const reArcCommandPoints = `${p}${p}${p}${commaWsp}([01])${commaWsp}([01])${p}${p}`;\n// const reArcCommand = `(A) ?(?:${reArcCommandPoints} ?)+`;\n\n// export const rePathCommandGroups =\n//   `(?:(?:${reMoveToCommand})` +\n//   `|(?:${reLineCommand})` +\n//   `|(?:${reHorizontalLineCommand})` +\n//   `|(?:${reVerticalLineCommand})` +\n//   `|(?:${reClosePathCommand})` +\n//   `|(?:${reCubicCurveCommand})` +\n//   `|(?:${reCubicCurveShortcutCommand})` +\n//   `|(?:${reQuadraticCurveCommand})` +\n//   `|(?:${reQuadraticCurveShortcutCommand})` +\n//   `|(?:${reArcCommand}))`;\n\nexport const rePathCommand = '[mzlhvcsqta][^mzlhvcsqta]*';\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport { halfPI, PiBy180 } from '../../constants';\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\nimport { cos } from '../misc/cos';\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\nimport { sin } from '../misc/sin';\nimport { toFixed } from '../misc/toFixed';\nimport type {\n  TCurveInfo,\n  TComplexPathData,\n  TParsedAbsoluteCubicCurveCommand,\n  TPathSegmentInfo,\n  TPointAngle,\n  TSimpleParsedCommand,\n  TSimplePathData,\n  TPathSegmentCommandInfo,\n  TComplexParsedCommand,\n  TPathSegmentInfoCommon,\n  TEndPathInfo,\n  TParsedArcCommand,\n  TComplexParsedCommandType,\n} from './typedefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { reArcCommandPoints, rePathCommand } from './regex';\nimport { reNum } from '../../parser/constants';\n\n/**\n * Commands that may be repeated\n */\nconst repeatedCommands: Record<string, 'l' | 'L'> = {\n  m: 'l',\n  M: 'L',\n};\n\n/**\n * Convert an arc of a rotated ellipse to a Bezier Curve\n * @param {TRadian} theta1 start of the arc\n * @param {TRadian} theta2 end of the arc\n * @param cosTh cosine of the angle of rotation\n * @param sinTh sine of the angle of rotation\n * @param rx x-axis radius (before rotation)\n * @param ry y-axis radius (before rotation)\n * @param cx1 center x of the ellipse\n * @param cy1 center y of the ellipse\n * @param mT\n * @param fromX starting point of arc x\n * @param fromY starting point of arc y\n */\nconst segmentToBezier = (\n  theta1: TRadian,\n  theta2: TRadian,\n  cosTh: number,\n  sinTh: number,\n  rx: number,\n  ry: number,\n  cx1: number,\n  cy1: number,\n  mT: number,\n  fromX: number,\n  fromY: number,\n): TParsedAbsoluteCubicCurveCommand => {\n  const costh1 = cos(theta1),\n    sinth1 = sin(theta1),\n    costh2 = cos(theta2),\n    sinth2 = sin(theta2),\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\n\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n};\n\n/**\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n * http://mozilla.org/MPL/2.0/\n * @param toX\n * @param toY\n * @param rx\n * @param ry\n * @param {number} large 0 or 1 flag\n * @param {number} sweep 0 or 1 flag\n * @param rotateX\n */\nconst arcToSegments = (\n  toX: number,\n  toY: number,\n  rx: number,\n  ry: number,\n  large: number,\n  sweep: number,\n  rotateX: TRadian,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  let fromX = 0,\n    fromY = 0,\n    root = 0;\n  const PI = Math.PI,\n    theta = rotateX * PiBy180,\n    sinTheta = sin(theta),\n    cosTh = cos(theta),\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\n    rx2 = rx ** 2,\n    ry2 = ry ** 2,\n    py2 = py ** 2,\n    px2 = px ** 2,\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\n  let _rx = Math.abs(rx);\n  let _ry = Math.abs(ry);\n\n  if (pl < 0) {\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\n    _rx *= s;\n    _ry *= s;\n  } else {\n    root =\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n  }\n\n  const cx = (root * _rx * py) / _ry,\n    cy = (-root * _ry * px) / _rx,\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\n  let dtheta = calcVectorAngle(\n    (px - cx) / _rx,\n    (py - cy) / _ry,\n    (-px - cx) / _rx,\n    (-py - cy) / _ry,\n  );\n\n  if (sweep === 0 && dtheta > 0) {\n    dtheta -= 2 * PI;\n  } else if (sweep === 1 && dtheta < 0) {\n    dtheta += 2 * PI;\n  }\n\n  // Convert into cubic bezier segments <= 90deg\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\n    result = [],\n    mDelta = dtheta / segments,\n    mT =\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\n      Math.sin(mDelta / 2);\n  let th3 = mTheta + mDelta;\n\n  for (let i = 0; i < segments; i++) {\n    result[i] = segmentToBezier(\n      mTheta,\n      th3,\n      cosTh,\n      sinTheta,\n      _rx,\n      _ry,\n      cx1,\n      cy1,\n      mT,\n      fromX,\n      fromY,\n    );\n    fromX = result[i][5];\n    fromY = result[i][6];\n    mTheta = th3;\n    th3 += mDelta;\n  }\n  return result;\n};\n\n/**\n * @private\n * Calculate the angle between two vectors\n * @param ux u endpoint x\n * @param uy u endpoint y\n * @param vx v endpoint x\n * @param vy v endpoint y\n */\nconst calcVectorAngle = (\n  ux: number,\n  uy: number,\n  vx: number,\n  vy: number,\n): TRadian => {\n  const ta = Math.atan2(uy, ux),\n    tb = Math.atan2(vy, vx);\n  if (tb >= ta) {\n    return tb - ta;\n  } else {\n    return 2 * Math.PI - (ta - tb);\n  }\n};\n\n// functions for the Cubic beizer\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\nconst CB1 = (t: number) => t ** 3;\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\nconst CB4 = (t: number) => (1 - t) ** 3;\n\n/**\n * Calculate bounding box of a cubic Bezier curve\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n * @param {number} begx starting point\n * @param {number} begy\n * @param {number} cp1x first control point\n * @param {number} cp1y\n * @param {number} cp2x second control point\n * @param {number} cp2y\n * @param {number} endx end of bezier\n * @param {number} endy\n * @return {TRectBounds} the rectangular bounds\n */\nexport function getBoundsOfCurve(\n  begx: number,\n  begy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  endx: number,\n  endy: number,\n): TRectBounds {\n  let argsString: string;\n  if (config.cachesBoundsOfCurve) {\n    // eslint-disable-next-line\n    argsString = [...arguments].join();\n    if (cache.boundsOfCurveCache[argsString]) {\n      return cache.boundsOfCurveCache[argsString];\n    }\n  }\n\n  const sqrt = Math.sqrt,\n    abs = Math.abs,\n    tvalues = [],\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\n      [0, 0],\n      [0, 0],\n    ];\n\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\n  let c = 3 * cp1x - 3 * begx;\n\n  for (let i = 0; i < 2; ++i) {\n    if (i > 0) {\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\n      c = 3 * cp1y - 3 * begy;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      const t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    const b2ac = b * b - 4 * c * a;\n    if (b2ac < 0) {\n      continue;\n    }\n    const sqrtb2ac = sqrt(b2ac);\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n  const iterator = getPointOnCubicBezierIterator(\n    begx,\n    begy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    endx,\n    endy,\n  );\n  while (j--) {\n    const { x, y } = iterator(tvalues[j]);\n    bounds[0][j] = x;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = begx;\n  bounds[1][jlen] = begy;\n  bounds[0][jlen + 1] = endx;\n  bounds[1][jlen + 1] = endy;\n  const result: TRectBounds = [\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\n  ];\n  if (config.cachesBoundsOfCurve) {\n    cache.boundsOfCurveCache[argsString!] = result;\n  }\n  return result;\n}\n\n/**\n * Converts arc to a bunch of cubic Bezier curves\n * @param {number} fx starting point x\n * @param {number} fy starting point y\n * @param {TParsedArcCommand} coords Arc command\n */\nexport const fromArcToBeziers = (\n  fx: number,\n  fy: number,\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\n    segsNorm[i][1] += fx;\n    segsNorm[i][2] += fy;\n    segsNorm[i][3] += fx;\n    segsNorm[i][4] += fy;\n    segsNorm[i][5] += fx;\n    segsNorm[i][6] += fy;\n  }\n  return segsNorm;\n};\n\n/**\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\n * Simplification consist of:\n * - All commands converted to absolute (lowercase to uppercase)\n * - S converted to C\n * - T converted to Q\n * - A converted to C\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\n * TODO: figure out how to remove the type assertions in a nice way\n */\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\n  // x and y represent the last point of the path, AKA the previous command point.\n  // we add them to each relative command to make it an absolute comment.\n  // we also swap the v V h H with L, because are easier to transform.\n  let x = 0,\n    y = 0;\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n  // the last x1 and y1.\n  let x1 = 0,\n    y1 = 0;\n  // previous will host the letter of the previous command, to handle S and T.\n  // controlX and controlY will host the previous reflected control point\n  const destinationPath: TSimplePathData = [];\n  let previous,\n    // placeholders\n    controlX = 0,\n    controlY = 0;\n  for (const parsedCommand of path) {\n    const current: TComplexParsedCommand = [...parsedCommand];\n    let converted: TSimpleParsedCommand | undefined;\n    switch (\n      current[0] // first letter\n    ) {\n      case 'l': // lineto, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'L':\n        x = current[1];\n        y = current[2];\n        converted = ['L', x, y];\n        break;\n      case 'h': // horizontal lineto, relative\n        current[1] += x;\n      // falls through\n      case 'H':\n        x = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'v': // vertical lineto, relative\n        current[1] += y;\n      // falls through\n      case 'V':\n        y = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'm': // moveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'M':\n        x = current[1];\n        y = current[2];\n        x1 = current[1];\n        y1 = current[2];\n        converted = ['M', x, y];\n        break;\n      case 'c': // bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n        current[5] += x;\n        current[6] += y;\n      // falls through\n      case 'C':\n        controlX = current[3];\n        controlY = current[4];\n        x = current[5];\n        y = current[6];\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\n        break;\n      case 's': // shorthand cubic bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'S':\n        // would be sScC but since we are swapping sSc for C, we check just that.\n        if (previous === 'C') {\n          // calculate reflection of previous control points\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\n          // the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[3];\n        y = current[4];\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\n        // converted[3] and converted[4] are NOW the second control point.\n        // we keep it for the next reflection.\n        controlX = converted[3];\n        controlY = converted[4];\n        break;\n      case 'q': // quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'Q':\n        controlX = current[1];\n        controlY = current[2];\n        x = current[3];\n        y = current[4];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 't': // shorthand quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'T':\n        if (previous === 'Q') {\n          // calculate reflection of previous control point\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[1];\n        y = current[2];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 'a':\n        current[6] += x;\n        current[7] += y;\n      // falls through\n      case 'A':\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\n        x = current[6];\n        y = current[7];\n        break;\n      case 'z':\n      case 'Z':\n        x = x1;\n        y = y1;\n        converted = ['Z'];\n        break;\n      default:\n    }\n    if (converted) {\n      destinationPath.push(converted);\n      previous = converted[0];\n    } else {\n      previous = '';\n    }\n  }\n  return destinationPath;\n};\n\n// todo verify if we can just use the point class here\n/**\n * Calc length from point x1,y1 to x2,y2\n * @param {number} x1 starting point x\n * @param {number} y1 starting point y\n * @param {number} x2 starting point x\n * @param {number} y2 starting point y\n * @return {number} length of segment\n */\nconst calcLineLength = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n/**\n * Get an iterator that takes a percentage and returns a point\n * @param {number} begx\n * @param {number} begy\n * @param {number} cp1x\n * @param {number} cp1y\n * @param {number} cp2x\n * @param {number} cp2y\n * @param {number} endx\n * @param {number} endy\n */\nconst getPointOnCubicBezierIterator =\n  (\n    begx: number,\n    begy: number,\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    endx: number,\n    endy: number,\n  ) =>\n  (pct: number) => {\n    const c1 = CB1(pct),\n      c2 = CB2(pct),\n      c3 = CB3(pct),\n      c4 = CB4(pct);\n    return new Point(\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4,\n    );\n  };\n\nconst QB1 = (t: number) => t ** 2;\nconst QB2 = (t: number) => 2 * t * (1 - t);\nconst QB3 = (t: number) => (1 - t) ** 2;\n\nconst getTangentCubicIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number,\n  ) =>\n  (pct: number) => {\n    const qb1 = QB1(pct),\n      qb2 = QB2(pct),\n      qb3 = QB3(pct),\n      tangentX =\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\n      tangentY =\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\nconst getPointOnQuadraticBezierIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const c1 = QB1(pct),\n      c2 = QB2(pct),\n      c3 = QB3(pct);\n    return new Point(\n      p3x * c1 + p2x * c2 + p1x * c3,\n      p3y * c1 + p2y * c2 + p1y * c3,\n    );\n  };\n\nconst getTangentQuadraticIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const invT = 1 - pct,\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\n// with 100 segments. This will good enough to calculate the length of the curve\nconst pathIterator = (\n  iterator: (pct: number) => Point,\n  x1: number,\n  y1: number,\n) => {\n  let tempP = new Point(x1, y1),\n    tmpLen = 0;\n  for (let perc = 1; perc <= 100; perc += 1) {\n    const p = iterator(perc / 100);\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    tempP = p;\n  }\n  return tmpLen;\n};\n\n/**\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n * that correspond to that pixels run over the path.\n * The percentage will be then used to find the correct point on the canvas for the path.\n * @param {Array} segInfo fabricJS collection of information on a parsed path\n * @param {number} distance from starting point, in pixels.\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n */\nconst findPercentageForDistance = (\n  segInfo: TCurveInfo<'Q' | 'C'>,\n  distance: number,\n): TPointAngle => {\n  let perc = 0,\n    tmpLen = 0,\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\n    p: XY = { ...tempP },\n    nextLen: number,\n    nextStep = 0.01,\n    lastPerc = 0;\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n  // the path\n  const iterator = segInfo.iterator,\n    angleFinder = segInfo.angleFinder;\n  while (tmpLen < distance && nextStep > 0.0001) {\n    p = iterator(perc);\n    lastPerc = perc;\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    // compare tmpLen each cycle with distance, decide next perc to test.\n    if (nextLen + tmpLen > distance) {\n      // we discard this step and we make smaller steps.\n      perc -= nextStep;\n      nextStep /= 2;\n    } else {\n      tempP = p;\n      perc += nextStep;\n      tmpLen += nextLen;\n    }\n  }\n  return { ...p, angle: angleFinder(lastPerc) };\n};\n\n/**\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\n * @param {TSimplePathData} path parsed path commands\n * @return {TPathSegmentInfo[]} path commands information\n */\nexport const getPathSegmentsInfo = (\n  path: TSimplePathData,\n): TPathSegmentInfo[] => {\n  let totalLength = 0,\n    //x2 and y2 are the coords of segment start\n    //x1 and y1 are the coords of the current point\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    iterator,\n    tempInfo: TPathSegmentInfo;\n  const info: TPathSegmentInfo[] = [];\n  for (const current of path) {\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\n      x: x1,\n      y: y1,\n      command: current[0],\n      length: 0,\n    };\n    switch (\n      current[0] //first letter\n    ) {\n      case 'M':\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\n        tempInfo.x = x2 = x1 = current[1];\n        tempInfo.y = y2 = y1 = current[2];\n        break;\n      case 'L':\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n        x1 = current[1];\n        y1 = current[2];\n        break;\n      case 'C':\n        iterator = getPointOnCubicBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentCubicIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n\n        x1 = current[5];\n        y1 = current[6];\n        break;\n      case 'Q':\n        iterator = getPointOnQuadraticBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentQuadraticIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n        x1 = current[3];\n        y1 = current[4];\n        break;\n      case 'Z':\n        // we add those in order to ease calculations later\n        tempInfo = <TEndPathInfo>basicInfo;\n        tempInfo.destX = x2;\n        tempInfo.destY = y2;\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\n        x1 = x2;\n        y1 = y2;\n        break;\n    }\n    totalLength += tempInfo.length;\n    info.push(tempInfo);\n  }\n  info.push({ length: totalLength, x: x1, y: y1 });\n  return info;\n};\n\n/**\n * Get the point on the path that is distance along the path\n * @param path\n * @param distance\n * @param infos\n */\nexport const getPointOnPath = (\n  path: TSimplePathData,\n  distance: number,\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path),\n): TPointAngle | undefined => {\n  let i = 0;\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\n    distance -= infos[i].length;\n    i++;\n  }\n  const segInfo = infos[i],\n    segPercent = distance / segInfo.length,\n    segment = path[i];\n\n  switch (segInfo.command) {\n    case 'M':\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\n    case 'Z':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segInfo.destX, segInfo.destY),\n          segPercent,\n        ),\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\n      };\n    case 'L':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segment[1]!, segment[2]!),\n          segPercent,\n        ),\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\n      };\n    case 'C':\n      return findPercentageForDistance(segInfo, distance);\n    case 'Q':\n      return findPercentageForDistance(segInfo, distance);\n    default:\n    // throw Error('Invalid command');\n  }\n};\n\nconst rePathCmdAll = new RegExp(rePathCommand, 'gi');\nconst regExpArcCommandPoints = new RegExp(reArcCommandPoints, 'g');\nconst reMyNum = new RegExp(reNum, 'gi');\nconst commandLengths = {\n  m: 2,\n  l: 2,\n  h: 1,\n  v: 1,\n  c: 6,\n  s: 4,\n  q: 4,\n  t: 2,\n  a: 7,\n} as const;\n/**\n *\n * @param {string} pathString\n * @return {TComplexPathData} An array of SVG path commands\n * @example <caption>Usage</caption>\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n *   ['M', 3, 4],\n *   ['Q', 3, 5, 2, 1, 4, 0],\n *   ['Q', 9, 12, 2, 1, 4, 0],\n * ];\n */\nexport const parsePath = (pathString: string): TComplexPathData => {\n  const chain: TComplexPathData = [];\n  const all = pathString.match(rePathCmdAll) ?? [];\n  for (const matchStr of all) {\n    // take match string and save the first letter as the command\n    const commandLetter = matchStr[0] as TComplexParsedCommandType;\n    // in case of Z we have very little to do\n    if (commandLetter === 'z' || commandLetter === 'Z') {\n      chain.push([commandLetter]);\n      continue;\n    }\n    const commandLength =\n      commandLengths[\n        commandLetter.toLowerCase() as keyof typeof commandLengths\n      ];\n\n    let paramArr = [];\n    if (commandLetter === 'a' || commandLetter === 'A') {\n      // the arc command ha some peculariaties that requires a special regex other than numbers\n      // it is possible to avoid using a space between the sweep and large arc flags, making them either\n      // 00, 01, 10 or 11, making them identical to a plain number for the regex reMyNum\n      // reset the regexp\n      regExpArcCommandPoints.lastIndex = 0;\n      for (let out = null; (out = regExpArcCommandPoints.exec(matchStr)); ) {\n        paramArr.push(...out.slice(1));\n      }\n    } else {\n      paramArr = matchStr.match(reMyNum) || [];\n    }\n\n    // inspect the length of paramArr, if is longer than commandLength\n    // we are dealing with repeated commands\n    for (let i = 0; i < paramArr.length; i += commandLength) {\n      const newCommand = new Array(commandLength) as TComplexParsedCommand;\n      const transformedCommand = repeatedCommands[commandLetter];\n      newCommand[0] =\n        i > 0 && transformedCommand ? transformedCommand : commandLetter;\n      for (let j = 0; j < commandLength; j++) {\n        newCommand[j + 1] = parseFloat(paramArr[i + j]);\n      }\n      chain.push(newCommand);\n    }\n  }\n  return chain;\n};\n\n/**\n *\n * Converts points to a smooth SVG path\n * @param {XY[]} points Array of points\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n * @return {(string|number)[][]} An array of SVG path commands\n */\nexport const getSmoothPathFromPoints = (\n  points: Point[],\n  correction = 0,\n): TSimplePathData => {\n  let p1 = new Point(points[0]),\n    p2 = new Point(points[1]),\n    multSignX = 1,\n    multSignY = 0;\n  const path: TSimplePathData = [],\n    len = points.length,\n    manyPoints = len > 2;\n\n  if (manyPoints) {\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n  }\n  path.push([\n    'M',\n    p1.x - multSignX * correction,\n    p1.y - multSignY * correction,\n  ]);\n  let i;\n  for (i = 1; i < len; i++) {\n    if (!p1.eq(p2)) {\n      const midPoint = p1.midPointFrom(p2);\n      // p1 is our bezier control point\n      // midpoint is our endpoint\n      // start point is p(i-1) value.\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n    }\n    p1 = points[i];\n    if (i + 1 < points.length) {\n      p2 = points[i + 1];\n    }\n  }\n  if (manyPoints) {\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n  }\n  path.push([\n    'L',\n    p1.x + multSignX * correction,\n    p1.y + multSignY * correction,\n  ]);\n  return path;\n};\n\n/**\n * Transform a path by transforming each segment.\n * it has to be a simplified path or it won't work.\n * WARNING: this depends from pathOffset for correct operation\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\n * @param {TMat2D} transform matrix that represent the transformation\n * @param {Point} [pathOffset] `Path.pathOffset`\n * @returns {TSimplePathData} the transformed path\n */\nexport const transformPath = (\n  path: TSimplePathData,\n  transform: TMat2D,\n  pathOffset: Point,\n): TSimplePathData => {\n  if (pathOffset) {\n    transform = multiplyTransformMatrices(transform, [\n      1,\n      0,\n      0,\n      1,\n      -pathOffset.x,\n      -pathOffset.y,\n    ]);\n  }\n  return path.map((pathSegment) => {\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\n      // TODO: is there a way to get around casting to any?\n      const { x, y } = transformPoint(\n        {\n          x: pathSegment[i] as number,\n          y: pathSegment[i + 1] as number,\n        },\n        transform,\n      );\n      newSegment[i] = x;\n      newSegment[i + 1] = y;\n    }\n    return newSegment;\n  });\n};\n\n/**\n * Returns an array of path commands to create a regular polygon\n * @param {number} numVertexes\n * @param {number} radius\n * @returns {TSimplePathData} An array of SVG path commands\n */\nexport const getRegularPolygonPath = (\n  numVertexes: number,\n  radius: number,\n): TSimplePathData => {\n  const interiorAngle = (Math.PI * 2) / numVertexes;\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\n  let rotationAdjustment = -halfPI;\n  if (numVertexes % 2 === 0) {\n    rotationAdjustment += interiorAngle / 2;\n  }\n  const d = new Array(numVertexes + 1);\n  for (let i = 0; i < numVertexes; i++) {\n    const rad = i * interiorAngle + rotationAdjustment;\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\n  }\n  d[numVertexes] = ['Z'];\n  return d;\n};\n\n/**\n * Join path commands to go back to svg format\n * @param {TSimplePathData} pathData fabricJS parsed path commands\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {String} joined path 'M 0 0 L 20 30'\n */\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\n  pathData\n    .map((segment) => {\n      return segment\n        .map((arg, i) => {\n          if (i === 0) return arg;\n          return fractionDigits === undefined\n            ? arg\n            : toFixed(arg, fractionDigits);\n        })\n        .join(' ');\n    })\n    .join(' ');\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\n\n/**\n * wrapper for setting element's style\n * @param {HTMLElement} element\n * @param {Object | string} styles\n */\nexport function setStyle(\n  element: HTMLElement,\n  styles: string | Record<string, string>,\n) {\n  const elementStyle = element.style;\n  if (!elementStyle || !styles) {\n    return;\n  } else if (typeof styles === 'string') {\n    elementStyle.cssText += ';' + styles;\n  } else {\n    Object.entries(styles).forEach(([property, value]) =>\n      elementStyle.setProperty(property, value),\n    );\n  }\n}\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { sendObjectToPlane } from './planeChange';\nimport { Group } from '../../shapes/Group';\n/**\n * Merges 2 clip paths into one visually equal clip path\n *\n * **IMPORTANT**:\\\n * Does **NOT** clone the arguments, clone them proir if necessary.\n *\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n *\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n *\n * @memberOf fabric.util\n * @param {fabric.Object} c1\n * @param {fabric.Object} c2\n * @returns {fabric.Object} merged clip path\n */\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\n  let a = c1,\n    b = c2;\n  if (a.inverted && !b.inverted) {\n    //  case (2)\n    a = c2;\n    b = c1;\n  }\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\n  //  assign the `inverted` prop to the wrapping group\n  const inverted = a.inverted && b.inverted;\n  if (inverted) {\n    //  case (1)\n    a.inverted = b.inverted = false;\n  }\n  return new Group([a], { clipPath: b, inverted });\n};\n","/**\n * Returns random number between 2 specified ones.\n * @param {Number} min lower limit\n * @param {Number} max upper limit\n * @return {Number} random value (between min and max)\n */\nexport const getRandomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","import { getFabricWindow } from '../../env';\nimport { noop } from '../../constants';\nimport type { Abortable } from '../../typedefs';\nimport { SignalAbortedError } from './console';\n\ntype requestOptions = Abortable & {\n  onComplete?: (xhr: XMLHttpRequest) => void;\n};\n\n/**\n * Cross-browser abstraction for sending XMLHttpRequest\n * @deprecated this has to go away, we can use a modern browser method to do the same.\n * @param {String} url URL to send XMLHttpRequest to\n * @param {Object} [options] Options object\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {Function} options.onComplete Callback to invoke when request is completed\n * @return {XMLHttpRequest} request\n */\n\nexport function request(url: string, options: requestOptions = {}) {\n  const onComplete = options.onComplete || noop,\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\n    signal = options.signal,\n    abort = function () {\n      xhr.abort();\n    },\n    removeListener = function () {\n      signal && signal.removeEventListener('abort', abort);\n      xhr.onerror = xhr.ontimeout = noop;\n    };\n\n  if (signal && signal.aborted) {\n    throw new SignalAbortedError('request');\n  } else if (signal) {\n    signal.addEventListener('abort', abort, { once: true });\n  }\n\n  /** @ignore */\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      removeListener();\n      onComplete(xhr);\n      xhr.onreadystatechange = noop;\n    }\n  };\n\n  xhr.onerror = xhr.ontimeout = removeListener;\n\n  xhr.open('get', url, true);\n\n  xhr.send();\n  return xhr;\n}\n","import { CENTER, SCALE_X, SCALE_Y } from '../constants';\nimport type { FabricImage } from '../shapes/Image';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { qrDecompose } from './misc/matrix';\n\ntype FabricObjectWithTransformMatrix = FabricObject & {\n  transformMatrix?: TMat2D;\n};\n\n/**\n * This function is an helper for svg import. it decompose the transformMatrix\n * and assign properties to object.\n * untransformed coordinates\n * @private\n */\nconst _assignTransformMatrixProps = (\n  object: FabricObjectWithTransformMatrix,\n) => {\n  if (object.transformMatrix) {\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\n      object.transformMatrix,\n    );\n    object.flipX = false;\n    object.flipY = false;\n    object.set(SCALE_X, scaleX);\n    object.set(SCALE_Y, scaleY);\n    object.angle = angle;\n    object.skewX = skewX;\n    object.skewY = 0;\n  }\n};\n\n/**\n * This function is an helper for svg import. it removes the transform matrix\n * and set to object properties that fabricjs can handle\n * @private\n * @param {Object} preserveAspectRatioOptions\n */\nexport const removeTransformMatrixForSvgParsing = (\n  object: FabricObjectWithTransformMatrix,\n  preserveAspectRatioOptions?: any,\n) => {\n  let center = object._findCenterFromElement();\n  if (object.transformMatrix) {\n    _assignTransformMatrixProps(object);\n    center = center.transform(object.transformMatrix);\n  }\n  delete object.transformMatrix;\n  if (preserveAspectRatioOptions) {\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\n    center.x += preserveAspectRatioOptions.offsetLeft;\n    center.y += preserveAspectRatioOptions.offsetTop;\n    object.width = preserveAspectRatioOptions.width;\n    object.height = preserveAspectRatioOptions.height;\n  }\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n","import type { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n/**\n * Rotates `point` around `origin` with `radians`\n * @deprecated use the Point.rotate\n * @param {Point} origin The origin of the rotation\n * @param {Point} origin The origin of the rotation\n * @param {TRadian} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotatePoint = (\n  point: Point,\n  origin: Point,\n  radians: TRadian,\n): Point => point.rotate(radians, origin);\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport { createCanvasElement, setStyle } from '../../util';\nimport type { CSSDimensions } from './util';\nimport { makeElementUnselectable, setCSSDimensions } from './util';\nimport type { CanvasItem } from './StaticCanvasDOMManager';\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\nimport { setCanvasDimensions } from './util';\nimport { NONE } from '../../constants';\n\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\n  upper: CanvasItem;\n  container: HTMLDivElement;\n\n  constructor(\n    arg0?: string | HTMLCanvasElement,\n    {\n      allowTouchScrolling = false,\n      containerClass = '',\n    }: {\n      allowTouchScrolling?: boolean;\n      /**\n       * @deprecated here only for backward compatibility\n       */\n      containerClass?: string;\n    } = {},\n  ) {\n    super(arg0);\n    const { el: lowerCanvasEl } = this.lower;\n    const upperCanvasEl = this.createUpperCanvas();\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\n    this.applyCanvasStyle(lowerCanvasEl, {\n      allowTouchScrolling,\n    });\n    this.applyCanvasStyle(upperCanvasEl, {\n      allowTouchScrolling,\n      styles: {\n        position: 'absolute',\n        left: '0',\n        top: '0',\n      },\n    });\n    const container = this.createContainerElement();\n    container.classList.add(containerClass);\n    if (lowerCanvasEl.parentNode) {\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\n    }\n    container.append(lowerCanvasEl, upperCanvasEl);\n    this.container = container;\n  }\n\n  protected createUpperCanvas() {\n    const { el: lowerCanvasEl } = this.lower;\n    const el = createCanvasElement();\n    // we assign the same classname of the lowerCanvas\n    el.className = lowerCanvasEl.className;\n    // but then we remove the lower-canvas specific className\n    el.classList.remove('lower-canvas');\n    // we add the specific upper-canvas class\n    el.classList.add('upper-canvas');\n    el.setAttribute('data-fabric', 'top');\n    el.style.cssText = lowerCanvasEl.style.cssText;\n    el.setAttribute('draggable', 'true');\n    return el;\n  }\n\n  protected createContainerElement() {\n    const container = getFabricDocument().createElement('div');\n    container.setAttribute('data-fabric', 'wrapper');\n    setStyle(container, {\n      position: 'relative',\n    });\n    makeElementUnselectable(container);\n    return container;\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\n   */\n  protected applyCanvasStyle(\n    element: HTMLCanvasElement,\n    options: {\n      allowTouchScrolling?: boolean;\n      styles?: Record<string, string>;\n    },\n  ) {\n    const { styles, allowTouchScrolling } = options;\n    setStyle(element, {\n      ...styles,\n      'touch-action': allowTouchScrolling ? 'manipulation' : NONE,\n    });\n    makeElementUnselectable(element);\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    super.setDimensions(size, retinaScaling);\n    const { el, ctx } = this.upper;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\n    super.setCSSDimensions(size);\n    setCSSDimensions(this.upper.el, size);\n    setCSSDimensions(this.container, size);\n  }\n\n  cleanupDOM(size: TSize) {\n    const container = this.container,\n      { el: lowerCanvasEl } = this.lower,\n      { el: upperCanvasEl } = this.upper;\n    super.cleanupDOM(size);\n    container.removeChild(upperCanvasEl);\n    container.removeChild(lowerCanvasEl);\n    if (container.parentNode) {\n      container.parentNode.replaceChild(lowerCanvasEl, container);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    getEnv().dispose(this.upper.el);\n    // @ts-expect-error disposing\n    delete this.upper;\n    // @ts-expect-error disposing\n    delete this.container;\n  }\n}\n","import { dragHandler } from '../controls/drag';\nimport { getActionFromCorner } from '../controls/util';\nimport { Point } from '../Point';\nimport { FabricObject } from '../shapes/Object/FabricObject';\nimport type {\n  CanvasEvents,\n  ModifierKey,\n  TOptionalModifierKey,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport {\n  addTransformToObject,\n  saveObjectTransform,\n} from '../util/misc/objectTransforms';\nimport type { TCanvasSizeOptions } from './StaticCanvas';\nimport { StaticCanvas } from './StaticCanvas';\nimport { isCollection } from '../Collection';\nimport { isTransparent } from '../util/misc/isTransparent';\nimport type {\n  TMat2D,\n  TOriginX,\n  TOriginY,\n  TSize,\n  TSVGReviver,\n} from '../typedefs';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { getPointer, isTouchEvent } from '../util/dom_event';\nimport type { IText } from '../shapes/IText/IText';\nimport type { BaseBrush } from '../brushes/BaseBrush';\nimport { pick } from '../util/misc/pick';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { cos, createCanvasElement, sin } from '../util';\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\nimport {\n  BOTTOM,\n  CENTER,\n  LEFT,\n  MODIFIED,\n  RESIZING,\n  RIGHT,\n  ROTATE,\n  SCALE,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CanvasOptions } from './CanvasOptions';\nimport { canvasDefaults } from './CanvasOptions';\nimport { Intersection } from '../Intersection';\nimport { isActiveSelection } from '../util/typeAssertions';\n\n/**\n * Canvas class\n * @class Canvas\n * @extends StaticCanvas\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n *\n * @fires object:modified at the end of a transform\n * @fires object:rotating while an object is being rotated from the control\n * @fires object:scaling while an object is being scaled by controls\n * @fires object:moving while an object is being dragged\n * @fires object:skewing while an object is being skewed from the controls\n *\n * @fires before:transform before a transform is is started\n * @fires before:selection:cleared\n * @fires selection:cleared\n * @fires selection:updated\n * @fires selection:created\n *\n * @fires path:created after a drawing operation ends and the path is added\n * @fires mouse:down\n * @fires mouse:move\n * @fires mouse:up\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n * @fires mouse:over\n * @fires mouse:out\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drag:enter object drag enter\n * @fires drag:leave object drag leave\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\n * @fires drop\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\n * @example\n * let a: fabric.Object, b: fabric.Object;\n * let flag = false;\n * canvas.add(a, b);\n * a.on('drop:before', opt => {\n *  //  we want a to accept the drop even though it's below b in the stack\n *  flag = this.canDrop(opt.e);\n * });\n * b.canDrop = function(e) {\n *  !flag && this.draggableTextDelegate.canDrop(e);\n * }\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\n * a.on('drop', opt => {\n *  opt.e.defaultPrevented  //  drop occurred\n *  opt.didDrop             //  drop occurred on canvas\n *  opt.target              //  drop target\n *  opt.target !== a && a.set('text', 'I lost');\n * });\n * canvas.on('drop:after', opt => {\n *  //  inform user who won\n *  if(!opt.e.defaultPrevented) {\n *    // no winners\n *  }\n *  else if(!opt.didDrop) {\n *    //  my objects didn't win, some other lucky object\n *  }\n *  else {\n *    //  we have a winner it's opt.target!!\n *  }\n * })\n *\n * @fires after:render at the end of the render process, receives the context in the callback\n * @fires before:render at start the render process, receives the context in the callback\n *\n * @fires contextmenu:before\n * @fires contextmenu\n * @example\n * let handler;\n * targets.forEach(target => {\n *   target.on('contextmenu:before', opt => {\n *     //  decide which target should handle the event before canvas hijacks it\n *     if (someCaseHappens && opt.targets.includes(target)) {\n *       handler = target;\n *     }\n *   });\n *   target.on('contextmenu', opt => {\n *     //  do something fantastic\n *   });\n * });\n * canvas.on('contextmenu', opt => {\n *   if (!handler) {\n *     //  no one takes responsibility, it's always left to me\n *     //  let's show them how it's done!\n *   }\n * });\n *\n */\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\n  extends StaticCanvas<EventSpec>\n  implements Omit<CanvasOptions, 'enablePointerEvents'>\n{\n  declare _objects: FabricObject[];\n\n  // transform config\n  declare uniformScaling: boolean;\n  declare uniScaleKey: TOptionalModifierKey;\n  declare centeredScaling: boolean;\n  declare centeredRotation: boolean;\n  declare centeredKey: TOptionalModifierKey;\n  declare altActionKey: TOptionalModifierKey;\n\n  // selection config\n  declare selection: boolean;\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\n  declare altSelectionKey: TOptionalModifierKey;\n  declare selectionColor: string;\n  declare selectionDashArray: number[];\n  declare selectionBorderColor: string;\n  declare selectionLineWidth: number;\n  declare selectionFullyContained: boolean;\n\n  // cursors\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\n  declare moveCursor: CSSStyleDeclaration['cursor'];\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\n\n  declare containerClass: string;\n\n  // target find config\n  declare perPixelTargetFind: boolean;\n  declare targetFindTolerance: number;\n  declare skipTargetFind: boolean;\n\n  /**\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n   * After mousedown, mousemove creates a shape,\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n   * @type Boolean\n   * @default\n   */\n  declare isDrawingMode: boolean;\n\n  declare preserveObjectStacking: boolean;\n\n  // event config\n  declare stopContextMenu: boolean;\n  declare fireRightClick: boolean;\n  declare fireMiddleClick: boolean;\n\n  /**\n   * Keep track of the subTargets for Mouse Events, ordered bottom up from innermost nested subTarget\n   * @type FabricObject[]\n   */\n  targets: FabricObject[] = [];\n\n  /**\n   * Keep track of the hovered target\n   * @type FabricObject | null\n   * @private\n   */\n  declare _hoveredTarget?: FabricObject;\n\n  /**\n   * hold the list of nested targets hovered\n   * @type FabricObject[]\n   * @private\n   */\n  _hoveredTargets: FabricObject[] = [];\n\n  /**\n   * hold the list of objects to render\n   * @type FabricObject[]\n   * @private\n   */\n  _objectsToRender?: FabricObject[];\n\n  /**\n   * hold a reference to a data structure that contains information\n   * on the current on going transform\n   * @type\n   * @private\n   */\n  _currentTransform: Transform | null = null;\n\n  /**\n   * hold a reference to a data structure used to track the selection\n   * box on canvas drag\n   * on the current on going transform\n   * x, y, deltaX and deltaY are in scene plane\n   * @type\n   * @private\n   */\n  protected _groupSelector: {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n  } | null = null;\n\n  /**\n   * internal flag used to understand if the context top requires a cleanup\n   * in case this is true, the contextTop will be cleared at the next render\n   * @type boolean\n   * @private\n   */\n  contextTopDirty = false;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _absolutePointer?: Point;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _pointer?: Point;\n\n  /**\n   * During a mouse event we may need the target multiple times in multiple functions.\n   * _target holds a reference to the target that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * @type {FabricObject}\n   */\n  protected declare _target?: FabricObject;\n\n  static ownDefaults = canvasDefaults;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\n  }\n\n  declare elements: CanvasDOMManager;\n  get upperCanvasEl() {\n    return this.elements.upper?.el;\n  }\n  get contextTop() {\n    return this.elements.upper?.ctx;\n  }\n  get wrapperEl() {\n    return this.elements.container;\n  }\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\n  private declare pixelFindContext: CanvasRenderingContext2D;\n\n  protected declare _isCurrentlyDrawing: boolean;\n  declare freeDrawingBrush?: BaseBrush;\n  declare _activeObject?: FabricObject;\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new CanvasDOMManager(el, {\n      allowTouchScrolling: this.allowTouchScrolling,\n      containerClass: this.containerClass,\n    });\n    this._createCacheCanvas();\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was added\n   */\n  _onObjectAdded(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    super._onObjectAdded(obj);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was removed\n   */\n  _onObjectRemoved(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    // removing active object should fire \"selection:cleared\" events\n    if (obj === this._activeObject) {\n      this.fire('before:selection:cleared', { deselected: [obj] });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { deselected: [obj] });\n      obj.fire('deselected', {\n        target: obj,\n      });\n    }\n    if (obj === this._hoveredTarget) {\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n    super._onObjectRemoved(obj);\n  }\n\n  _onStackOrderChanged() {\n    this._objectsToRender = undefined;\n    super._onStackOrderChanged();\n  }\n\n  /**\n   * Divides objects in two groups, one to render immediately\n   * and one to render as activeGroup.\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n   */\n  _chooseObjectsToRender(): FabricObject[] {\n    const activeObject = this._activeObject;\n    return !this.preserveObjectStacking && activeObject\n      ? this._objects\n          .filter((object) => !object.group && object !== activeObject)\n          .concat(activeObject)\n      : this._objects;\n  }\n\n  /**\n   * Renders both the top canvas and the secondary container canvas.\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n      this.clearContext(this.contextTop);\n      this.contextTopDirty = false;\n    }\n    if (this.hasLostContext) {\n      this.renderTopLayer(this.contextTop);\n      this.hasLostContext = false;\n    }\n    !this._objectsToRender &&\n      (this._objectsToRender = this._chooseObjectsToRender());\n    this.renderCanvas(this.getContext(), this._objectsToRender);\n  }\n\n  /**\n   * text selection is rendered by the active text instance during the rendering cycle\n   */\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\n      this.contextTopDirty = true;\n    }\n    // we render the top context - last object\n    if (this.selection && this._groupSelector) {\n      this._drawSelection(ctx);\n      this.contextTopDirty = true;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Method to render only the top canvas.\n   * Also used to render the group selection box.\n   * Does not render text selection.\n   */\n  renderTop() {\n    const ctx = this.contextTop;\n    this.clearContext(ctx);\n    this.renderTopLayer(ctx);\n    // todo: how do i know if the after:render is for the top or normal contex?\n    this.fire('after:render', { ctx });\n  }\n\n  /**\n   * Set the canvas tolerance value for pixel taret find.\n   * Use only integer numbers.\n   * @private\n   */\n  setTargetFindTolerance(value: number) {\n    value = Math.round(value);\n    this.targetFindTolerance = value;\n    const retina = this.getRetinaScaling();\n    const size = Math.ceil((value * 2 + 1) * retina);\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\n    this.pixelFindContext.scale(retina, retina);\n  }\n\n  /**\n   * Returns true if object is transparent at a certain location\n   * Clarification: this is `is target transparent at location X or are controls there`\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\n   * programmatically without painting them, the cache canvas optimization is always valid\n   * @param {FabricObject} target Object to check\n   * @param {Number} x Left coordinate in viewport space\n   * @param {Number} y Top coordinate in viewport space\n   * @return {Boolean}\n   */\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\n    const tolerance = this.targetFindTolerance;\n    const ctx = this.pixelFindContext;\n    this.clearContext(ctx);\n    ctx.save();\n    ctx.translate(-x + tolerance, -y + tolerance);\n    ctx.transform(...this.viewportTransform);\n    const selectionBgc = target.selectionBackgroundColor;\n    target.selectionBackgroundColor = '';\n    target.render(ctx);\n    target.selectionBackgroundColor = selectionBgc;\n    ctx.restore();\n    // our canvas is square, and made around tolerance.\n    // so tolerance in this case also represent the center of the canvas.\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\n    return isTransparent(\n      ctx,\n      enhancedTolerance,\n      enhancedTolerance,\n      enhancedTolerance,\n    );\n  }\n\n  /**\n   * takes an event and determines if selection key has been pressed\n   * @private\n   * @param {TPointerEvent} e Event object\n   */\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\n    const sKey = this.selectionKey;\n    if (!sKey) {\n      return false;\n    }\n    if (Array.isArray(sKey)) {\n      return !!sKey.find((key) => !!key && e[key] === true);\n    } else {\n      return e[sKey];\n    }\n  }\n\n  /**\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target\n   */\n  _shouldClearSelection(\n    e: TPointerEvent,\n    target?: FabricObject,\n  ): target is undefined {\n    const activeObjects = this.getActiveObjects(),\n      activeObject = this._activeObject;\n\n    return !!(\n      !target ||\n      (target &&\n        activeObject &&\n        activeObjects.length > 1 &&\n        activeObjects.indexOf(target) === -1 &&\n        activeObject !== target &&\n        !this._isSelectionKeyPressed(e)) ||\n      (target && !target.evented) ||\n      (target && !target.selectable && activeObject && activeObject !== target)\n    );\n  }\n\n  /**\n   * This method will take in consideration a modifier key pressed and the control we are\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\n   * This should be really in the realm of controls, and we should remove specific code for legacy\n   * embedded actions.\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\n   * @private\n   * @deprecated\n   * @param {FabricObject} target\n   * @param {string} action\n   * @param {boolean} altKey\n   * @returns {boolean} true if the transformation should be centered\n   */\n  private _shouldCenterTransform(\n    target: FabricObject,\n    action: string,\n    modifierKeyPressed: boolean,\n  ) {\n    if (!target) {\n      return;\n    }\n\n    let centerTransform;\n\n    if (\n      action === SCALE ||\n      action === SCALE_X ||\n      action === SCALE_Y ||\n      action === RESIZING\n    ) {\n      centerTransform = this.centeredScaling || target.centeredScaling;\n    } else if (action === ROTATE) {\n      centerTransform = this.centeredRotation || target.centeredRotation;\n    }\n\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\n  }\n\n  /**\n   * Given the control clicked, determine the origin of the transform.\n   * This is bad because controls can totally have custom names\n   * should disappear before release 4.0\n   * @private\n   * @deprecated\n   */\n  _getOriginFromCorner(\n    target: FabricObject,\n    controlName: string,\n  ): { x: TOriginX; y: TOriginY } {\n    const origin = {\n      x: target.originX,\n      y: target.originY,\n    };\n\n    if (!controlName) {\n      return origin;\n    }\n\n    // is a left control ?\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\n      origin.x = RIGHT;\n      // is a right control ?\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\n      origin.x = LEFT;\n    }\n    // is a top control ?\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\n      origin.y = BOTTOM;\n      // is a bottom control ?\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\n      origin.y = TOP;\n    }\n    return origin;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @param {FabricObject} target\n   * @param {boolean} [alreadySelected] pass true to setup the active control\n   */\n  _setupCurrentTransform(\n    e: TPointerEvent,\n    target: FabricObject,\n    alreadySelected: boolean,\n  ): void {\n    const pointer = target.group\n      ? // transform pointer to target's containing coordinate plane\n        sendPointToPlane(\n          this.getScenePoint(e),\n          undefined,\n          target.group.calcTransformMatrix(),\n        )\n      : this.getScenePoint(e);\n    const { key: corner = '', control } = target.getActiveControl() || {},\n      actionHandler =\n        alreadySelected && control\n          ? control.getActionHandler(e, target, control)?.bind(control)\n          : dragHandler,\n      action = getActionFromCorner(alreadySelected, corner, e, target),\n      altKey = e[this.centeredKey as ModifierKey],\n      origin = this._shouldCenterTransform(target, action, altKey)\n        ? ({ x: CENTER, y: CENTER } as const)\n        : this._getOriginFromCorner(target, corner),\n      /**\n       * relative to target's containing coordinate plane\n       * both agree on every point\n       **/\n      transform: Transform = {\n        target: target,\n        action,\n        actionHandler,\n        actionPerformed: false,\n        corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        theta: degreesToRadians(target.angle),\n        width: target.width,\n        height: target.height,\n        shiftKey: e.shiftKey,\n        altKey,\n        original: {\n          ...saveObjectTransform(target),\n          originX: origin.x,\n          originY: origin.y,\n        },\n      };\n\n    this._currentTransform = transform;\n\n    this.fire('before:transform', {\n      e,\n      transform,\n    });\n  }\n\n  /**\n   * Set the cursor type of the canvas element\n   * @param {String} value Cursor type of the canvas element.\n   * @see http://www.w3.org/TR/css3-ui/#cursor\n   */\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\n    this.upperCanvasEl.style.cursor = value;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\n   */\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\n      start = new Point(x, y).transform(this.viewportTransform),\n      extent = new Point(x + deltaX, y + deltaY).transform(\n        this.viewportTransform,\n      ),\n      strokeOffset = this.selectionLineWidth / 2;\n    let minX = Math.min(start.x, extent.x),\n      minY = Math.min(start.y, extent.y),\n      maxX = Math.max(start.x, extent.x),\n      maxY = Math.max(start.y, extent.y);\n\n    if (this.selectionColor) {\n      ctx.fillStyle = this.selectionColor;\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\n      return;\n    }\n    ctx.lineWidth = this.selectionLineWidth;\n    ctx.strokeStyle = this.selectionBorderColor;\n\n    minX += strokeOffset;\n    minY += strokeOffset;\n    maxX -= strokeOffset;\n    maxY -= strokeOffset;\n    // selection border\n    // @TODO: is _setLineDash still necessary on modern canvas?\n    FabricObject.prototype._setLineDash.call(\n      this,\n      ctx,\n      this.selectionDashArray,\n    );\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  /**\n   * Method that determines what object we are clicking on\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n   * or the outside part of the corner.\n   * @param {Event} e mouse event\n   * @return {FabricObject | null} the target found\n   */\n  findTarget(e: TPointerEvent): FabricObject | undefined {\n    if (this.skipTargetFind) {\n      return undefined;\n    }\n\n    const pointer = this.getViewportPoint(e),\n      activeObject = this._activeObject,\n      aObjects = this.getActiveObjects();\n\n    this.targets = [];\n\n    if (activeObject && aObjects.length >= 1) {\n      if (activeObject.findControl(pointer, isTouchEvent(e))) {\n        // if we hit the corner of the active object, let's return that.\n        return activeObject;\n      } else if (\n        aObjects.length > 1 &&\n        // check pointer is over active selection and possibly perform `subTargetCheck`\n        this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active selection does not select sub targets like normal groups\n        return activeObject;\n      } else if (\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active object is not an active selection\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          const subTargets = this.targets;\n          this.targets = [];\n          const target = this.searchPossibleTargets(this._objects, pointer);\n          if (\n            e[this.altSelectionKey as ModifierKey] &&\n            target &&\n            target !== activeObject\n          ) {\n            // alt selection: select active object even though it is not the top most target\n            // restore targets\n            this.targets = subTargets;\n            return activeObject;\n          }\n          return target;\n        }\n      }\n    }\n\n    return this.searchPossibleTargets(this._objects, pointer);\n  }\n\n  /**\n   * Checks if the point is inside the object selection area including padding\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point in scene coordinates\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\n    // getCoords will already take care of group de-nesting\n    let coords = obj.getCoords();\n    const viewportZoom = this.getZoom();\n    const padding = obj.padding / viewportZoom;\n    if (padding) {\n      const [tl, tr, br, bl] = coords;\n      // what is the angle of the object?\n      // we could use getTotalAngle, but is way easier to look at it\n      // from how coords are oriented, since if something went wrong\n      // at least we are consistent.\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\n        cosP = cos(angleRadians) * padding,\n        sinP = sin(angleRadians) * padding,\n        cosPSinP = cosP + sinP,\n        cosPMinusSinP = cosP - sinP;\n\n      coords = [\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\n      ];\n      // in case of padding we calculate the new coords on the fly.\n      // otherwise we have to maintain 2 sets of coordinates for everything.\n      // we can reiterate on storing them.\n      // if this is slow, for now the semplification is large and doesn't impact\n      // rendering.\n      // the idea behind this is that outside target check we don't need ot know\n      // where those coords are\n    }\n    return Intersection.isPointInPolygon(point, coords);\n  }\n\n  /**\n   * Checks point is inside the object selection condition. Either area with padding\n   * or over pixels if perPixelTargetFind is enabled\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point from viewport.\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\n    if (\n      obj &&\n      obj.visible &&\n      obj.evented &&\n      this._pointIsInObjectSelectionArea(\n        obj,\n        sendPointToPlane(pointer, undefined, this.viewportTransform),\n      )\n    ) {\n      if (\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\n        !(obj as unknown as IText).isEditing\n      ) {\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @param {Array} [objects] objects array to look into\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\n   * @private\n   */\n  _searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    // Cache all targets where their bounding box contains point.\n    let i = objects.length;\n    // Do not check for currently grouped objects, since we check the parent group itself.\n    // until we call this function specifically to search inside the activeGroup\n    while (i--) {\n      const target = objects[i];\n      if (this._checkTarget(target, pointer)) {\n        if (isCollection(target) && target.subTargetCheck) {\n          const subTarget = this._searchPossibleTargets(\n            target._objects as FabricObject[],\n            pointer,\n          );\n          subTarget && this.targets.push(subTarget);\n        }\n        return target;\n      }\n    }\n  }\n\n  /**\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @see {@link _searchPossibleTargets}\n   * @param {FabricObject[]} [objects] objects array to look into\n   * @param {Point} [pointer] coordinates from viewport to check.\n   * @return {FabricObject} **top most object on screen** that contains pointer\n   */\n  searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    const target = this._searchPossibleTargets(objects, pointer);\n\n    // if we found something in this.targets, and the group is interactive, return the innermost subTarget\n    // that is still interactive\n    // TODO: reverify why interactive. the target should be returned always, but selected only\n    // if interactive.\n    if (\n      target &&\n      isCollection(target) &&\n      target.interactive &&\n      this.targets[0]\n    ) {\n      /** targets[0] is the innermost nested target, but it could be inside non interactive groups and so not a selection target */\n      const targets = this.targets;\n      for (let i = targets.length - 1; i > 0; i--) {\n        const t = targets[i];\n        if (!(isCollection(t) && t.interactive)) {\n          // one of the subtargets was not interactive. that is the last subtarget we can return.\n          // we can't dig more deep;\n          return t;\n        }\n      }\n      return targets[0];\n    }\n\n    return target;\n  }\n\n  /**\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\n   * and it remains unchanged from the viewer's perspective.\n   *\n   * @example\n   * const scenePoint = sendPointToPlane(\n   *  this.getViewportPoint(e),\n   *  undefined,\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getViewportPoint(e: TPointerEvent) {\n    if (this._pointer) {\n      return this._pointer;\n    }\n    return this.getPointer(e, true);\n  }\n\n  /**\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\n   * however, from the viewer's perspective, the point is changed.\n   *\n   * @example\n   * const viewportPoint = sendPointToPlane(\n   *  this.getScenePoint(e),\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getScenePoint(e: TPointerEvent) {\n    if (this._absolutePointer) {\n      return this._absolutePointer;\n    }\n    return this.getPointer(e);\n  }\n\n  /**\n   * Returns pointer relative to canvas.\n   *\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\n   *\n   * @param {Event} e\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\n   * @return {Point}\n   */\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\n    const upperCanvasEl = this.upperCanvasEl,\n      bounds = upperCanvasEl.getBoundingClientRect();\n    let pointer = getPointer(e),\n      boundsWidth = bounds.width || 0,\n      boundsHeight = bounds.height || 0;\n\n    if (!boundsWidth || !boundsHeight) {\n      if (TOP in bounds && BOTTOM in bounds) {\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\n      }\n      if (RIGHT in bounds && LEFT in bounds) {\n        boundsWidth = Math.abs(bounds.right - bounds.left);\n      }\n    }\n\n    this.calcOffset();\n    pointer.x = pointer.x - this._offset.left;\n    pointer.y = pointer.y - this._offset.top;\n    if (!fromViewport) {\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\n    }\n\n    const retinaScaling = this.getRetinaScaling();\n    if (retinaScaling !== 1) {\n      pointer.x /= retinaScaling;\n      pointer.y /= retinaScaling;\n    }\n\n    // If bounds are not available (i.e. not visible), do not apply scale.\n    const cssScale =\n      boundsWidth === 0 || boundsHeight === 0\n        ? new Point(1, 1)\n        : new Point(\n            upperCanvasEl.width / boundsWidth,\n            upperCanvasEl.height / boundsHeight,\n          );\n\n    return pointer.multiply(cssScale);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: TSize,\n    options?: TCanvasSizeOptions,\n  ) {\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\n    this._resetTransformEventData();\n    super._setDimensionsImpl(dimensions, options);\n    if (this._isCurrentlyDrawing) {\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\n    }\n  }\n\n  protected _createCacheCanvas() {\n    this.pixelFindCanvasEl = createCanvasElement();\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\n      willReadFrequently: true,\n    })!;\n    this.setTargetFindTolerance(this.targetFindTolerance);\n  }\n\n  /**\n   * Returns context of top canvas where interactions are drawn\n   * @returns {CanvasRenderingContext2D}\n   */\n  getTopContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns context of canvas where object selection is drawn\n   * @alias\n   * @return {CanvasRenderingContext2D}\n   */\n  getSelectionContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns &lt;canvas> element on which object selection is drawn\n   * @return {HTMLCanvasElement}\n   */\n  getSelectionElement(): HTMLCanvasElement {\n    return this.elements.upper.el;\n  }\n\n  /**\n   * Returns currently active object\n   * @return {FabricObject | null} active object\n   */\n  getActiveObject(): FabricObject | undefined {\n    return this._activeObject;\n  }\n\n  /**\n   * Returns an array with the current selected objects\n   * @return {FabricObject[]} active objects array\n   */\n  getActiveObjects(): FabricObject[] {\n    const active = this._activeObject;\n    return isActiveSelection(active)\n      ? active.getObjects()\n      : active\n        ? [active]\n        : [];\n  }\n\n  /**\n   * @private\n   * Compares the old activeObject with the current one and fires correct events\n   * @param {FabricObject[]} oldObjects old activeObject\n   * @param {TPointerEvent} e mouse event triggering the selection events\n   */\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\n    let somethingChanged = false,\n      invalidate = false;\n    const objects = this.getActiveObjects(),\n      added: FabricObject[] = [],\n      removed: FabricObject[] = [];\n\n    oldObjects.forEach((target) => {\n      if (!objects.includes(target)) {\n        somethingChanged = true;\n        target.fire('deselected', {\n          e,\n          target,\n        });\n        removed.push(target);\n      }\n    });\n\n    objects.forEach((target) => {\n      if (!oldObjects.includes(target)) {\n        somethingChanged = true;\n        target.fire('selected', {\n          e,\n          target,\n        });\n        added.push(target);\n      }\n    });\n\n    if (oldObjects.length > 0 && objects.length > 0) {\n      invalidate = true;\n      somethingChanged &&\n        this.fire('selection:updated', {\n          e,\n          selected: added,\n          deselected: removed,\n        });\n    } else if (objects.length > 0) {\n      invalidate = true;\n      this.fire('selection:created', {\n        e,\n        selected: added,\n      });\n    } else if (oldObjects.length > 0) {\n      invalidate = true;\n      this.fire('selection:cleared', {\n        e,\n        deselected: removed,\n      });\n    }\n    invalidate && (this._objectsToRender = undefined);\n  }\n\n  /**\n   * Sets given object as the only active object on canvas\n   * @param {FabricObject} object Object to set as an active one\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\n    const currentActives = this.getActiveObjects();\n    const selected = this._setActiveObject(object, e);\n    this._fireSelectionEvents(currentActives, e);\n    return selected;\n  }\n\n  /**\n   * This is supposed to be equivalent to setActiveObject but without firing\n   * any event. There is commitment to have this stay this way.\n   * This is the functional part of setActiveObject.\n   * @param {Object} object to set as active\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    const prevActiveObject = this._activeObject;\n    if (prevActiveObject === object) {\n      return false;\n    }\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\n      // refused to deselect\n      return false;\n    }\n    if (object.onSelect({ e })) {\n      return false;\n    }\n\n    this._activeObject = object;\n\n    if (isActiveSelection(object) && prevActiveObject !== object) {\n      object.set('canvas', this);\n    }\n    object.setCoords();\n\n    return true;\n  }\n\n  /**\n   * This is supposed to be equivalent to discardActiveObject but without firing\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\n   * This is the functional part of discardActiveObject.\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n   * @param {Object} object the next object to set as active, reason why we are discarding this\n   * @return {Boolean} true if the active object has been discarded\n   */\n  _discardActiveObject(\n    e?: TPointerEvent,\n    object?: FabricObject,\n  ): this is { _activeObject: undefined } {\n    const obj = this._activeObject;\n    if (obj) {\n      // onDeselect return TRUE to cancel selection;\n      if (obj.onDeselect({ e, object })) {\n        return false;\n      }\n      if (this._currentTransform && this._currentTransform.target === obj) {\n        this.endCurrentTransform(e);\n      }\n      if (isActiveSelection(obj) && obj === this._hoveredTarget) {\n        this._hoveredTarget = undefined;\n      }\n      this._activeObject = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Discards currently active object and fire events. If the function is called by fabric\n   * as a consequence of a mouse event, the event is passed as a parameter and\n   * sent to the fire function for the custom events. When used as a method the\n   * e param does not have any application.\n   * @param {event} e\n   * @return {Boolean} true if the active object has been discarded\n   */\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\n    const currentActives = this.getActiveObjects(),\n      activeObject = this.getActiveObject();\n    if (currentActives.length) {\n      this.fire('before:selection:cleared', {\n        e,\n        deselected: [activeObject!],\n      });\n    }\n    const discarded = this._discardActiveObject(e);\n    this._fireSelectionEvents(currentActives, e);\n    return discarded;\n  }\n\n  /**\n   * End the current transform.\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\n   * because of some other event ( a press of key combination, or something that block the user UX )\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  endCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform;\n    this._finalizeCurrentTransform(e);\n    if (transform && transform.target) {\n      // this could probably go inside _finalizeCurrentTransform\n      transform.target.isMoving = false;\n    }\n    this._currentTransform = null;\n  }\n\n  /**\n   * @private\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  _finalizeCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform!,\n      target = transform.target,\n      options = {\n        e,\n        target,\n        transform,\n        action: transform.action,\n      };\n\n    if (target._scaling) {\n      target._scaling = false;\n    }\n\n    target.setCoords();\n\n    if (transform.actionPerformed) {\n      this.fire('object:modified', options);\n      target.fire(MODIFIED, options);\n    }\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    super.setViewportTransform(vpt);\n    const activeObject = this._activeObject;\n    if (activeObject) {\n      activeObject.setCoords();\n    }\n  }\n\n  /**\n   * @override clears active selection ref and interactive canvas elements and contexts\n   */\n  destroy() {\n    // dispose of active selection\n    const activeObject = this._activeObject;\n    if (isActiveSelection(activeObject)) {\n      activeObject.removeAll();\n      activeObject.dispose();\n    }\n\n    delete this._activeObject;\n\n    super.destroy();\n\n    // free resources\n\n    // pixel find canvas\n    // @ts-expect-error disposing\n    this.pixelFindContext = null;\n    // @ts-expect-error disposing\n    this.pixelFindCanvasEl = undefined;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    // discard active object and fire events\n    this.discardActiveObject();\n    // make sure we clear the active object in case it refused to be discarded\n    this._activeObject = undefined;\n    this.clearContext(this.contextTop);\n    super.clear();\n  }\n\n  /**\n   * Draws objects' controls (borders/controls)\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\n   */\n  drawControls(ctx: CanvasRenderingContext2D) {\n    const activeObject = this._activeObject;\n\n    if (activeObject) {\n      activeObject._renderControls(ctx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: 'toObject' | 'toDatalessObject',\n    propertiesToInclude: string[],\n  ): Record<string, any> {\n    // If the object is part of the current selection group, it should\n    // be transformed appropriately\n    // i.e. it should be serialised as it would appear if the selection group\n    // were to be destroyed.\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\n      object = super._toObject(instance, methodName, propertiesToInclude);\n    //Undo the damage we did by changing all of its properties\n    instance.set(originalProperties);\n    return object;\n  }\n\n  /**\n   * Realizes an object's group transformation on it\n   * @private\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\n   * @returns the original values of instance which were changed\n   */\n  private _realizeGroupTransformOnObject(\n    instance: FabricObject,\n  ): Partial<typeof instance> {\n    const { group } = instance;\n    if (group && isActiveSelection(group) && this._activeObject === group) {\n      const layoutProps = [\n        'angle',\n        'flipX',\n        'flipY',\n        LEFT,\n        SCALE_X,\n        SCALE_Y,\n        SKEW_X,\n        SKEW_Y,\n        TOP,\n      ] as (keyof typeof instance)[];\n      const originalValues = pick<typeof instance>(instance, layoutProps);\n      addTransformToObject(instance, group.calcOwnMatrix());\n      return originalValues;\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    // If the object is in a selection group, simulate what would happen to that\n    // object when the group is deselected\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\n    super._setSVGObject(markup, instance, reviver);\n    instance.set(originalProperties);\n  }\n}\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\nimport type { TOptions } from '../typedefs';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\n\nexport interface CanvasTransformOptions {\n  /**\n   * When true, objects can be transformed by one side (unproportionately)\n   * when dragged on the corners that normally would not do that.\n   * @type Boolean\n   * @default\n   * @since fabric 4.0 // changed name and default value\n   */\n  uniformScaling: boolean;\n\n  /**\n   * Indicates which key switches uniform scaling.\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * totally wrong named. this sounds like `uniform scaling`\n   * if Canvas.uniformScaling is true, pressing this will set it to false\n   * and viceversa.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  uniScaleKey: TOptionalModifierKey;\n\n  /**\n   * When true, objects use center point as the origin of scale transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredScaling: boolean;\n\n  /**\n   * When true, objects use center point as the origin of rotate transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredRotation: boolean;\n\n  /**\n   * Indicates which key enable centered Transform\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  centeredKey: TOptionalModifierKey;\n\n  /**\n   * Indicates which key enable alternate action on corner\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  altActionKey: TOptionalModifierKey;\n}\n\nexport interface CanvasSelectionOptions {\n  /**\n   * Indicates whether group selection should be enabled\n   * @type Boolean\n   * @default\n   */\n  selection: boolean;\n\n  /**\n   * Indicates which key or keys enable multiple click selection\n   * Pass value as a string or array of strings\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or empty or containing any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.2\n   * @type ModifierKey|ModifierKey[]\n   * @default\n   */\n  selectionKey: TOptionalModifierKey | ModifierKey[];\n\n  /**\n   * Indicates which key enable alternative selection\n   * in case of target overlapping with active object\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * For a series of reason that come from the general expectations on how\n   * things should work, this feature works only for preserveObjectStacking true.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.5\n   * @type null|ModifierKey\n   * @default\n   */\n  altSelectionKey: TOptionalModifierKey;\n\n  /**\n   * Color of selection\n   * @type String\n   * @default\n   */\n  selectionColor: string;\n\n  /**\n   * Default dash array pattern\n   * If not empty the selection border is dashed\n   * @type Array\n   */\n  selectionDashArray: number[];\n\n  /**\n   * Color of the border of selection (usually slightly darker than color of selection itself)\n   * @type String\n   * @default\n   */\n  selectionBorderColor: string;\n\n  /**\n   * Width of a line used in object/group selection\n   * @type Number\n   * @default\n   */\n  selectionLineWidth: number;\n\n  /**\n   * Select only shapes that are fully contained in the dragged selection rectangle.\n   * @type Boolean\n   * @default\n   */\n  selectionFullyContained: boolean;\n}\n\nexport interface CanvasCursorOptions {\n  /**\n   * Default cursor value used when hovering over an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  hoverCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used when moving an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  moveCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used for the entire canvas\n   * @type String\n   * @default default\n   */\n  defaultCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used during free drawing\n   * @type String\n   * @default crosshair\n   */\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used for disabled elements ( corners with disabled action )\n   * @type String\n   * @since 2.0.0\n   * @default not-allowed\n   */\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\n}\n\nexport interface TargetFindOptions {\n  /**\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n   * @type Boolean\n   * @default\n   */\n  perPixelTargetFind: boolean;\n\n  /**\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\n   * @type Number\n   * @default\n   */\n  targetFindTolerance: number;\n\n  /**\n   * When true, target detection is skipped. Target detection will return always undefined.\n   * click selection won't work anymore, events will fire with no targets.\n   * if something is selected before setting it to true, it will be deselected at the first click.\n   * area selection will still work. check the `selection` property too.\n   * if you deactivate both, you should look into staticCanvas.\n   * @type Boolean\n   * @default\n   */\n  skipTargetFind: boolean;\n}\n\nexport interface CanvasEventsOptions {\n  /**\n   * Indicates if the right click on canvas can output the context menu or not\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  stopContextMenu: boolean;\n\n  /**\n   * Indicates if the canvas can fire right click events\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  fireRightClick: boolean;\n\n  /**\n   * Indicates if the canvas can fire middle click events\n   * @type Boolean\n   * @since 1.7.8\n   * @default\n   */\n  fireMiddleClick: boolean;\n\n  /**\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\n   * @type Boolean\n   * @default\n   */\n  enablePointerEvents: boolean;\n}\n\nexport interface CanvasOptions\n  extends StaticCanvasOptions,\n    CanvasTransformOptions,\n    CanvasSelectionOptions,\n    CanvasCursorOptions,\n    TargetFindOptions,\n    CanvasEventsOptions {\n  /**\n   * Default element class that's given to wrapper (div) element of canvas\n   * @type String\n   * @default\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\n   */\n  containerClass: string;\n\n  /**\n   * Indicates whether objects should remain in current stack position when selected.\n   * When false objects are brought to top and rendered as part of the selection group\n   * @type Boolean\n   * @default\n   */\n  preserveObjectStacking: boolean;\n}\n\nexport type TCanvasOptions = TOptions<CanvasOptions>;\n\nexport const canvasDefaults: TOptions<CanvasOptions> = {\n  uniformScaling: true,\n  uniScaleKey: 'shiftKey',\n  centeredScaling: false,\n  centeredRotation: false,\n  centeredKey: 'altKey',\n  altActionKey: 'shiftKey',\n\n  selection: true,\n  selectionKey: 'shiftKey',\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\n  selectionDashArray: [],\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n  selectionLineWidth: 1,\n  selectionFullyContained: false,\n\n  hoverCursor: 'move',\n  moveCursor: 'move',\n  defaultCursor: 'default',\n  freeDrawingCursor: 'crosshair',\n  notAllowedCursor: 'not-allowed',\n\n  perPixelTargetFind: false,\n  targetFindTolerance: 0,\n  skipTargetFind: false,\n\n  stopContextMenu: false,\n  fireRightClick: false,\n  fireMiddleClick: false,\n  enablePointerEvents: false,\n\n  containerClass: 'canvas-container',\n\n  preserveObjectStacking: false,\n};\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\nimport { removeFromArray } from '../util/internals/removeFromArray';\nimport type { Canvas } from './Canvas';\n\n/**\n * In charge of synchronizing all interactive text instances of a canvas\n */\nexport class TextEditingManager {\n  private targets: ITextBehavior[] = [];\n  private declare target?: ITextBehavior;\n  private __disposer: VoidFunction;\n\n  constructor(canvas: Canvas) {\n    const cb = () => {\n      const { hiddenTextarea } =\n        (canvas.getActiveObject() as ITextBehavior) || {};\n      hiddenTextarea && hiddenTextarea.focus();\n    };\n    const el = canvas.upperCanvasEl;\n    el.addEventListener('click', cb);\n    this.__disposer = () => el.removeEventListener('click', cb);\n  }\n\n  exitTextEditing() {\n    this.target = undefined;\n    this.targets.forEach((target) => {\n      if (target.isEditing) {\n        target.exitEditing();\n      }\n    });\n  }\n\n  add(target: ITextBehavior) {\n    this.targets.push(target);\n  }\n\n  remove(target: ITextBehavior) {\n    this.unregister(target);\n    removeFromArray(this.targets, target);\n  }\n\n  register(target: ITextBehavior) {\n    this.target = target;\n  }\n\n  unregister(target: ITextBehavior) {\n    if (target === this.target) {\n      this.target = undefined;\n    }\n  }\n\n  onMouseMove(e: TPointerEvent) {\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\n  }\n\n  clear() {\n    this.targets = [];\n    this.target = undefined;\n  }\n\n  dispose() {\n    this.clear();\n    this.__disposer();\n    // @ts-expect-error disposing\n    delete this.__disposer;\n  }\n}\n","import { classRegistry } from '../ClassRegistry';\nimport { NONE } from '../constants';\nimport type {\n  CanvasEvents,\n  DragEventData,\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventNames,\n  Transform,\n} from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\nimport type { Group } from '../shapes/Group';\nimport type { IText } from '../shapes/IText/IText';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { isActiveSelection } from '../util/typeAssertions';\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\nimport { SelectableCanvas } from './SelectableCanvas';\nimport { TextEditingManager } from './TextEditingManager';\n\nconst addEventOptions = { passive: false } as EventListenerOptions;\n\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\n  const viewportPoint = canvas.getViewportPoint(e);\n  const scenePoint = canvas.getScenePoint(e);\n  return {\n    viewportPoint,\n    scenePoint,\n    pointer: viewportPoint,\n    absolutePointer: scenePoint,\n  };\n};\n\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\n// few bytes but why give it away.\nconst addListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['addEventListener']>\n) => el.addEventListener(...args);\nconst removeListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['removeEventListener']>\n) => el.removeEventListener(...args);\n\nconst syntheticEventConfig = {\n  mouse: {\n    in: 'over',\n    out: 'out',\n    targetIn: 'mouseover',\n    targetOut: 'mouseout',\n    canvasIn: 'mouse:over',\n    canvasOut: 'mouse:out',\n  },\n  drag: {\n    in: 'enter',\n    out: 'leave',\n    targetIn: 'dragenter',\n    targetOut: 'dragleave',\n    canvasIn: 'drag:enter',\n    canvasOut: 'drag:leave',\n  },\n} as const;\n\ntype TSyntheticEventContext = {\n  mouse: { e: TPointerEvent };\n  drag: DragEventData;\n};\n\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\n  /**\n   * Contains the id of the touch event that owns the fabric transform\n   * @type Number\n   * @private\n   */\n  declare mainTouchId?: number;\n\n  declare enablePointerEvents: boolean;\n\n  /**\n   * Holds a reference to a setTimeout timer for event synchronization\n   * @type number\n   * @private\n   */\n  private declare _willAddMouseDown: number;\n\n  /**\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\n   * @type FabricObject\n   * @private\n   */\n  private declare _draggedoverTarget?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas from where the drag operation started\n   * @type FabricObject\n   * @private\n   */\n  private declare _dragSource?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas that is the current drop target\n   * May differ from {@link _draggedoverTarget}\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\n   * @type FabricObject\n   * @private\n   */\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\n\n  private _isClick: boolean;\n\n  textEditingManager = new TextEditingManager(this);\n\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\n    super(el, options);\n    // bind event handlers\n    (\n      [\n        '_onMouseDown',\n        '_onTouchStart',\n        '_onMouseMove',\n        '_onMouseUp',\n        '_onTouchEnd',\n        '_onResize',\n        // '_onGesture',\n        // '_onDrag',\n        // '_onShake',\n        // '_onLongPress',\n        // '_onOrientationChange',\n        '_onMouseWheel',\n        '_onMouseOut',\n        '_onMouseEnter',\n        '_onContextMenu',\n        '_onDoubleClick',\n        '_onDragStart',\n        '_onDragEnd',\n        '_onDragProgress',\n        '_onDragOver',\n        '_onDragEnter',\n        '_onDragLeave',\n        '_onDrop',\n      ] as (keyof this)[]\n    ).forEach((eventHandler) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\n    });\n    // register event handlers\n    this.addOrRemove(addListener, 'add');\n  }\n\n  /**\n   * return an event prefix pointer or mouse.\n   * @private\n   */\n  private _getEventPrefix() {\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\n  }\n\n  addOrRemove(functor: any, _eventjsFunctor: 'add' | 'remove') {\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    functor(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove,\n      addEventOptions,\n    );\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\n    functor(canvasElement, 'wheel', this._onMouseWheel);\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\n    functor(canvasElement, 'dblclick', this._onDoubleClick);\n    functor(canvasElement, 'dragstart', this._onDragStart);\n    functor(canvasElement, 'dragend', this._onDragEnd);\n    functor(canvasElement, 'dragover', this._onDragOver);\n    functor(canvasElement, 'dragenter', this._onDragEnter);\n    functor(canvasElement, 'dragleave', this._onDragLeave);\n    functor(canvasElement, 'drop', this._onDrop);\n    if (!this.enablePointerEvents) {\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n    }\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n    //   eventjs[eventjsFunctor](\n    //     canvasElement,\n    //     'orientation',\n    //     this._onOrientationChange\n    //   );\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n    // }\n  }\n\n  /**\n   * Removes all event listeners, used when disposing the instance\n   */\n  removeListeners() {\n    this.addOrRemove(removeListener, 'remove');\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      `${eventTypePrefix}up`,\n      this._onMouseUp as EventListener,\n    );\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    clearTimeout(this._willAddMouseDown);\n  }\n\n  /**\n   * @private\n   * @param {Event} [e] Event object fired on wheel event\n   */\n  private _onMouseWheel(e: MouseEvent) {\n    this.__onMouseWheel(e);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onMouseOut(e: TPointerEvent) {\n    const target = this._hoveredTarget;\n    const shared = {\n      e,\n      ...getEventPoints(this, e),\n    };\n    this.fire('mouse:out', { ...shared, target });\n    this._hoveredTarget = undefined;\n    target && target.fire('mouseout', { ...shared });\n    this._hoveredTargets.forEach((nestedTarget) => {\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\n    });\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseenter\n   */\n  private _onMouseEnter(e: TPointerEvent) {\n    // This find target and consequent 'mouse:over' is used to\n    // clear old instances on hovered target.\n    // calling findTarget has the side effect of killing target.__corner.\n    // as a short term fix we are not firing this if we are currently transforming.\n    // as a long term fix we need to separate the action of finding a target with the\n    // side effects we added to it.\n    if (!this._currentTransform && !this.findTarget(e)) {\n      this.fire('mouse:over', {\n        e,\n        ...getEventPoints(this, e),\n      });\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n  }\n\n  /**\n   * supports native like text dragging\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragStart(e: DragEvent) {\n    this._isClick = false;\n    const activeObject = this.getActiveObject();\n    if (activeObject && activeObject.onDragStart(e)) {\n      this._dragSource = activeObject;\n      const options = { e, target: activeObject };\n      this.fire('dragstart', options);\n      activeObject.fire('dragstart', options);\n      addListener(\n        this.upperCanvasEl,\n        'drag',\n        this._onDragProgress as EventListener,\n      );\n      return;\n    }\n    stopEvent(e);\n  }\n\n  /**\n   * First we clear top context where the effects are being rendered.\n   * Then we render the effects.\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\n   * @private\n   */\n  private _renderDragEffects(\n    e: DragEvent,\n    source?: FabricObject,\n    target?: FabricObject,\n  ) {\n    let dirty = false;\n    // clear top context\n    const dropTarget = this._dropTarget;\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\n      dropTarget.clearContextTop();\n      dirty = true;\n    }\n    source?.clearContextTop();\n    target !== source && target?.clearContextTop();\n    // render effects\n    const ctx = this.contextTop;\n    ctx.save();\n    ctx.transform(...this.viewportTransform);\n    if (source) {\n      ctx.save();\n      source.transform(ctx);\n      source.renderDragSourceEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    if (target) {\n      ctx.save();\n      target.transform(ctx);\n      target.renderDropTargetEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    ctx.restore();\n    dirty && (this.contextTopDirty = true);\n  }\n\n  /**\n   * supports native like text dragging\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragEnd(e: DragEvent) {\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\n      dropTarget = didDrop ? this._activeObject : undefined,\n      options = {\n        e,\n        target: this._dragSource as FabricObject,\n        subTargets: this.targets,\n        dragSource: this._dragSource as FabricObject,\n        didDrop,\n        dropTarget: dropTarget as FabricObject,\n      };\n    removeListener(\n      this.upperCanvasEl,\n      'drag',\n      this._onDragProgress as EventListener,\n    );\n    this.fire('dragend', options);\n    this._dragSource && this._dragSource.fire('dragend', options);\n    delete this._dragSource;\n    // we need to call mouse up synthetically because the browser won't\n    this._onMouseUp(e);\n  }\n\n  /**\n   * fire `drag` event on canvas and drag source\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragProgress(e: DragEvent) {\n    const options = {\n      e,\n      target: this._dragSource as FabricObject | undefined,\n      dragSource: this._dragSource as FabricObject | undefined,\n      dropTarget: this._draggedoverTarget as FabricObject,\n    };\n    this.fire('drag', options);\n    this._dragSource && this._dragSource.fire('drag', options);\n  }\n\n  /**\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\n   * Override at will\n   */\n  protected findDragTargets(e: DragEvent) {\n    this.targets = [];\n    const target = this._searchPossibleTargets(\n      this._objects,\n      this.getViewportPoint(e),\n    );\n    return {\n      target,\n      targets: [...this.targets],\n    };\n  }\n\n  /**\n   * prevent default to allow drop event to be fired\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n   * @private\n   * @param {DragEvent} [e] Event object fired on Event.js shake\n   */\n  private _onDragOver(e: DragEvent) {\n    const eventType = 'dragover';\n    const { target, targets } = this.findDragTargets(e);\n    const dragSource = this._dragSource as FabricObject;\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource,\n      canDrop: false,\n      dropTarget: undefined,\n    };\n    let dropTarget;\n    //  fire on canvas\n    this.fire(eventType, options);\n    //  make sure we fire dragenter events before dragover\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\n    this._fireEnterLeaveEvents(target, options);\n    if (target) {\n      if (target.canDrop(e)) {\n        dropTarget = target;\n      }\n      target.fire(eventType, options);\n    }\n    //  propagate the event to subtargets\n    for (let i = 0; i < targets.length; i++) {\n      const subTarget = targets[i];\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\n      // TODO: verify if those should loop in inverse order then?\n      // what is the order of subtargets?\n      if (subTarget.canDrop(e)) {\n        dropTarget = subTarget;\n      }\n      subTarget.fire(eventType, options);\n    }\n    //  render drag effects now that relations between source and target is clear\n    this._renderDragEffects(e, dragSource, dropTarget);\n    this._dropTarget = dropTarget;\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragEnter(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragenter', options);\n    //  fire dragenter on targets\n    this._fireEnterLeaveEvents(target, options);\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragLeave(e: DragEvent) {\n    const options = {\n      e,\n      target: this._draggedoverTarget,\n      subTargets: this.targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragleave', options);\n\n    //  fire dragleave on targets\n    this._fireEnterLeaveEvents(undefined, options);\n    this._renderDragEffects(e, this._dragSource);\n    this._dropTarget = undefined;\n    //  clear targets\n    this.targets = [];\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * `drop:before` is a an event that allows you to schedule logic\n   * before the `drop` event. Prefer `drop` event always, but if you need\n   * to run some drop-disabling logic on an event, since there is no way\n   * to handle event handlers ordering, use `drop:before`\n   * @private\n   * @param {Event} e\n   */\n  private _onDrop(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = this._basicEventHandler('drop:before', {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n      ...getEventPoints(this, e),\n    });\n    //  will be set by the drop target\n    options.didDrop = false;\n    //  will be set by the drop target, used in case options.target refuses the drop\n    options.dropTarget = undefined;\n    //  fire `drop`\n    this._basicEventHandler('drop', options);\n    //  inform canvas of the drop\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\n    //  use for side effects\n    this.fire('drop:after', options);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onContextMenu(e: TPointerEvent): false {\n    const target = this.findTarget(e),\n      subTargets = this.targets || [];\n    const options = this._basicEventHandler('contextmenu:before', {\n      e,\n      target,\n      subTargets,\n    });\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\n    this.stopContextMenu && stopEvent(e);\n    this._basicEventHandler('contextmenu', options);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onDoubleClick(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'dblclick');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Return a the id of an event.\n   * returns either the pointerId or the identifier or 0 for the mouse event\n   * @private\n   * @param {Event} evt Event object\n   */\n  getPointerId(evt: TouchEvent | PointerEvent): number {\n    const changedTouches = (evt as TouchEvent).changedTouches;\n\n    if (changedTouches) {\n      return changedTouches[0] && changedTouches[0].identifier;\n    }\n\n    if (this.enablePointerEvents) {\n      return (evt as PointerEvent).pointerId;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines if an event has the id of the event that is considered main\n   * @private\n   * @param {evt} event Event object\n   */\n  _isMainEvent(evt: TPointerEvent): boolean {\n    if ((evt as PointerEvent).isPrimary === true) {\n      return true;\n    }\n    if ((evt as PointerEvent).isPrimary === false) {\n      return false;\n    }\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\n      return true;\n    }\n    if ((evt as TouchEvent).changedTouches) {\n      return (\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchStart(e: TouchEvent) {\n    // we will prevent scrolling if allowTouchScrolling is not enabled and\n    let shouldPreventScrolling = !this.allowTouchScrolling;\n    const currentActiveObject = this._activeObject;\n    if (this.mainTouchId === undefined) {\n      this.mainTouchId = this.getPointerId(e);\n    }\n    this.__onMouseDown(e);\n    // after executing fabric logic for mouse down let's see\n    // if we didn't change target or if we are drawing\n    // we want to prevent scrolling anyway\n    if (\n      this.isDrawingMode ||\n      (currentActiveObject && this._target === currentActiveObject)\n    ) {\n      shouldPreventScrolling = true;\n    }\n    // prevent default, will block scrolling from start\n    shouldPreventScrolling && e.preventDefault();\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    // if we scroll don't register the touch move event\n    shouldPreventScrolling &&\n      addListener(\n        doc,\n        'touchmove',\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    // Unbind mousedown to prevent double triggers from touch devices\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}down`,\n      this._onMouseDown as EventListener,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDown(e: TPointerEvent) {\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\n    addListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchEnd(e: TouchEvent) {\n    if (e.touches.length > 0) {\n      // if there are still touches stop here\n      return;\n    }\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    delete this.mainTouchId;\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    if (this._willAddMouseDown) {\n      clearTimeout(this._willAddMouseDown);\n    }\n    this._willAddMouseDown = setTimeout(() => {\n      // Wait 400ms before rebinding mousedown to prevent double triggers\n      // from touch devices\n      addListener(\n        this.upperCanvasEl,\n        `${eventTypePrefix}down`,\n        this._onMouseDown as EventListener,\n      );\n      this._willAddMouseDown = 0;\n    }, 400) as unknown as number;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUp(e: TPointerEvent) {\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    if (this._isMainEvent(e)) {\n      const doc = getDocumentFromElement(this.upperCanvasEl);\n      removeListener(\n        doc,\n        `${eventTypePrefix}up`,\n        this._onMouseUp as EventListener,\n      );\n      removeListener(\n        doc,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n      addListener(\n        canvasElement,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMove(e: TPointerEvent) {\n    const activeObject = this.getActiveObject();\n    !this.allowTouchScrolling &&\n      (!activeObject ||\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\n        // we must not prevent the event's default behavior in order for the window to start dragging\n        !activeObject.shouldStartDragging(e)) &&\n      e.preventDefault &&\n      e.preventDefault();\n    this.__onMouseMove(e);\n  }\n\n  /**\n   * @private\n   */\n  _onResize() {\n    this.calcOffset();\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n   * @private\n   * @param {Object} target\n   */\n  _shouldRender(target: FabricObject | undefined) {\n    const activeObject = this.getActiveObject();\n    // if just one of them is available or if they are both but are different objects\n    // this covers: switch of target, from target to no target, selection of target\n    // multiSelection with key and mouse\n    return (\n      !!activeObject !== !!target ||\n      (activeObject && target && activeObject !== target)\n    );\n  }\n\n  /**\n   * Method that defines the actions when mouse is released on canvas.\n   * The method resets the currentTransform parameters, store the image corner\n   * position in the image object and render the canvas on top.\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseUp(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'up:before');\n\n    const transform = this._currentTransform;\n    const isClick = this._isClick;\n    const target = this._target;\n\n    // if right/middle click just fire events and return\n    // target undefined will make the _handleEvent search the target\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'up');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this._onMouseUpInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n    let shouldRender = false;\n    if (transform) {\n      this._finalizeCurrentTransform(e);\n      shouldRender = transform.actionPerformed;\n    }\n    if (!isClick) {\n      const targetWasActive = target === this._activeObject;\n      this.handleSelection(e);\n      if (!shouldRender) {\n        shouldRender =\n          this._shouldRender(target) ||\n          (!targetWasActive && target === this._activeObject);\n      }\n    }\n    let pointer, corner;\n    if (target) {\n      const found = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      const { key, control } = found || {};\n      corner = key;\n      if (\n        target.selectable &&\n        target !== this._activeObject &&\n        target.activeOn === 'up'\n      ) {\n        this.setActiveObject(target, e);\n        shouldRender = true;\n      } else if (control) {\n        const mouseUpHandler = control.getMouseUpHandler(e, target, control);\n        if (mouseUpHandler) {\n          pointer = this.getScenePoint(e);\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\n        }\n      }\n      target.isMoving = false;\n    }\n    // if we are ending up a transform on a different control or a new object\n    // fire the original mouse up from the corner that started the transform\n    if (\n      transform &&\n      (transform.target !== target || transform.corner !== corner)\n    ) {\n      const originalControl =\n          transform.target && transform.target.controls[transform.corner],\n        originalMouseUpHandler =\n          originalControl &&\n          originalControl.getMouseUpHandler(\n            e,\n            transform.target,\n            originalControl,\n          );\n      pointer = pointer || this.getScenePoint(e);\n      originalMouseUpHandler &&\n        originalMouseUpHandler.call(\n          originalControl,\n          e,\n          transform,\n          pointer.x,\n          pointer.y,\n        );\n    }\n    this._setCursorFromEvent(e, target);\n    this._handleEvent(e, 'up');\n    this._groupSelector = null;\n    this._currentTransform = null;\n    // reset the target information about which corner is selected\n    target && (target.__corner = undefined);\n    if (shouldRender) {\n      this.requestRenderAll();\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\n      this.renderTop();\n    }\n  }\n\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\n    eventType: T,\n    options: (CanvasEvents & ObjectEvents)[T],\n  ) {\n    const { target, subTargets = [] } = options as {\n      target?: FabricObject;\n      subTargets: FabricObject[];\n    };\n    this.fire(eventType, options);\n    target && target.fire(eventType, options);\n    for (let i = 0; i < subTargets.length; i++) {\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\n    }\n    return options;\n  }\n\n  /**\n   * @private\n   * Handle event firing for target and subtargets\n   * @param {TPointerEvent} e event from mouse\n   * @param {TPointerEventNames} eventType\n   */\n  _handleEvent<T extends TPointerEventNames>(e: TPointerEvent, eventType: T) {\n    const target = this._target,\n      targets = this.targets || [],\n      options: CanvasEvents[`mouse:${T}`] = {\n        e,\n        target,\n        subTargets: targets,\n        ...getEventPoints(this, e),\n        transform: this._currentTransform,\n        ...(eventType === 'up:before' || eventType === 'up'\n          ? {\n              isClick: this._isClick,\n              currentTarget: this.findTarget(e),\n              // set by the preceding `findTarget` call\n              currentSubTargets: this.targets,\n            }\n          : {}),\n      } as CanvasEvents[`mouse:${T}`];\n    this.fire(`mouse:${eventType}`, options);\n    // this may be a little be more complicated of what we want to handle\n    target && target.fire(`mouse${eventType}`, options);\n    for (let i = 0; i < targets.length; i++) {\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\n    this._isCurrentlyDrawing = true;\n    if (this.getActiveObject()) {\n      this.discardActiveObject(e);\n      this.requestRenderAll();\n    }\n    // TODO: this is a scene point so it should be renamed\n    const pointer = this.getScenePoint(e);\n    this.freeDrawingBrush &&\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\n    this._handleEvent(e, 'down');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\n    if (this._isCurrentlyDrawing) {\n      const pointer = this.getScenePoint(e);\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e,\n          // this is an absolute pointer, the naming is wrong\n          pointer,\n        });\n    }\n    this.setCursor(this.freeDrawingCursor);\n    this._handleEvent(e, 'move');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\n    const pointer = this.getScenePoint(e);\n    if (this.freeDrawingBrush) {\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\n        e: e,\n        // this is an absolute pointer, the naming is wrong\n        pointer,\n      });\n    } else {\n      this._isCurrentlyDrawing = false;\n    }\n    this._handleEvent(e, 'up');\n  }\n\n  /**\n   * Method that defines the actions when mouse is clicked on canvas.\n   * The method inits the currentTransform parameters and renders all the\n   * canvas so the current image can be placed on the top canvas and the rest\n   * in on the container one.\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  __onMouseDown(e: TPointerEvent) {\n    this._isClick = true;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'down:before');\n\n    let target: FabricObject | undefined = this._target;\n\n    // if right/middle click just fire events\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'down');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode) {\n      this._onMouseDownInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    // ignore if some object is being transformed at this moment\n    if (this._currentTransform) {\n      return;\n    }\n\n    let shouldRender = this._shouldRender(target);\n    let grouped = false;\n    if (this.handleMultiSelection(e, target)) {\n      // active object might have changed while grouping\n      target = this._activeObject;\n      grouped = true;\n      shouldRender = true;\n    } else if (this._shouldClearSelection(e, target)) {\n      this.discardActiveObject(e);\n    }\n    // we start a group selector rectangle if\n    // selection is enabled\n    // and there is no target, or the following 3 conditions are satisfied:\n    // target is not selectable ( otherwise we selected it )\n    // target is not editing\n    // target is not already selected ( otherwise we drag )\n    if (\n      this.selection &&\n      (!target ||\n        (!target.selectable &&\n          !(target as IText).isEditing &&\n          target !== this._activeObject))\n    ) {\n      const p = this.getScenePoint(e);\n      this._groupSelector = {\n        x: p.x,\n        y: p.y,\n        deltaY: 0,\n        deltaX: 0,\n      };\n    }\n\n    if (target) {\n      const alreadySelected = target === this._activeObject;\n      if (target.selectable && target.activeOn === 'down') {\n        this.setActiveObject(target, e);\n      }\n      const handle = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      if (target === this._activeObject && (handle || !grouped)) {\n        this._setupCurrentTransform(e, target, alreadySelected);\n        const control = handle ? handle.control : undefined,\n          pointer = this.getScenePoint(e),\n          mouseDownHandler =\n            control && control.getMouseDownHandler(e, target, control);\n        mouseDownHandler &&\n          mouseDownHandler.call(\n            control,\n            e,\n            this._currentTransform!,\n            pointer.x,\n            pointer.y,\n          );\n      }\n    }\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\n    shouldRender && (this._objectsToRender = undefined);\n    this._handleEvent(e, 'down');\n    // we must renderAll so that we update the visuals\n    shouldRender && this.requestRenderAll();\n  }\n\n  /**\n   * reset cache form common information needed during event processing\n   * @private\n   */\n  _resetTransformEventData() {\n    this._target = this._pointer = this._absolutePointer = undefined;\n  }\n\n  /**\n   * Cache common information needed during event processing\n   * @private\n   * @param {Event} e Event object fired on event\n   */\n  _cacheTransformEventData(e: TPointerEvent) {\n    // reset in order to avoid stale caching\n    this._resetTransformEventData();\n    this._pointer = this.getViewportPoint(e);\n    this._absolutePointer = sendPointToPlane(\n      this._pointer,\n      undefined,\n      this.viewportTransform,\n    );\n    this._target = this._currentTransform\n      ? this._currentTransform.target\n      : this.findTarget(e);\n  }\n\n  /**\n   * Method that defines the actions when mouse is hovering the canvas.\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\n   * all any other type of action.\n   * In case of an image transformation only the top canvas will be rendered.\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  __onMouseMove(e: TPointerEvent) {\n    this._isClick = false;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'move:before');\n\n    if (this.isDrawingMode) {\n      this._onMouseMoveInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    const groupSelector = this._groupSelector;\n\n    // We initially clicked in an empty area, so we draw a box for multiple selection\n    if (groupSelector) {\n      const pointer = this.getScenePoint(e);\n\n      groupSelector.deltaX = pointer.x - groupSelector.x;\n      groupSelector.deltaY = pointer.y - groupSelector.y;\n\n      this.renderTop();\n    } else if (!this._currentTransform) {\n      const target = this.findTarget(e);\n      this._setCursorFromEvent(e, target);\n      this._fireOverOutEvents(e, target);\n    } else {\n      this._transformObject(e);\n    }\n    this.textEditingManager.onMouseMove(e);\n    this._handleEvent(e, 'move');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\n   * @param {Fabric.Object} target the target where the target from the mousemove event\n   * @param {Event} e Event object fired on mousemove\n   * @private\n   */\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\n    const _hoveredTarget = this._hoveredTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('mouse', {\n      e,\n      target,\n      oldTarget: _hoveredTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('mouse', {\n        e,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._hoveredTarget = target;\n    this._hoveredTargets = this.targets.concat();\n  }\n\n  /**\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the onDrag event\n   * @param {Object} data Event object fired on dragover\n   * @private\n   */\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\n    const draggedoverTarget = this._draggedoverTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('drag', {\n      ...data,\n      target,\n      oldTarget: draggedoverTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('drag', {\n        ...data,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._draggedoverTarget = target;\n  }\n\n  /**\n   * Manage the synthetic in/out events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the supported events\n   * @param {Object} data Event object fired\n   * @param {Object} config configuration for the function to work\n   * @param {String} config.targetName property on the canvas where the old target is stored\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n   * @param {String} config.evtOut name of the event to fire for out\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n   * @param {String} config.evtIn name of the event to fire for in\n   * @private\n   */\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\n    type: T,\n    {\n      target,\n      oldTarget,\n      fireCanvas,\n      e,\n      ...data\n    }: TSyntheticEventContext[T] & {\n      target?: FabricObject;\n      oldTarget?: FabricObject;\n      fireCanvas?: boolean;\n    },\n  ) {\n    const { targetIn, targetOut, canvasIn, canvasOut } =\n      syntheticEventConfig[type];\n    const targetChanged = oldTarget !== target;\n\n    if (oldTarget && targetChanged) {\n      const outOpt: CanvasEvents[typeof canvasOut] = {\n        ...data,\n        e,\n        target: oldTarget,\n        nextTarget: target,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasOut, outOpt);\n      oldTarget.fire(targetOut, outOpt);\n    }\n    if (target && targetChanged) {\n      const inOpt: CanvasEvents[typeof canvasIn] = {\n        ...data,\n        e,\n        target,\n        previousTarget: oldTarget,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasIn, inOpt);\n      target.fire(targetIn, inOpt);\n    }\n  }\n\n  /**\n   * Method that defines actions when an Event Mouse Wheel\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseWheel(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'wheel');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event fired on mousemove\n   */\n  _transformObject(e: TPointerEvent) {\n    const scenePoint = this.getScenePoint(e),\n      transform = this._currentTransform!,\n      target = transform.target,\n      //  transform pointer to target's containing coordinate plane\n      //  both pointer and object should agree on every point\n      localPointer = target.group\n        ? sendPointToPlane(\n            scenePoint,\n            undefined,\n            target.group.calcTransformMatrix(),\n          )\n        : scenePoint;\n    transform.shiftKey = e.shiftKey;\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\n\n    this._performTransformAction(e, transform, localPointer);\n    transform.actionPerformed && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   */\n  _performTransformAction(\n    e: TPointerEvent,\n    transform: Transform,\n    pointer: Point,\n  ) {\n    const { action, actionHandler, target } = transform;\n\n    const actionPerformed =\n      !!actionHandler && actionHandler(e, transform, pointer.x, pointer.y);\n    actionPerformed && target.setCoords();\n\n    // this object could be created from the function in the control handlers\n    if (action === 'drag' && actionPerformed) {\n      transform.target.isMoving = true;\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\n    }\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\n  }\n\n  /**\n   * Sets the cursor depending on where the canvas is being hovered.\n   * Note: very buggy in Opera\n   * @param {Event} e Event object\n   * @param {Object} target Object that the mouse is hovering, if so.\n   */\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\n    if (!target) {\n      this.setCursor(this.defaultCursor);\n      return;\n    }\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\n    const activeSelection = isActiveSelection(this._activeObject)\n        ? this._activeObject\n        : null,\n      // only show proper corner when group selection is not active\n      corner =\n        (!activeSelection || target.group !== activeSelection) &&\n        // here we call findTargetCorner always with undefined for the touch parameter.\n        // we assume that if you are using a cursor you do not need to interact with\n        // the bigger touch area.\n        target.findControl(this.getViewportPoint(e));\n\n    if (!corner) {\n      if ((target as Group).subTargetCheck) {\n        // hoverCursor should come from top-most subTarget,\n        // so we walk the array backwards\n        this.targets\n          .concat()\n          .reverse()\n          .map((_target) => {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n      }\n      this.setCursor(hoverCursor);\n    } else {\n      const control = corner.control;\n      this.setCursor(control.cursorStyleHandler(e, control, target));\n    }\n  }\n\n  /**\n   * ## Handles multiple selection\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\n   * ---\n   * - If the active object is the active selection we add/remove `target` from it\n   * - If not, add the active object and `target` to the active selection and make it the active object.\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target target of event to select/deselect\n   * @returns true if grouping occurred\n   */\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\n    const activeObject = this._activeObject;\n    const isAS = isActiveSelection(activeObject);\n    if (\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\n      !!activeObject &&\n      this._isSelectionKeyPressed(e) &&\n      this.selection &&\n      // on top of that the user also has to hit a target that is selectable.\n      !!target &&\n      target.selectable &&\n      // group target and active object only if they are different objects\n      // else we try to find a subtarget of `ActiveSelection`\n      (activeObject !== target || isAS) &&\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\n      // if it is then we want to remove `target` from it\n      (isAS ||\n        (!target.isDescendantOf(activeObject) &&\n          !activeObject.isDescendantOf(target))) &&\n      //  target accepts selection\n      !target.onSelect({ e }) &&\n      // make sure we are not on top of a control\n      !activeObject.getActiveControl()\n    ) {\n      if (isAS) {\n        const prevActiveObjects = activeObject.getObjects();\n        if (target === activeObject) {\n          const pointer = this.getViewportPoint(e);\n          target =\n            // first search active objects for a target to remove\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\n            //  if not found, search under active selection for a target to add\n            // `prevActiveObjects` will be searched but we already know they will not be found\n            this.searchPossibleTargets(this._objects, pointer);\n          // if nothing is found bail out\n          if (!target || !target.selectable) {\n            return false;\n          }\n        }\n        if (target.group === activeObject) {\n          // `target` is part of active selection => remove it\n          activeObject.remove(target);\n          this._hoveredTarget = target;\n          this._hoveredTargets = [...this.targets];\n          // if after removing an object we are left with one only...\n          if (activeObject.size() === 1) {\n            // activate last remaining object\n            // deselecting the active selection will remove the remaining object from it\n            this._setActiveObject(activeObject.item(0), e);\n          }\n        } else {\n          // `target` isn't part of active selection => add it\n          activeObject.multiSelectAdd(target);\n          this._hoveredTarget = activeObject;\n          this._hoveredTargets = [...this.targets];\n        }\n        this._fireSelectionEvents(prevActiveObjects, e);\n      } else {\n        (activeObject as IText).isEditing &&\n          (activeObject as IText).exitEditing();\n        // add the active object and the target to the active selection and set it as the active object\n        const klass =\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n        const newActiveSelection = new klass([], {\n          /**\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\n           */\n          canvas: this,\n        });\n        newActiveSelection.multiSelectAdd(activeObject, target);\n        this._hoveredTarget = newActiveSelection;\n        // ISSUE 4115: should we consider subTargets here?\n        // this._hoveredTargets = [];\n        // this._hoveredTargets = this.targets.concat();\n        this._setActiveObject(newActiveSelection, e);\n        this._fireSelectionEvents([activeObject], e);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ## Handles selection\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\n   * - sets the active object\n   * ---\n   * runs on mouse up after a mouse move\n   */\n  protected handleSelection(e: TPointerEvent) {\n    if (!this.selection || !this._groupSelector) {\n      return false;\n    }\n    const { x, y, deltaX, deltaY } = this._groupSelector,\n      point1 = new Point(x, y),\n      point2 = point1.add(new Point(deltaX, deltaY)),\n      tl = point1.min(point2),\n      br = point1.max(point2),\n      size = br.subtract(tl);\n\n    const collectedObjects = this.collectObjects(\n      {\n        left: tl.x,\n        top: tl.y,\n        width: size.x,\n        height: size.y,\n      },\n      { includeIntersecting: !this.selectionFullyContained },\n    ) as FabricObject[];\n\n    const objects =\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\n      // should it be handled as is?\n      point1.eq(point2)\n        ? collectedObjects[0]\n          ? [collectedObjects[0]]\n          : []\n        : collectedObjects.length > 1\n          ? collectedObjects\n              .filter((object) => !object.onSelect({ e }))\n              .reverse()\n          : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\n            collectedObjects;\n\n    // set active object\n    if (objects.length === 1) {\n      // set as active object\n      this.setActiveObject(objects[0], e);\n    } else if (objects.length > 1) {\n      // add to active selection and make it the active object\n      const klass =\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\n    }\n\n    // cleanup\n    this._groupSelector = null;\n    return true;\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  clear() {\n    this.textEditingManager.clear();\n    super.clear();\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  destroy() {\n    this.removeListeners();\n    this.textEditingManager.dispose();\n    super.destroy();\n  }\n}\n","export const linearDefaultCoords = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n};\n\nexport const radialDefaultCoords = {\n  ...linearDefaultCoords,\n  r1: 0,\n  r2: 0,\n};\n","/**\n *\n * @param value value to check if NaN\n * @param [valueIfNaN]\n * @returns `fallback` is `value is NaN\n */\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\n};\n","import { ifNaN } from '../util/internals/ifNaN';\nimport { capValue } from '../util/misc/capValue';\n\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\n\nexport function isPercent(value: string | null) {\n  return value && RE_PERCENT.test(value);\n}\n\n/**\n *\n * @param value\n * @param valueIfNaN\n * @returns ∈ [0, 1]\n */\nexport function parsePercent(\n  value: string | number | null | undefined,\n  valueIfNaN?: number,\n) {\n  const parsed =\n    typeof value === 'number'\n      ? value\n      : typeof value === 'string'\n        ? parseFloat(value) / (isPercent(value) ? 100 : 1)\n        : NaN;\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\n}\n","import { Color } from '../../color/Color';\nimport { parsePercent } from '../../parser/percent';\nimport { ifNaN } from '../../util/internals/ifNaN';\nimport type { ColorStop } from '../typedefs';\n\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\nconst RE_KEY_VALUE = /\\s*:\\s*/;\n\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\n  let colorValue, opacity;\n  const style = el.getAttribute('style');\n  if (style) {\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\n\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\n      keyValuePairs.pop();\n    }\n\n    for (let i = keyValuePairs.length; i--; ) {\n      const [key, value] = keyValuePairs[i]\n        .split(RE_KEY_VALUE)\n        .map((s) => s.trim());\n      if (key === 'stop-color') {\n        colorValue = value;\n      } else if (key === 'stop-opacity') {\n        opacity = value;\n      }\n    }\n  }\n\n  const color = new Color(\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)',\n  );\n\n  return {\n    offset: parsePercent(el.getAttribute('offset'), 0),\n    color: color.toRgb(),\n    opacity:\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\n      color.getAlpha() *\n      multiplier,\n  };\n}\n\nexport function parseColorStops(\n  el: SVGGradientElement,\n  opacityAttr: string | null,\n) {\n  const colorStops: ColorStop[] = [],\n    colorStopEls = el.getElementsByTagName('stop'),\n    multiplier = parsePercent(opacityAttr, 1);\n  for (let i = colorStopEls.length; i--; ) {\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\n  }\n  return colorStops;\n}\n","import type { GradientType, GradientUnits } from '../typedefs';\n\nexport function parseType(el: SVGGradientElement): GradientType {\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\n    ? 'linear'\n    : 'radial';\n}\n\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\n    ? 'pixels'\n    : 'percentage';\n}\n","import { isPercent } from '../../parser/percent';\nimport type { TSize } from '../../typedefs';\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\nimport { parseGradientUnits, parseType } from './misc';\n\nfunction convertPercentUnitsToValues<\n  T extends GradientType,\n  K extends keyof GradientCoords<T>,\n>(\n  valuesToConvert: Record<K, string | number>,\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits },\n) {\n  let finalValue;\n  return (Object.keys(valuesToConvert) as K[]).reduce(\n    (acc, prop) => {\n      const propValue = valuesToConvert[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue =\n          typeof propValue === 'string' ? parseFloat(propValue) : propValue;\n        if (typeof propValue === 'string' && isPercent(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= height;\n            }\n          }\n        }\n      }\n      acc[prop] = finalValue;\n      return acc;\n    },\n    {} as Record<K, number>,\n  );\n}\n\nfunction getValue(el: SVGGradientElement, key: string) {\n  return el.getAttribute(key);\n}\n\nexport function parseLinearCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'x1') || 0,\n    y1: getValue(el, 'y1') || 0,\n    x2: getValue(el, 'x2') || '100%',\n    y2: getValue(el, 'y2') || 0,\n  };\n}\n\nexport function parseRadialCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\n    r1: 0,\n    x2: getValue(el, 'cx') || '50%',\n    y2: getValue(el, 'cy') || '50%',\n    r2: getValue(el, 'r') || '50%',\n  };\n}\n\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\n  return convertPercentUnitsToValues(\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\n    {\n      ...size,\n      gradientUnits: parseGradientUnits(el),\n    },\n  );\n}\n","import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords },\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n',\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color,\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n","import { config } from '../config';\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\nimport { ifNaN } from '../util/internals/ifNaN';\nimport { uid } from '../util/internals/uid';\nimport { loadImage } from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { toFixed } from '../util/misc/toFixed';\nimport { classRegistry } from '../ClassRegistry';\nimport type {\n  PatternRepeat,\n  PatternOptions,\n  SerializedPatternOptions,\n} from './types';\nimport { log } from '../util/internals/console';\n\n/**\n * @see {@link http://fabricjs.com/patterns demo}\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\n */\nexport class Pattern {\n  static type = 'Pattern';\n\n  /**\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\n   * Will be removed in future versiones\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    return 'pattern';\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * @type PatternRepeat\n   * @defaults\n   */\n  repeat: PatternRepeat = 'repeat';\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX = 0;\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY = 0;\n\n  /**\n   * @type TCrossOrigin\n   * @default\n   */\n  crossOrigin: TCrossOrigin = '';\n\n  /**\n   * transform matrix to change the pattern, imported from svgs.\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\n   * @type Array\n   * @default\n   */\n  declare patternTransform?: TMat2D;\n\n  /**\n   * The actual pixel source of the pattern\n   */\n  declare source: CanvasImageSource;\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number\n   */\n  declare readonly id: number;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\n   */\n  constructor(options: PatternOptions) {\n    this.id = uid();\n    Object.assign(this, options);\n  }\n\n  /**\n   * @returns true if {@link source} is an <img> element\n   */\n  isImageSource(): this is { source: HTMLImageElement } {\n    return (\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\n    );\n  }\n\n  /**\n   * @returns true if {@link source} is a <canvas> element\n   */\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\n  }\n\n  sourceToString(): string {\n    return this.isImageSource()\n      ? this.source.src\n      : this.isCanvasSource()\n        ? this.source.toDataURL()\n        : '';\n  }\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\n    if (\n      // if the image failed to load, return, and allow rest to continue loading\n      !this.source ||\n      // if an image\n      (this.isImageSource() &&\n        (!this.source.complete ||\n          this.source.naturalWidth === 0 ||\n          this.source.naturalHeight === 0))\n    ) {\n      return null;\n    }\n\n    return ctx.createPattern(this.source, this.repeat)!;\n  }\n\n  /**\n   * Returns object representation of a pattern\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object} Object representation of a pattern instance\n   */\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\n    const { repeat, crossOrigin } = this;\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: 'pattern',\n      source: this.sourceToString(),\n      repeat,\n      crossOrigin,\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\n      patternTransform: this.patternTransform\n        ? [...this.patternTransform]\n        : null,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   */\n  toSVG({ width, height }: TSize): string {\n    const { source: patternSource, repeat, id } = this,\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\n      patternWidth =\n        repeat === 'repeat-y' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetX || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).width as number) / width,\n              0,\n            ),\n      patternHeight =\n        repeat === 'repeat-x' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetY || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).height as number) / height,\n              0,\n            );\n\n    return [\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\n      `<image x=\"0\" y=\"0\" width=\"${\n        (patternSource as HTMLImageElement).width\n      }\" height=\"${\n        (patternSource as HTMLImageElement).height\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\n      `</pattern>`,\n      '',\n    ].join('\\n');\n  }\n  /* _TO_SVG_END_ */\n\n  static async fromObject(\n    {\n      type,\n      source,\n      patternTransform,\n      ...otherOptions\n    }: SerializedPatternOptions,\n    options?: Abortable,\n  ): Promise<Pattern> {\n    const img = await loadImage(source, {\n      ...options,\n      crossOrigin: otherOptions.crossOrigin,\n    });\n    return new this({\n      ...otherOptions,\n      patternTransform:\n        patternTransform && (patternTransform.slice(0) as TMat2D),\n      source: img,\n    });\n  }\n}\n\nclassRegistry.setClass(Pattern);\n// kept for compatibility reason\nclassRegistry.setClass(Pattern, 'pattern');\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport type { Shadow } from '../Shadow';\nimport type { Canvas } from '../canvas/Canvas';\nimport type { TBrushEventData } from './typedefs';\n\n/**\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nexport abstract class BaseBrush {\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color = 'rgb(0, 0, 0)';\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width = 1;\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type Shadow\n   * @default\n   */\n  shadow: Shadow | null = null;\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: CanvasLineCap = 'round';\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: CanvasLineJoin = 'round';\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit = 10;\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: number[] | null = null;\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n   */\n\n  limitedToCanvasSize = false;\n\n  /**\n   * @todo add type\n   */\n  declare canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  abstract _render(): void;\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\n  /**\n   * @returns true if brush should continue blocking interaction\n   */\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  }\n\n  /**\n   * Sets the transformation on given context\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @private\n   */\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  protected needsFullRender() {\n    const color = new Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  }\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  protected _setShadow() {\n    if (!this.shadow || !this.canvas) {\n      return;\n    }\n\n    const canvas = this.canvas,\n      shadow = this.shadow,\n      ctx = canvas.contextTop,\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  }\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  protected _resetShadow() {\n    const ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n   */\n  protected _isOutSideCanvas(pointer: Point) {\n    return (\n      pointer.x < 0 ||\n      pointer.x > this.canvas.getWidth() ||\n      pointer.y < 0 ||\n      pointer.y > this.canvas.getHeight()\n    );\n  }\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { toFixed } from '../util/misc/toFixed';\nimport {\n  getBoundsOfCurve,\n  joinPath,\n  makePathSimpler,\n  parsePath,\n} from '../util/path';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type {\n  TComplexPathData,\n  TPathSegmentInfo,\n  TSimplePathData,\n} from '../util/path/typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type {\n  TBBox,\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n} from '../typedefs';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniquePathProps {\n  sourcePath?: string;\n  path?: TSimplePathData;\n}\n\nexport interface SerializedPathProps\n  extends SerializedObjectProps,\n    UniquePathProps {}\n\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\n\nexport interface IPathBBox extends TBBox {\n  left: number;\n  top: number;\n  pathOffset: Point;\n}\n\nexport class Path<\n  Props extends TOptions<PathProps> = Partial<PathProps>,\n  SProps extends SerializedPathProps = SerializedPathProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Array of path points\n   * @type Array\n   * @default\n   */\n  declare path: TSimplePathData;\n\n  declare pathOffset: Point;\n\n  declare sourcePath?: string;\n\n  declare segmentsInfo?: TPathSegmentInfo[];\n\n  static type = 'Path';\n\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\n\n  /**\n   * Constructor\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {Partial<PathProps>} [options] Options object\n   * @return {Path} thisArg\n   */\n  constructor(\n    path: TComplexPathData | string,\n    // todo: evaluate this spread here\n    { path: _, left, top, ...options }: Partial<Props> = {},\n  ) {\n    super();\n    Object.assign(this, Path.ownDefaults);\n    this.setOptions(options);\n    this._setPath(path || [], true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\n   */\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\n    this.setBoundingBox(adjustPosition);\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = this._calcBoundsFromPath();\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\n    const l = -this.pathOffset.x,\n      t = -this.pathOffset.y;\n\n    ctx.beginPath();\n\n    for (const command of this.path) {\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          ctx.lineTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'M': // moveTo, absolute\n          ctx.moveTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          ctx.bezierCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n            command[5] + l,\n            command[6] + t,\n          );\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          ctx.quadraticCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n          );\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    this._renderPathCommands(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {string} string representation of an instance\n   */\n  toString() {\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\n      this.left\n    } }>`;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      path: this.path.map((pathCmd) => pathCmd.slice()),\n    };\n  }\n\n  /**\n   * Returns dataless object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const o = this.toObject<T, K>(propertiesToInclude);\n    if (this.sourcePath) {\n      delete o.path;\n      o.sourcePath = this.sourcePath;\n    }\n    return o;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\n    return [\n      '<path ',\n      'COMMON_PARTS',\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @return the path command's translate transform attribute\n   */\n  _getOffsetTransform() {\n    const digits = config.NUM_FRACTION_DIGITS;\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\n      -this.pathOffset.y,\n      digits,\n    )})`;\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver,\n        additionalTransform: additionalTransform,\n      })\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      additionalTransform: additionalTransform,\n    });\n  }\n\n  /**\n   * Returns number representation of an instance complexity\n   * @return {number} complexity of this instance\n   */\n  complexity() {\n    return this.path.length;\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { width, height, pathOffset } = this._calcDimensions();\n    this.set({ width, height, pathOffset });\n    // using pathOffset because it match the use case.\n    // if pathOffset change here we need to use left + width/2 , top + height/2\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\n  }\n\n  _calcBoundsFromPath(): TBBox {\n    const bounds: XY[] = [];\n    let subpathStartX = 0,\n      subpathStartY = 0,\n      x = 0, // current x\n      y = 0; // current y\n\n    for (const command of this.path) {\n      // current instruction\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          x = command[1];\n          y = command[2];\n          bounds.push({ x: subpathStartX, y: subpathStartY }, { x, y });\n          break;\n\n        case 'M': // moveTo, absolute\n          x = command[1];\n          y = command[2];\n          subpathStartX = x;\n          subpathStartY = y;\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n              command[5],\n              command[6],\n            ),\n          );\n          x = command[5];\n          y = command[6];\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n            ),\n          );\n          x = command[3];\n          y = command[4];\n          break;\n\n        case 'Z':\n          x = subpathStartX;\n          y = subpathStartY;\n          break;\n      }\n    }\n    return makeBoundingBoxFromPoints(bounds);\n  }\n\n  /**\n   * @private\n   */\n  _calcDimensions(): IPathBBox {\n    const bbox = this._calcBoundsFromPath();\n\n    return {\n      ...bbox,\n      pathOffset: new Point(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2,\n      ),\n    };\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\n   * @static\n   * @memberOf Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\n\n  /**\n   * Creates an instance of Path from an object\n   * @static\n   * @memberOf Path\n   * @param {Object} object\n   * @returns {Promise<Path>}\n   */\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\n    return this._fromObject<Path>(object, {\n      extraParam: 'path',\n    });\n  }\n\n  /**\n   * Creates an instance of Path from an SVG <path> element\n   * @static\n   * @memberOf Path\n   * @param {HTMLElement} element to parse\n   * @param {Partial<PathProps>} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Partial<PathProps>,\n    cssRules?: CSSRules,\n  ) {\n    const { d, ...parsedAttributes } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return new this(d, {\n      ...parsedAttributes,\n      ...options,\n      // we pass undefined to instruct the constructor to position the object using the bbox\n      left: undefined,\n      top: undefined,\n    });\n  }\n}\n\nclassRegistry.setClass(Path);\nclassRegistry.setSVGClass(Path);\n\n/* _FROM_SVG_START_ */\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Path } from '../shapes/Path';\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\n/**\n * @private\n * @param {TSimplePathData} pathData SVG path commands\n * @returns {boolean}\n */\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\n}\n\nexport class PencilBrush extends BaseBrush {\n  /**\n   * Discard points that are less than `decimate` pixel distant from each other\n   * @type Number\n   * @default 0.4\n   */\n  decimate = 0.4;\n\n  /**\n   * Draws a straight line between last recorded point to current pointer\n   * Used for `shift` functionality\n   *\n   * @type boolean\n   * @default false\n   */\n  drawStraightLine = false;\n\n  /**\n   * The event modifier key that makes the brush draw a straight line.\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n   * @type {ModifierKey | undefined | null}\n   */\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\n\n  protected declare _points: Point[];\n  protected declare _hasStraightLine: boolean;\n  protected declare oldEnd?: Point;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this._points = [];\n    this._hasStraightLine = false;\n  }\n\n  needsFullRender() {\n    return super.needsFullRender() || this._hasStraightLine;\n  }\n\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\n    const midPoint = p1.midPointFrom(p2);\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n    return midPoint;\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    this._prepareForDrawing(pointer);\n    // capture coordinates immediately\n    // this allows to draw dots (when movement never occurs)\n    this._addPoint(pointer);\n    this._render();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this._addPoint(pointer) && this._points.length > 1) {\n      if (this.needsFullRender()) {\n        // redraw curve\n        // clear top canvas\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._render();\n      } else {\n        const points = this._points,\n          length = points.length,\n          ctx = this.canvas.contextTop;\n        // draw the curve update\n        this._saveAndTransform(ctx);\n        if (this.oldEnd) {\n          ctx.beginPath();\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n        }\n        this.oldEnd = PencilBrush.drawSegment(\n          ctx,\n          points[length - 2],\n          points[length - 1],\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp({ e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return true;\n    }\n    this.drawStraightLine = false;\n    this.oldEnd = undefined;\n    this._finalizeAndAddPath();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Point} pointer Actual mouse position related to the canvas.\n   */\n  _prepareForDrawing(pointer: Point) {\n    this._reset();\n    this._addPoint(pointer);\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\n  }\n\n  /**\n   * @private\n   * @param {Point} point Point to be added to points array\n   */\n  _addPoint(point: Point) {\n    if (\n      this._points.length > 1 &&\n      point.eq(this._points[this._points.length - 1])\n    ) {\n      return false;\n    }\n    if (this.drawStraightLine && this._points.length > 1) {\n      this._hasStraightLine = true;\n      this._points.pop();\n    }\n    this._points.push(point);\n    return true;\n  }\n\n  /**\n   * Clear points array and set contextTop canvas style.\n   * @private\n   */\n  _reset() {\n    this._points = [];\n    this._setBrushStyles(this.canvas.contextTop);\n    this._setShadow();\n    this._hasStraightLine = false;\n  }\n\n  /**\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\n   * @private\n   * @param {CanvasRenderingContext2D} [ctx]\n   */\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\n    let p1 = this._points[0],\n      p2 = this._points[1];\n    this._saveAndTransform(ctx);\n    ctx.beginPath();\n    //if we only have 2 points in the path and they are the same\n    //it means that the user only clicked the canvas without moving the mouse\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\n    //that's why we set them apart a bit\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n      const width = this.width / 1000;\n      p1.x -= width;\n      p2.x += width;\n    }\n    ctx.moveTo(p1.x, p1.y);\n\n    for (let i = 1; i < this._points.length; i++) {\n      // we pick the point between pi + 1 & pi + 2 as the\n      // end point and p1 as our control point.\n      PencilBrush.drawSegment(ctx, p1, p2);\n      p1 = this._points[i];\n      p2 = this._points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    ctx.lineTo(p1.x, p1.y);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * Converts points to SVG path\n   * @param {Point[]} points Array of points\n   * @return {TSimplePathData} SVG path commands\n   */\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\n    const correction = this.width / 1000;\n    return getSmoothPathFromPoints(points, correction);\n  }\n\n  /**\n   * Creates a Path object to add on canvas\n   * @param {TSimplePathData} pathData Path data\n   * @return {Path} Path to add on canvas\n   */\n  createPath(pathData: TSimplePathData): Path {\n    const path = new Path(pathData, {\n      fill: null,\n      stroke: this.color,\n      strokeWidth: this.width,\n      strokeLineCap: this.strokeLineCap,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeDashArray: this.strokeDashArray,\n    });\n    if (this.shadow) {\n      this.shadow.affectStroke = true;\n      path.shadow = new Shadow(this.shadow);\n    }\n\n    return path;\n  }\n\n  /**\n   * Decimate points array with the decimate value\n   */\n  decimatePoints(points: Point[], distance: number) {\n    if (points.length <= 2) {\n      return points;\n    }\n    let lastPoint = points[0],\n      cDistance;\n    const zoom = this.canvas.getZoom(),\n      adjustedDistance = Math.pow(distance / zoom, 2),\n      l = points.length - 1,\n      newPoints = [lastPoint];\n    for (let i = 1; i < l - 1; i++) {\n      cDistance =\n        Math.pow(lastPoint.x - points[i].x, 2) +\n        Math.pow(lastPoint.y - points[i].y, 2);\n      if (cDistance >= adjustedDistance) {\n        lastPoint = points[i];\n        newPoints.push(lastPoint);\n      }\n    }\n    // Add the last point from the original line to the end of the array.\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n    newPoints.push(points[l]);\n    return newPoints;\n  }\n\n  /**\n   * On mouseup after drawing the path on contextTop canvas\n   * we use the points captured to create an new Path object\n   * and add it to the canvas.\n   */\n  _finalizeAndAddPath() {\n    const ctx = this.canvas.contextTop;\n    ctx.closePath();\n    if (this.decimate) {\n      this._points = this.decimatePoints(this._points, this.decimate);\n    }\n    const pathData = this.convertPointsToSVGPath(this._points);\n    if (isEmptySVGPath(pathData)) {\n      // do not create 0 width/height paths, as they are\n      // rendered inconsistently across browsers\n      // Firefox 4, for example, renders a dot,\n      // whereas Chrome 10 renders nothing\n      this.canvas.requestRenderAll();\n      return;\n    }\n\n    const path = this.createPath(pathData);\n    this.canvas.clearContext(this.canvas.contextTop);\n    this.canvas.fire('before:path:created', { path: path });\n    this.canvas.add(path);\n    this.canvas.requestRenderAll();\n    path.setCoords();\n    this._resetShadow();\n\n    // fire event 'path' created\n    this.canvas.fire('path:created', { path: path });\n  }\n}\n","import type { ObjectEvents } from '../EventTypeDefs';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { cos } from '../util/misc/cos';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { sin } from '../util/misc/sin';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { CSSRules } from '../parser/typedefs';\nimport { SCALE_X, SCALE_Y } from '../constants';\n\ninterface UniqueCircleProps {\n  /**\n   * Radius of this circle\n   * @type Number\n   * @default 0\n   */\n  radius: number;\n\n  /**\n   * Angle for the start of the circle, in degrees.\n   * @type TDegree 0 - 359\n   * @default 0\n   */\n  startAngle: number;\n\n  /**\n   * Angle for the end of the circle, in degrees\n   * @type TDegree 1 - 360\n   * @default 360\n   */\n  endAngle: number;\n\n  /**\n   * Orientation for the direction of the circle.\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\n   * @default false\n   */\n  counterClockwise: boolean;\n}\n\nexport interface SerializedCircleProps\n  extends SerializedObjectProps,\n    UniqueCircleProps {}\n\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\n\nconst CIRCLE_PROPS = [\n  'radius',\n  'startAngle',\n  'endAngle',\n  'counterClockwise',\n] as const;\n\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\n  radius: 0,\n  startAngle: 0,\n  endAngle: 360,\n  counterClockwise: false,\n};\n\nexport class Circle<\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\n    SProps extends SerializedCircleProps = SerializedCircleProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueCircleProps\n{\n  declare radius: number;\n  declare startAngle: number;\n  declare endAngle: number;\n  declare counterClockwise: boolean;\n\n  static type = 'Circle';\n\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\n\n  static ownDefaults = circleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Circle.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Circle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n\n    if (key === 'radius') {\n      this.setRadius(value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(\n      0,\n      0,\n      this.radius,\n      degreesToRadians(this.startAngle),\n      degreesToRadians(this.endAngle),\n      this.counterClockwise,\n    );\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusX(): number {\n    return this.get('radius') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusY(): number {\n    return this.get('radius') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Sets radius of an object (and updates width accordingly)\n   */\n  setRadius(value: number) {\n    this.radius = value;\n    this.set({ width: value * 2, height: value * 2 });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\n  }\n\n  /* _TO_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    const angle = (this.endAngle - this.startAngle) % 360;\n\n    if (angle === 0) {\n      return [\n        '<circle ',\n        'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'r=\"',\n        `${this.radius}`,\n        '\" />\\n',\n      ];\n    } else {\n      const { radius } = this;\n      const start = degreesToRadians(this.startAngle),\n        end = degreesToRadians(this.endAngle),\n        startX = cos(start) * radius,\n        startY = sin(start) * radius,\n        endX = cos(end) * radius,\n        endY = sin(end) * radius,\n        largeFlag = angle > 180 ? 1 : 0,\n        sweepFlag = this.counterClockwise ? 0 : 1;\n      return [\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\n        'COMMON_PARTS',\n        ' />\\n',\n      ];\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\n   * @static\n   * @memberOf Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns {@link Circle} instance from an SVG element\n   * @static\n   * @memberOf Circle\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ): Promise<Circle> {\n    const {\n      left = 0,\n      top = 0,\n      radius = 0,\n      ...otherParsedAttributes\n    } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    ) as Partial<CircleProps>;\n\n    // this probably requires to be fixed for default origins not being top/left.\n\n    return new this({\n      ...otherParsedAttributes,\n      radius,\n      left: left - radius,\n      top: top - radius,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * @todo how do we declare this??\n   */\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\n    return super._fromObject<Circle>(object);\n  }\n}\n\nclassRegistry.setClass(Circle);\nclassRegistry.setSVGClass(Circle);\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Circle } from '../shapes/Circle';\nimport { Group } from '../shapes/Group';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { CircleBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\nexport class CircleBrush extends BaseBrush {\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  declare points: CircleBrushPoint[];\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.points = [];\n  }\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Point} pointer\n   */\n  drawDot(pointer: Point) {\n    const point = this.addPoint(pointer),\n      ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  }\n\n  dot(ctx: CanvasRenderingContext2D, point: CircleBrushPoint) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown(pointer: Point) {\n    this.points = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  }\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render() {\n    const ctx = this.canvas.contextTop,\n      points = this.points;\n    this._saveAndTransform(ctx);\n    for (let i = 0; i < points.length; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const circles: Circle[] = [];\n\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i],\n        circle = new Circle({\n          radius: point.radius,\n          left: point.x,\n          top: point.y,\n          originX: CENTER,\n          originY: CENTER,\n          fill: point.fill,\n        });\n\n      this.shadow && (circle.shadow = new Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    const group = new Group(circles, { canvas: this.canvas });\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  /**\n   * @param {Object} pointer\n   * @return {Point} Just added pointer point\n   */\n  addPoint({ x, y }: Point) {\n    const pointerPoint: CircleBrushPoint = {\n      x,\n      y,\n      radius: getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n      fill: new Color(this.color).setAlpha(getRandomInt(0, 100) / 100).toRgba(),\n    };\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n}\n","import type { Point } from '../Point';\nimport { Group } from '../shapes/Group';\nimport { Shadow } from '../Shadow';\nimport { Rect } from '../shapes/Rect';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { SprayBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\n/**\n *\n * @param rects\n * @returns\n */\nfunction getUniqueRects(rects: Rect[]) {\n  const uniqueRects: Record<string, boolean> = {};\n  const uniqueRectsArray: Rect[] = [];\n\n  for (let i = 0, key: string; i < rects.length; i++) {\n    key = `${rects[i].left}${rects[i].top}`;\n    if (!uniqueRects[key]) {\n      uniqueRects[key] = true;\n      uniqueRectsArray.push(rects[i]);\n    }\n  }\n\n  return uniqueRectsArray;\n}\n\nexport class SprayBrush extends BaseBrush {\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density = 20;\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth = 1;\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance = 1;\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity = false;\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping = true;\n\n  private declare sprayChunks: SprayBrushPoint[][];\n\n  private declare sprayChunk: SprayBrushPoint[];\n\n  /**\n   * Constructor\n   * @param {Canvas} canvas\n   * @return {SprayBrush} Instance of a spray brush\n   */\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.sprayChunks = [];\n    this.sprayChunk = [];\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point) {\n    this.sprayChunks = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const rects: Rect[] = [];\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      const sprayChunk = this.sprayChunks[i];\n      for (let j = 0; j < sprayChunk.length; j++) {\n        const chunck = sprayChunk[j];\n        const rect = new Rect({\n          width: chunck.width,\n          height: chunck.width,\n          left: chunck.x + 1,\n          top: chunck.y + 1,\n          originX: CENTER,\n          originY: CENTER,\n          fill: this.color,\n        });\n        rects.push(rect);\n      }\n    }\n\n    const group = new Group(\n      this.optimizeOverlapping ? getUniqueRects(rects) : rects,\n      {\n        objectCaching: true,\n        subTargetCheck: false,\n        interactive: false,\n      },\n    );\n    this.shadow && group.set('shadow', new Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  renderChunck(sprayChunck: SprayBrushPoint[]) {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < sprayChunck.length; i++) {\n      const point = sprayChunck[i];\n      ctx.globalAlpha = point.opacity;\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Render all spray chunks\n   */\n  _render() {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      this.renderChunck(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {Point} pointer\n   */\n  addSprayChunk(pointer: Point) {\n    this.sprayChunk = [];\n    const radius = this.width / 2;\n\n    for (let i = 0; i < this.density; i++) {\n      this.sprayChunk.push({\n        x: getRandomInt(pointer.x - radius, pointer.x + radius),\n        y: getRandomInt(pointer.y - radius, pointer.y + radius),\n        width: this.dotWidthVariance\n          ? getRandomInt(\n              // bottom clamp width to 1\n              Math.max(1, this.dotWidth - this.dotWidthVariance),\n              this.dotWidth + this.dotWidthVariance,\n            )\n          : this.dotWidth,\n        opacity: this.randomOpacity ? getRandomInt(0, 100) / 100 : 1,\n      });\n    }\n\n    this.sprayChunks.push(this.sprayChunk);\n  }\n}\n","import { Pattern } from '../Pattern';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { Canvas } from '../canvas/Canvas';\nimport { PencilBrush } from './PencilBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\nexport class PatternBrush extends PencilBrush {\n  declare source?: CanvasImageSource;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n  }\n\n  getPatternSrc() {\n    const dotWidth = 20,\n      dotDistance = 5,\n      patternCanvas = createCanvasElement(),\n      patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    if (patternCtx) {\n      patternCtx.fillStyle = this.color;\n      patternCtx.beginPath();\n      patternCtx.arc(\n        dotWidth / 2,\n        dotWidth / 2,\n        dotWidth / 2,\n        0,\n        Math.PI * 2,\n        false,\n      );\n      patternCtx.closePath();\n      patternCtx.fill();\n    }\n    return patternCanvas;\n  }\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern(ctx: CanvasRenderingContext2D) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  }\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    super._setBrushStyles(ctx);\n    const pattern = this.getPattern(ctx);\n    pattern && (ctx.strokeStyle = pattern);\n  }\n\n  /**\n   * Creates path\n   */\n  createPath(pathData: TSimplePathData) {\n    const path = super.createPath(pathData),\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new Pattern({\n      source: this.source || this.getPatternSrc(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y,\n    });\n    return path;\n  }\n}\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport { Point } from '../Point';\nimport { isFiller } from '../util/typeAssertions';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { makeBoundingBoxFromPoints } from '../util';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\n// @TODO this code is terrible and Line should be a special case of polyline.\n\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\n\ninterface UniqueLineProps {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\nexport interface SerializedLineProps\n  extends SerializedObjectProps,\n    UniqueLineProps {}\n\nexport class Line<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedLineProps = SerializedLineProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueLineProps\n{\n  /**\n   * x value or first line edge\n   * @type number\n   * @default\n   */\n  declare x1: number;\n\n  /**\n   * y value or first line edge\n   * @type number\n   * @default\n   */\n  declare y1: number;\n\n  /**\n   * x value or second line edge\n   * @type number\n   * @default\n   */\n  declare x2: number;\n\n  /**\n   * y value or second line edge\n   * @type number\n   * @default\n   */\n  declare y2: number;\n\n  static type = 'Line';\n\n  static cacheProperties = [...cacheProperties, ...coordProps];\n  /**\n   * Constructor\n   * @param {Array} [points] Array of points\n   * @param {Object} [options] Options object\n   * @return {Line} thisArg\n   */\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Partial<Props> = {}) {\n    super();\n    Object.assign(this, Line.ownDefaults);\n    this.setOptions(options);\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    this._setWidthHeight();\n    const { left, top } = options;\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {Object} [options] Options\n   */\n  _setWidthHeight() {\n    const { x1, y1, x2, y2 } = this;\n    this.width = Math.abs(x2 - x1);\n    this.height = Math.abs(y2 - y1);\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\n      { x: x1, y: y1 },\n      { x: x2, y: y2 },\n    ]);\n    const position = new Point(left + width / 2, top + height / 2);\n    this.setPositionByOrigin(position, CENTER, CENTER);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\n      // this doesn't make sense very much, since setting x1 when top or left\n      // are already set, is just going to show a strange result since the\n      // line will move way more than the developer expect.\n      // in fabric5 it worked only when the line didn't have extra transformations,\n      // in fabric6 too. With extra transform they behave bad in different ways.\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\n      this._setWidthHeight();\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    const p = this.calcLinePoints();\n    ctx.moveTo(p.x1, p.y1);\n    ctx.lineTo(p.x2, p.y2);\n\n    ctx.lineWidth = this.strokeWidth;\n\n    // TODO: test this\n    // make sure setting \"fill\" changes color of a line\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n    const origStrokeStyle = ctx.strokeStyle;\n    if (isFiller(this.stroke)) {\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\n    } else {\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\n    }\n    this.stroke && this._renderStroke(ctx);\n    ctx.strokeStyle = origStrokeStyle;\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      ...this.calcLinePoints(),\n    };\n  }\n\n  /*\n   * Calculate object dimensions from its properties\n   * @private\n   */\n  _getNonTransformedDimensions(): Point {\n    const dim = super._getNonTransformedDimensions();\n    if (this.strokeLineCap === 'butt') {\n      if (this.width === 0) {\n        dim.y -= this.strokeWidth;\n      }\n      if (this.height === 0) {\n        dim.x -= this.strokeWidth;\n      }\n    }\n    return dim;\n  }\n\n  /**\n   * Recalculates line points given width and height\n   * Those points are simply placed around the center,\n   * This is not useful outside internal render functions and svg output\n   * Is not meant to be for the developer.\n   * @private\n   */\n  calcLinePoints(): UniqueLineProps {\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\n    const xMult = _x1 <= _x2 ? -1 : 1,\n      yMult = _y1 <= _y2 ? -1 : 1,\n      x1 = (xMult * width) / 2,\n      y1 = (yMult * height) / 2,\n      x2 = (xMult * -width) / 2,\n      y2 = (yMult * -height) / 2;\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\n    return [\n      '<line ',\n      'COMMON_PARTS',\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\n   * @static\n   * @memberOf Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\n\n  /**\n   * Returns Line instance from an SVG element\n   * @static\n   * @memberOf Line\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      x1 = 0,\n      y1 = 0,\n      x2 = 0,\n      y2 = 0,\n      ...parsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n    return new this([x1, y1, x2, y2], parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Line instance from an object representation\n   * @static\n   * @memberOf Line\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Line>}\n   */\n  static fromObject<T extends TOptions<SerializedLineProps>>({\n    x1,\n    y1,\n    x2,\n    y2,\n    ...object\n  }: T) {\n    return this._fromObject<Line>(\n      {\n        ...object,\n        points: [x1, y1, x2, y2],\n      },\n      {\n        extraParam: 'points',\n      },\n    );\n  }\n}\n\nclassRegistry.setClass(Line);\nclassRegistry.setSVGClass(Line);\n","import { classRegistry } from '../ClassRegistry';\nimport { FabricObject } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { TClassProperties, TOptions } from '../typedefs';\nimport type { ObjectEvents } from '../EventTypeDefs';\n\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\n  width: 100,\n  height: 100,\n};\n\nexport class Triangle<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  static type = 'Triangle';\n\n  static ownDefaults = triangleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Triangle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(-widthBy2, heightBy2);\n    ctx.lineTo(0, -heightBy2);\n    ctx.lineTo(widthBy2, heightBy2);\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2,\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n  }\n}\n\nclassRegistry.setClass(Triangle);\nclassRegistry.setSVGClass(Triangle);\n","import { SCALE_X, SCALE_Y, twoMathPi } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueEllipseProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedEllipseProps\n  extends SerializedObjectProps,\n    UniqueEllipseProps {}\n\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\n\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\n\nexport class Ellipse<\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements EllipseProps\n{\n  /**\n   * Horizontal radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Ellipse';\n\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\n\n  static ownDefaults = ellipseDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Ellipse.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Ellipse.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   * @return {Ellipse} thisArg\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    switch (key) {\n      case 'rx':\n        this.rx = value;\n        this.set('width', value * 2);\n        break;\n\n      case 'ry':\n        this.ry = value;\n        this.set('height', value * 2);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRx() {\n    return this.get('rx') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns Vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRy() {\n    return this.get('ry') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    return [\n      '<ellipse ',\n      'COMMON_PARTS',\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\n    ctx.restore();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\n   * @static\n   * @memberOf Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\n\n  /**\n   * Returns {@link Ellipse} instance from an SVG element\n   * @static\n   * @memberOf Ellipse\n   * @param {HTMLElement} element Element to parse\n   * @return {Ellipse}\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    return new this(parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Ellipse);\nclassRegistry.setSVGClass(Ellipse);\n","import type { XY } from '../Point';\n\n/**\n * Parses \"points\" attribute, returning an array of values\n * @static\n * @memberOf fabric\n * @param {String} points points attribute string\n * @return {Array} array of points\n */\nexport function parsePointsAttribute(points: string | null): XY[] {\n  // points attribute is required and must not be empty\n  if (!points) {\n    return [];\n  }\n\n  // replace commas with whitespace and remove bookending whitespace\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\n\n  const parsedPoints = [];\n\n  for (let i = 0; i < pointsSplit.length; i += 2) {\n    parsedPoints.push({\n      x: parseFloat(pointsSplit[i]),\n      y: parseFloat(pointsSplit[i + 1]),\n    });\n  }\n\n  // odd number of points is an error\n  // if (parsedPoints.length % 2 !== 0) {\n  //   return null;\n  // }\n  return parsedPoints;\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport {\n  CENTER,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\n  /**\n   * @deprecated transient option soon to be removed in favor of a different design\n   */\n  exactBoundingBox: false,\n};\n\nexport interface SerializedPolylineProps extends SerializedObjectProps {\n  points: XY[];\n}\n\nexport class Polyline<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Points array\n   * @type Array\n   * @default\n   */\n  declare points: XY[];\n\n  /**\n   * WARNING: Feature in progress\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\n   * this will be turned to true by default on fabric 6.0\n   * maybe will be left in as an optimization since calculations may be slow\n   * @deprecated transient option soon to be removed in favor of a different design\n   * @type Boolean\n   * @default false\n   */\n  declare exactBoundingBox: boolean;\n\n  private declare initialized: true | undefined;\n\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polyline';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n\n  /**\n   * A list of properties that if changed trigger a recalculation of dimensions\n   * @todo check if you really need to recalculate for all cases\n   */\n  static layoutProperties: (keyof Polyline)[] = [\n    SKEW_X,\n    SKEW_Y,\n    'strokeLineCap',\n    'strokeLineJoin',\n    'strokeMiterLimit',\n    'strokeWidth',\n    'strokeUniform',\n    'points',\n  ];\n\n  declare pathOffset: Point;\n\n  declare strokeOffset: Point;\n\n  static cacheProperties = [...cacheProperties, 'points'];\n\n  strokeDiff: Point;\n\n  /**\n   * Constructor\n   * @param {Array} points Array of points (where each point is an object with x and y)\n   * @param {Object} [options] Options object\n   * @return {Polyline} thisArg\n   * @example\n   * var poly = new Polyline([\n   *     { x: 10, y: 10 },\n   *     { x: 50, y: 30 },\n   *     { x: 40, y: 70 },\n   *     { x: 60, y: 50 },\n   *     { x: 100, y: 150 },\n   *     { x: 40, y: 100 }\n   *   ], {\n   *   stroke: 'red',\n   *   left: 100,\n   *   top: 100\n   * });\n   */\n  constructor(points: XY[] = [], options: Props = {} as Props) {\n    super();\n    Object.assign(this, Polyline.ownDefaults);\n    this.setOptions(options);\n    this.points = points;\n    const { left, top } = options;\n    this.initialized = true;\n    this.setBoundingBox(true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  protected isOpen() {\n    return true;\n  }\n\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\n  }\n\n  /**\n   * Calculate the polygon bounding box\n   * @private\n   */\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\n    options = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      strokeLineCap: this.strokeLineCap,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeUniform: this.strokeUniform,\n      strokeWidth: this.strokeWidth,\n      ...(options || {}),\n    };\n    const points = this.exactBoundingBox\n      ? this._projectStrokeOnPoints(\n          options as TProjectStrokeOnPointsOptions,\n        ).map((projection) => projection.projectedPoint)\n      : this.points;\n    if (points.length === 0) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        pathOffset: new Point(),\n        strokeOffset: new Point(),\n        strokeDiff: new Point(),\n      };\n    }\n    const bbox = makeBoundingBoxFromPoints(points),\n      // Remove scale effect, since it's applied after\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\n      bboxNoStroke = makeBoundingBoxFromPoints(\n        this.points.map((p) => transformPoint(p, matrix, true)),\n      ),\n      scale = new Point(this.scaleX, this.scaleY);\n    let offsetX = bbox.left + bbox.width / 2,\n      offsetY = bbox.top + bbox.height / 2;\n    if (this.exactBoundingBox) {\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\n      // Order of those assignments is important.\n      // offsetY relies on offsetX being already changed by the line above\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\n    }\n\n    return {\n      ...bbox,\n      pathOffset: new Point(offsetX, offsetY),\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\n        .subtract(new Point(bbox.left, bbox.top))\n        .multiply(scale),\n      strokeDiff: new Point(bbox.width, bbox.height)\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\n        .multiply(scale),\n    };\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = makeBoundingBoxFromPoints(this.points);\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\n      this._calcDimensions();\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\n    adjustPosition &&\n      this.setPositionByOrigin(\n        new Point(left + width / 2, top + height / 2),\n        CENTER,\n        CENTER,\n      );\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return this.exactBoundingBox;\n  }\n\n  /**\n   * @override stroke is taken in account in size\n   */\n  _getNonTransformedDimensions() {\n    return this.exactBoundingBox\n      ? // TODO: fix this\n        new Point(this.width, this.height)\n      : super._getNonTransformedDimensions();\n  }\n\n  /**\n   * @override stroke and skewing are taken into account when projecting stroke on points,\n   * therefore we don't want the default calculation to account for skewing as well.\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\n   *\n   * @private\n   */\n  _getTransformedDimensions(options: any = {}) {\n    if (this.exactBoundingBox) {\n      let size: Point;\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\n        the stroke projections are affected.\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\n      if (\n        Object.keys(options).some(\n          (key) =>\n            this.strokeUniform ||\n            (this.constructor as typeof Polyline).layoutProperties.includes(\n              key as keyof TProjectStrokeOnPointsOptions,\n            ),\n        )\n      ) {\n        const { width, height } = this._calcDimensions(options);\n        size = new Point(options.width ?? width, options.height ?? height);\n      } else {\n        size = new Point(\n          options.width ?? this.width,\n          options.height ?? this.height,\n        );\n      }\n      return size.multiply(\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY),\n      );\n    } else {\n      return super._getTransformedDimensions(options);\n    }\n  }\n\n  /**\n   * Recalculates dimensions when changing skew and scale\n   * @private\n   */\n  _set(key: string, value: any) {\n    const changed = this.initialized && this[key as keyof this] !== value;\n    const output = super._set(key, value);\n    if (\n      this.exactBoundingBox &&\n      changed &&\n      (((key === SCALE_X || key === SCALE_Y) &&\n        this.strokeUniform &&\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          'strokeUniform',\n        )) ||\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          key as keyof Polyline,\n        ))\n    ) {\n      this.setDimensions();\n    }\n    return output;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      points: this.points.map(({ x, y }) => ({ x, y })),\n    };\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const points = [],\n      diffX = this.pathOffset.x,\n      diffY = this.pathOffset.y,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n\n    for (let i = 0, len = this.points.length; i < len; i++) {\n      points.push(\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\n        ',',\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\n        ' ',\n      );\n    }\n    return [\n      `<${\n        (this.constructor as typeof Polyline).type.toLowerCase() as\n          | 'polyline'\n          | 'polygon'\n      } `,\n      'COMMON_PARTS',\n      `points=\"${points.join('')}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const len = this.points.length,\n      x = this.pathOffset.x,\n      y = this.pathOffset.y;\n\n    if (!len || isNaN(this.points[len - 1].y)) {\n      // do not draw if no points or odd points\n      // NaN comes from parseFloat of a empty string in parser\n      return;\n    }\n    ctx.beginPath();\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n    for (let i = 0; i < len; i++) {\n      const point = this.points[i];\n      ctx.lineTo(point.x - x, point.y - y);\n    }\n    !this.isOpen() && ctx.closePath();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance\n   */\n  complexity(): number {\n    return this.points.length;\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\n   * @static\n   * @memberOf Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns Polyline instance from an SVG element\n   * @static\n   * @memberOf Polyline\n   * @param {HTMLElement} element Element to parser\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const points = parsePointsAttribute(element.getAttribute('points')),\n      // we omit left and top to instruct the constructor to position the object using the bbox\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      { left, top, ...parsedAttributes } = parseAttributes(\n        element,\n        this.ATTRIBUTE_NAMES,\n        cssRules,\n      );\n    return new this(points, {\n      ...parsedAttributes,\n      ...options,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Polyline instance from an object representation\n   * @static\n   * @memberOf Polyline\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Polyline>}\n   */\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\n    return this._fromObject<Polyline>(object, {\n      extraParam: 'points',\n    });\n  }\n}\n\nclassRegistry.setClass(Polyline);\nclassRegistry.setSVGClass(Polyline);\n","import { classRegistry } from '../ClassRegistry';\nimport { Polyline, polylineDefaultValues } from './Polyline';\n\nexport class Polygon extends Polyline {\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polygon';\n\n  protected isOpen() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Polygon);\nclassRegistry.setSVGClass(Polygon);\n","import { FILL, LEFT, STROKE, reNewline } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { FabricText } from './Text';\n\nconst fontProperties = [\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontStyle',\n] as const;\n\nexport const textDecorationProperties = [\n  'underline',\n  'overline',\n  'linethrough',\n] as const;\n\nexport const textLayoutProperties: string[] = [\n  ...fontProperties,\n  'lineHeight',\n  'text',\n  'charSpacing',\n  'textAlign',\n  'styles',\n  'path',\n  'pathStartOffset',\n  'pathSide',\n  'pathAlign',\n];\n\nexport const additionalProps = [\n  ...textLayoutProperties,\n  ...textDecorationProperties,\n  'textBackgroundColor',\n  'direction',\n] as const;\n\nexport type StylePropertiesType =\n  | 'fill'\n  | 'stroke'\n  | 'strokeWidth'\n  | 'fontSize'\n  | 'fontFamily'\n  | 'fontWeight'\n  | 'fontStyle'\n  | 'textBackgroundColor'\n  | 'deltaY'\n  | 'overline'\n  | 'underline'\n  | 'linethrough';\n\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\n  ...fontProperties,\n  ...textDecorationProperties,\n  STROKE,\n  'strokeWidth',\n  FILL,\n  'deltaY',\n  'textBackgroundColor',\n] as const;\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\n  _reNewline: reNewline,\n  _reSpacesAndTabs: /[ \\t\\r]/g,\n  _reSpaceAndTab: /[ \\t\\r]/,\n  _reWords: /\\S+/g,\n  fontSize: 40,\n  fontWeight: 'normal',\n  fontFamily: 'Times New Roman',\n  underline: false,\n  overline: false,\n  linethrough: false,\n  textAlign: LEFT,\n  fontStyle: 'normal',\n  lineHeight: 1.16,\n  superscript: {\n    size: 0.6, // fontSize factor\n    baseline: -0.35, // baseline-shift factor (upwards)\n  },\n  subscript: {\n    size: 0.6, // fontSize factor\n    baseline: 0.11, // baseline-shift factor (downwards)\n  },\n  textBackgroundColor: '',\n  stroke: null,\n  shadow: null,\n  path: undefined,\n  pathStartOffset: 0,\n  pathSide: LEFT,\n  pathAlign: 'baseline',\n  _fontSizeFraction: 0.222,\n  offsets: {\n    underline: 0.1,\n    linethrough: -0.315,\n    overline: -0.88,\n  },\n  _fontSizeMult: 1.13,\n  charSpacing: 0,\n  deltaY: 0,\n  direction: 'ltr',\n  CACHE_FONT_SIZE: 400,\n  MIN_TEXT_WIDTH: 2,\n};\n\nexport const JUSTIFY = 'justify';\nexport const JUSTIFY_LEFT = 'justify-left';\nexport const JUSTIFY_RIGHT = 'justify-right';\nexport const JUSTIFY_CENTER = 'justify-center';\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { TOptions } from '../../typedefs';\nimport { FabricObject } from '../Object/FabricObject';\nimport { styleProperties } from './constants';\nimport type { StylePropertiesType } from './constants';\nimport type { FabricText } from './Text';\nimport { pick } from '../../util';\nimport { pickBy } from '../../util/misc/pick';\n\nexport type CompleteTextStyleDeclaration = Pick<\n  FabricText,\n  StylePropertiesType\n>;\n\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\n\nexport type TextStyle = {\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\n};\n\nexport abstract class StyledText<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  declare abstract styles: TextStyle;\n  protected declare abstract _textLines: string[][];\n  protected declare _forceClearCache: boolean;\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\n  abstract get2DCursorLocation(\n    selectionStart: number,\n    skipWrapping?: boolean,\n  ): { charIndex: number; lineIndex: number };\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex?: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return true;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        // eslint-disable-next-line no-unused-vars\n        for (const p3 in obj[p1][p2]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if object has a style property or has it ina specified line\n   * This function is used to detect if a text will use a particular property or not.\n   * @param {String} property to check for\n   * @param {Number} lineIndex to check the style on\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\n    if (!this.styles) {\n      return false;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return false;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { 0: this.styles[lineIndex] };\n    // eslint-disable-next-line\n    for (const p1 in obj) {\n      // eslint-disable-next-line\n      for (const p2 in obj[p1]) {\n        if (typeof obj[p1][p2][property] !== 'undefined') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if characters in a text have a value for a property\n   * whose value matches the textbox's value for that property.  If so,\n   * the character-level property is deleted.  If the character\n   * has no other properties, then it is also deleted.  Finally,\n   * if the line containing that character has no other characters\n   * then it also is deleted.\n   */\n  cleanStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return false;\n    }\n    const obj = this.styles;\n    let stylesCount = 0,\n      letterCount,\n      stylePropertyValue,\n      allStyleObjectPropertiesMatch = true,\n      graphemeCount = 0;\n    for (const p1 in obj) {\n      letterCount = 0;\n      for (const p2 in obj[p1]) {\n        const styleObject = obj[p1][p2] || {},\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\n\n        stylesCount++;\n\n        if (stylePropertyHasBeenSet) {\n          if (!stylePropertyValue) {\n            stylePropertyValue = styleObject[property];\n          } else if (styleObject[property] !== stylePropertyValue) {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (styleObject[property] === this[property as keyof this]) {\n            delete styleObject[property];\n          }\n        } else {\n          allStyleObjectPropertiesMatch = false;\n        }\n\n        if (Object.keys(styleObject).length !== 0) {\n          letterCount++;\n        } else {\n          delete obj[p1][p2];\n        }\n      }\n\n      if (letterCount === 0) {\n        delete obj[p1];\n      }\n    }\n    // if every grapheme has the same style set then\n    // delete those styles and set it on the parent\n    for (let i = 0; i < this._textLines.length; i++) {\n      graphemeCount += this._textLines[i].length;\n    }\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n      this[property as keyof this] = stylePropertyValue as any;\n      this.removeStyle(property);\n    }\n  }\n\n  /**\n   * Remove a style property or properties from all individual character styles\n   * in a text object.  Deletes the character style object if it contains no other style\n   * props.  Deletes a line style object if it contains no other character styles.\n   *\n   * @param {String} props The property to remove from character styles.\n   */\n  removeStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return;\n    }\n    const obj = this.styles;\n    let line, lineNum, charNum;\n    for (lineNum in obj) {\n      line = obj[lineNum];\n      for (charNum in line) {\n        delete line[charNum][property];\n        if (Object.keys(line[charNum]).length === 0) {\n          delete line[charNum];\n        }\n      }\n      if (Object.keys(line).length === 0) {\n        delete obj[lineNum];\n      }\n    }\n  }\n\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\n\n    if (!this._getLineStyle(lineIndex)) {\n      this._setLineStyle(lineIndex);\n    }\n\n    const newStyle = pickBy(\n      {\n        // first create a new object that is a merge of existing and new\n        ...this._getStyleDeclaration(lineIndex, charIndex),\n        ...style,\n        // use the predicate to discard undefined values\n      },\n      (value) => value !== undefined,\n    );\n\n    // finally assign to the old position the new style\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number,\n    endIndex?: number,\n    complete?: boolean,\n  ): TextStyleDeclaration[] {\n    const styles: TextStyleDeclaration[] = [];\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      styles.push(this.getStyleAtPosition(i, complete));\n    }\n    return styles;\n  }\n\n  /**\n   * Gets style of a current selection/cursor position\n   * @param {Number} position  to get styles at\n   * @param {Boolean} [complete] full style if true\n   * @return {Object} style Style object at a specified index\n   * @private\n   */\n  getStyleAtPosition(position: number, complete?: boolean) {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\n    return complete\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\n      : this._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} styles Styles object\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\n   */\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      this._extendStyles(i, styles);\n    }\n    /* not included in _extendStyles to avoid clearing cache more than once */\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Get a reference, not a clone, to the style object for a given character,\n   * if no style is set for a line or char, return a new empty object.\n   * This is tricky and confusing because when you get an empty object you can't\n   * determine if it is a reference or a new one.\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    const lineStyle = this.styles && this.styles[lineIndex];\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\n  }\n\n  /**\n   * return a new object that contains all the style property for a character\n   * the object returned is newly created\n   * @param {Number} lineIndex of the line where the character is\n   * @param {Number} charIndex position of the character on the line\n   * @return {Object} style object\n   */\n  getCompleteStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): CompleteTextStyleDeclaration {\n    return {\n      ...pick(\n        this,\n        (this.constructor as typeof StyledText)\n          ._styleProperties as (keyof this)[],\n      ),\n      ...this._getStyleDeclaration(lineIndex, charIndex),\n    } as CompleteTextStyleDeclaration;\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    this.styles[lineIndex][charIndex] = style;\n  }\n\n  /**\n   *\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    delete this.styles[lineIndex][charIndex];\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @return {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    return !!this.styles[lineIndex];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    this.styles[lineIndex] = {};\n  }\n\n  protected _deleteLineStyle(lineIndex: number) {\n    delete this.styles[lineIndex];\n  }\n}\n","import { config } from '../../config';\nimport type { TSVGReviver } from '../../typedefs';\nimport { escapeXml } from '../../util/lang_string';\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\nimport { hasStyleChanged } from '../../util/misc/textStyles';\nimport { toFixed } from '../../util/misc/toFixed';\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\nimport { type TextStyleDeclaration } from './StyledText';\nimport { JUSTIFY } from '../Text/constants';\nimport type { FabricText } from './Text';\nimport { STROKE, FILL } from '../../constants';\n\nconst multipleSpacesRegex = /  +/g;\nconst dblQuoteRegex = /\"/g;\n\nfunction createSVGInlineRect(\n  color: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) {\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\n}\n\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\n    const offsets = this._getSVGLeftTopOffsets(),\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n    return this._wrapSVGTextAndBg(textAndBg);\n  }\n\n  toSVG(this: TextSVGExportMixin & FabricText, reviver?: TSVGReviver): string {\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      noStyle: true,\n      withShadow: true,\n    });\n  }\n\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\n    return {\n      textLeft: -this.width / 2,\n      textTop: -this.height / 2,\n      lineTop: this.getHeightOfLine(0),\n    };\n  }\n\n  private _wrapSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    {\n      textBgRects,\n      textSpans,\n    }: {\n      textSpans: string[];\n      textBgRects: string[];\n    },\n  ) {\n    const noShadow = true,\n      textDecoration = this.getSvgTextDecoration(this);\n    return [\n      textBgRects.join(''),\n      '\\t\\t<text xml:space=\"preserve\" ',\n      this.fontFamily\n        ? `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `\n        : '',\n      this.fontSize ? `font-size=\"${this.fontSize}\" ` : '',\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\n      'style=\"',\n      this.getSvgStyles(noShadow),\n      '\"',\n      this.addPaintOrder(),\n      ' >',\n      textSpans.join(''),\n      '</text>\\n',\n    ];\n  }\n\n  /**\n   * @private\n   * @param {Number} textTopOffset Text top offset\n   * @param {Number} textLeftOffset Text left offset\n   * @return {Object}\n   */\n  private _getSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    textTopOffset: number,\n    textLeftOffset: number,\n  ) {\n    const textSpans: string[] = [],\n      textBgRects: string[] = [];\n    let height = textTopOffset,\n      lineOffset;\n\n    // bounding-box background\n    this.backgroundColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          this.backgroundColor,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height,\n        ),\n      );\n\n    // text and text-background\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineOffset = this._getLineLeftOffset(i);\n      if (this.direction === 'rtl') {\n        lineOffset += this.width;\n      }\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n        this._setSVGTextLineBg(\n          textBgRects,\n          i,\n          textLeftOffset + lineOffset,\n          height,\n        );\n      }\n      this._setSVGTextLineText(\n        textSpans,\n        i,\n        textLeftOffset + lineOffset,\n        height,\n      );\n      height += this.getHeightOfLine(i);\n    }\n\n    return {\n      textSpans,\n      textBgRects,\n    };\n  }\n\n  private _createTextCharSpan(\n    this: TextSVGExportMixin & FabricText,\n    char: string,\n    styleDecl: TextStyleDeclaration,\n    left: number,\n    top: number,\n  ) {\n    const styleProps = this.getSvgSpanStyles(\n        styleDecl,\n        char !== char.trim() || !!char.match(multipleSpacesRegex),\n      ),\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\n      dy = styleDecl.deltaY,\n      dySpan = dy ? ` dy=\"${toFixed(dy, config.NUM_FRACTION_DIGITS)}\" ` : '';\n\n    return `<tspan x=\"${toFixed(\n      left,\n      config.NUM_FRACTION_DIGITS,\n    )}\" y=\"${toFixed(\n      top,\n      config.NUM_FRACTION_DIGITS,\n    )}\" ${dySpan}${fillStyles}>${escapeXml(char)}</tspan>`;\n  }\n\n  private _setSVGTextLineText(\n    this: TextSVGExportMixin & FabricText,\n    textSpans: string[],\n    lineIndex: number,\n    textLeftOffset: number,\n    textTopOffset: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      line = this._textLines[lineIndex];\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      style,\n      boxWidth = 0,\n      timeToRender;\n\n    textTopOffset +=\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i];\n      if (boxWidth === 0) {\n        textLeftOffset += charBox.kernedWidth - charBox.width;\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\n      }\n      if (timeToRender) {\n        style = this._getStyleDeclaration(lineIndex, i);\n        textSpans.push(\n          this._createTextCharSpan(\n            charsToRender,\n            style,\n            textLeftOffset,\n            textTopOffset,\n          ),\n        );\n        charsToRender = '';\n        actualStyle = nextStyle;\n        if (this.direction === 'rtl') {\n          textLeftOffset -= boxWidth;\n        } else {\n          textLeftOffset += boxWidth;\n        }\n        boxWidth = 0;\n      }\n    }\n  }\n\n  private _setSVGTextLineBg(\n    this: TextSVGExportMixin & FabricText,\n    textBgRects: (string | number)[],\n    i: number,\n    leftOffset: number,\n    textTopOffset: number,\n  ) {\n    const line = this._textLines[i],\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\n    let boxWidth = 0,\n      boxStart = 0,\n      currentColor,\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n    for (let j = 0; j < line.length; j++) {\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n      if (currentColor !== lastColor) {\n        lastColor &&\n          textBgRects.push(\n            ...createSVGInlineRect(\n              lastColor,\n              leftOffset + boxStart,\n              textTopOffset,\n              boxWidth,\n              heightOfLine,\n            ),\n          );\n        boxStart = left;\n        boxWidth = width;\n        lastColor = currentColor;\n      } else {\n        boxWidth += kernedWidth;\n      }\n    }\n    currentColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          lastColor,\n          leftOffset + boxStart,\n          textTopOffset,\n          boxWidth,\n          heightOfLine,\n        ),\n      );\n  }\n\n  /**\n   * @deprecated unused\n   */\n  _getSVGLineTopOffset(\n    this: TextSVGExportMixin & FabricText,\n    lineIndex: number,\n  ) {\n    let lineTopOffset = 0,\n      j;\n    for (j = 0; j < lineIndex; j++) {\n      lineTopOffset += this.getHeightOfLine(j);\n    }\n    const lastHeight = this.getHeightOfLine(j);\n    return {\n      lineTop: lineTopOffset,\n      offset:\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\n        (this.lineHeight * this._fontSizeMult),\n    };\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\n    return `${super.getSvgStyles(skipShadow)} white-space: pre;`;\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n   * @return {String}\n   */\n  getSvgSpanStyles(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n    useWhiteSpace?: boolean,\n  ) {\n    const {\n      fontFamily,\n      strokeWidth,\n      stroke,\n      fill,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      deltaY,\n    } = style;\n\n    const textDecoration = this.getSvgTextDecoration(style);\n\n    return [\n      stroke ? colorPropToSVG(STROKE, stroke) : '',\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\n      fontFamily\n        ? `font-family: ${\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\n              ? `'${fontFamily}'`\n              : fontFamily\n          }; `\n        : '',\n      fontSize ? `font-size: ${fontSize}px; ` : '',\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\n      textDecoration ? `text-decoration: ${textDecoration}; ` : textDecoration,\n      fill ? colorPropToSVG(FILL, fill) : '',\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\n      useWhiteSpace ? 'white-space: pre; ' : '',\n    ].join('');\n  }\n\n  /**\n   * Returns text-decoration property for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @return {String}\n   */\n  getSvgTextDecoration(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n  ) {\n    return (['overline', 'underline', 'line-through'] as const)\n      .filter(\n        (decoration) =>\n          style[\n            decoration.replace('-', '') as\n              | 'overline'\n              | 'underline'\n              | 'linethrough'\n          ],\n      )\n      .join(' ');\n  }\n}\n","import { cache } from '../../cache';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, STROKE } from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type {\n  CompleteTextStyleDeclaration,\n  TextStyle,\n  TextStyleDeclaration,\n} from './StyledText';\nimport { StyledText } from './StyledText';\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\nimport { parseAttributes } from '../../parser/parseAttributes';\nimport type {\n  Abortable,\n  TCacheCanvasDimensions,\n  TClassProperties,\n  TFiller,\n  TOptions,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { graphemeSplit } from '../../util/lang_string';\nimport { createCanvasElementFor } from '../../util/misc/dom';\nimport type { TextStyleArray } from '../../util/misc/textStyles';\nimport {\n  hasStyleChanged,\n  stylesFromArray,\n  stylesToArray,\n} from '../../util/misc/textStyles';\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\nimport { cacheProperties } from '../Object/FabricObject';\nimport type { Path } from '../Path';\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { StylePropertiesType } from './constants';\nimport {\n  additionalProps,\n  textDefaultValues,\n  textLayoutProperties,\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from './constants';\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\nimport { isFiller } from '../../util/typeAssertions';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { CSSRules } from '../../parser/typedefs';\n\nlet measuringContext: CanvasRenderingContext2D | null;\n\n/**\n * Return a context for measurement of text string.\n * if created it gets stored for reuse\n */\nfunction getMeasuringContext() {\n  if (!measuringContext) {\n    const canvas = createCanvasElementFor({\n      width: 0,\n      height: 0,\n    });\n    measuringContext = canvas.getContext('2d');\n  }\n  return measuringContext;\n}\n\nexport type TPathSide = 'left' | 'right';\n\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\n\nexport type TextLinesInfo = {\n  lines: string[];\n  graphemeLines: string[][];\n  graphemeText: string[];\n  _unwrappedLines: string[][];\n};\n\n/**\n * Measure and return the info of a single grapheme.\n * needs the the info of previous graphemes already filled\n * Override to customize measuring\n */\nexport type GraphemeBBox = {\n  width: number;\n  height: number;\n  kernedWidth: number;\n  left: number;\n  deltaY: number;\n  renderLeft?: number;\n  renderTop?: number;\n  angle?: number;\n};\n\n// @TODO this is not complete\ninterface UniqueTextProps {\n  charSpacing: number;\n  lineHeight: number;\n  fontSize: number;\n  fontWeight: string | number;\n  fontFamily: string;\n  fontStyle: string;\n  pathSide: TPathSide;\n  pathAlign: TPathAlign;\n  underline: boolean;\n  overline: boolean;\n  linethrough: boolean;\n  textAlign: string;\n  direction: CanvasDirection;\n  path?: Path;\n}\n\nexport interface SerializedTextProps\n  extends SerializedObjectProps,\n    UniqueTextProps {\n  styles: TextStyleArray | TextStyle;\n}\n\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\n  styles: TextStyle;\n}\n\n/**\n * Text class\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n */\nexport class FabricText<\n    Props extends TOptions<TextProps> = Partial<TextProps>,\n    SProps extends SerializedTextProps = SerializedTextProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends StyledText<Props, SProps, EventSpec>\n  implements UniqueTextProps\n{\n  /**\n   * Properties that requires a text layout recalculation when changed\n   * @type string[]\n   * @protected\n   */\n  static textLayoutProperties: string[] = textLayoutProperties;\n\n  /**\n   * @private\n   */\n  declare _reNewline: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespaces that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpacesAndTabs: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespace that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpaceAndTab: RegExp;\n\n  /**\n   * Use this regular expression to filter consecutive groups of non spaces.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reWords: RegExp;\n\n  declare text: string;\n\n  /**\n   * Font size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare fontSize: number;\n\n  /**\n   * Font weight (e.g. bold, normal, 400, 600, 800)\n   * @type {(Number|String)}\n   * @default\n   */\n  declare fontWeight: string | number;\n\n  /**\n   * Font family\n   * @type String\n   * @default\n   */\n  declare fontFamily: string;\n\n  /**\n   * Text decoration underline.\n   * @type Boolean\n   * @default\n   */\n  declare underline: boolean;\n\n  /**\n   * Text decoration overline.\n   * @type Boolean\n   * @default\n   */\n  declare overline: boolean;\n\n  /**\n   * Text decoration linethrough.\n   * @type Boolean\n   * @default\n   */\n  declare linethrough: boolean;\n\n  /**\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\n   * @type String\n   * @default\n   */\n  declare textAlign: string;\n\n  /**\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n   * @type String\n   * @default\n   */\n  declare fontStyle: string;\n\n  /**\n   * Line height\n   * @type Number\n   * @default\n   */\n  declare lineHeight: number;\n\n  /**\n   * Superscript schema object (minimum overlap)\n   */\n  declare superscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (upwards)\n     * @default -0.35\n     */\n    baseline: number;\n  };\n\n  /**\n   * Subscript schema object (minimum overlap)\n   */\n  declare subscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (downwards)\n     * @default 0.11\n     */\n    baseline: number;\n  };\n\n  /**\n   * Background color of text lines\n   * @type String\n   * @default\n   */\n  declare textBackgroundColor: string;\n\n  declare styles: TextStyle;\n\n  /**\n   * Path that the text should follow.\n   * since 4.6.0 the path will be drawn automatically.\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n   * if you want it to be hidden, assign visible = false to the path.\n   * This feature is in BETA, and SVG import/export is not yet supported.\n   * @type Path\n   * @example\n   * const textPath = new Text('Text on a path', {\n   *     top: 150,\n   *     left: 150,\n   *     textAlign: 'center',\n   *     charSpacing: -50,\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\n   *         strokeWidth: 1,\n   *         visible: false\n   *     }),\n   *     pathSide: 'left',\n   *     pathStartOffset: 0\n   * });\n   * @default\n   */\n  declare path?: Path;\n\n  /**\n   * Offset amount for text path starting position\n   * Only used when text has a path\n   * @type Number\n   * @default\n   */\n  declare pathStartOffset: number;\n\n  /**\n   * Which side of the path the text should be drawn on.\n   * Only used when text has a path\n   * @type {TPathSide} 'left|right'\n   * @default\n   */\n  declare pathSide: TPathSide;\n\n  /**\n   * How text is aligned to the path. This property determines\n   * the perpendicular position of each character relative to the path.\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n   * This feature is in BETA, and its behavior may change\n   * @type TPathAlign\n   * @default\n   */\n  declare pathAlign: TPathAlign;\n\n  /**\n   * @private\n   */\n  declare _fontSizeFraction: number;\n\n  /**\n   * @private\n   */\n  declare offsets: { underline: number; linethrough: number; overline: number };\n\n  /**\n   * Text Line proportion to font Size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare _fontSizeMult: number;\n\n  /**\n   * additional space between characters\n   * expressed in thousands of em unit\n   * @type Number\n   * @default\n   */\n  declare charSpacing: number;\n\n  /**\n   * Baseline shift, styles only, keep at 0 for the main text object\n   * @type {Number}\n   * @default\n   */\n  declare deltaY: number;\n\n  /**\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n   * determine the direction of the text.\n   * This has to be set manually together with textAlign and originX for proper\n   * experience.\n   * some interesting link for the future\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n   * @since 4.5.0\n   * @type {CanvasDirection} 'ltr|rtl'\n   * @default\n   */\n  declare direction: CanvasDirection;\n\n  /**\n   * contains characters bounding boxes\n   * This variable is considered to be protected.\n   * But for how mixins are implemented right now, we can't leave it private\n   * @protected\n   */\n  __charBounds: GraphemeBBox[][] = [];\n\n  /**\n   * use this size when measuring text. To avoid IE11 rounding errors\n   * @type {Number}\n   * @default\n   * @readonly\n   * @private\n   */\n  declare CACHE_FONT_SIZE: number;\n\n  /**\n   * contains the min text width to avoid getting 0\n   * @type {Number}\n   * @default\n   */\n  declare MIN_TEXT_WIDTH: number;\n\n  /**\n   * contains the the text of the object, divided in lines as they are displayed\n   * on screen. Wrapping will divide the text independently of line breaks\n   * @type {string[]}\n   * @default\n   */\n  declare textLines: string[];\n\n  /**\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\n   * @type {string[]}\n   * @default\n   */\n  declare _textLines: string[][];\n\n  declare _unwrappedTextLines: string[][];\n  declare _text: string[];\n  declare cursorWidth: number;\n  declare __lineHeights: number[];\n  declare __lineWidths: number[];\n  declare initialized?: true;\n\n  static cacheProperties = [...cacheProperties, ...additionalProps];\n\n  static ownDefaults = textDefaultValues;\n\n  static type = 'Text';\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\n  }\n\n  constructor(text: string, options?: Props) {\n    super();\n    Object.assign(this, FabricText.ownDefaults);\n    this.setOptions(options);\n    if (!this.styles) {\n      this.styles = {};\n    }\n    this.text = text;\n    this.initialized = true;\n    if (this.path) {\n      this.setPathInfo();\n    }\n    this.initDimensions();\n    this.setCoords();\n  }\n\n  /**\n   * If text has a path, it will add the extra information needed\n   * for path and text calculations\n   */\n  setPathInfo() {\n    const path = this.path;\n    if (path) {\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\n    }\n  }\n\n  /**\n   * @private\n   * Divides text into lines of text and lines of graphemes.\n   */\n  _splitText(): TextLinesInfo {\n    const newLines = this._splitTextIntoLines(this.text);\n    this.textLines = newLines.lines;\n    this._textLines = newLines.graphemeLines;\n    this._unwrappedTextLines = newLines._unwrappedLines;\n    this._text = newLines.graphemeText;\n    return newLines;\n  }\n\n  /**\n   * Initialize or update text dimensions.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   */\n  initDimensions() {\n    this._splitText();\n    this._clearCache();\n    this.dirty = true;\n    if (this.path) {\n      this.width = this.path.width;\n      this.height = this.path.height;\n    } else {\n      this.width =\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      this.height = this.calcTextHeight();\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n  }\n\n  /**\n   * Enlarge space boxes and shift the others\n   */\n  enlargeSpaces() {\n    let diffSpace,\n      currentLineWidth,\n      numberOfSpaces,\n      accumulatedSpace,\n      line,\n      charBound,\n      spaces;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      if (\n        this.textAlign !== JUSTIFY &&\n        (i === len - 1 || this.isEndOfWrapping(i))\n      ) {\n        continue;\n      }\n      accumulatedSpace = 0;\n      line = this._textLines[i];\n      currentLineWidth = this.getLineWidth(i);\n      if (\n        currentLineWidth < this.width &&\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\n      ) {\n        numberOfSpaces = spaces.length;\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n        for (let j = 0; j <= line.length; j++) {\n          charBound = this.__charBounds[i][j];\n          if (this._reSpaceAndTab.test(line[j])) {\n            charBound.width += diffSpace;\n            charBound.kernedWidth += diffSpace;\n            charBound.left += accumulatedSpace;\n            accumulatedSpace += diffSpace;\n          } else {\n            charBound.left += accumulatedSpace;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    return lineIndex === this._textLines.length - 1;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * It return always 1 for text and Itext. Textbox has its own implementation\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\n  missingNewlineOffset(_lineIndex: number): 1 {\n    return 1;\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor\n   * @param {Number} selectionStart\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n    let i: number;\n    for (i = 0; i < lines.length; i++) {\n      if (selectionStart <= lines[i].length) {\n        return {\n          lineIndex: i,\n          charIndex: selectionStart,\n        };\n      }\n      selectionStart -=\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\n    }\n    return {\n      lineIndex: i - 1,\n      charIndex:\n        lines[i - 1].length < selectionStart\n          ? lines[i - 1].length\n          : selectionStart,\n    };\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of text object\n   */\n  toString(): string {\n    return `#<Text (${this.complexity()}): { \"text\": \"${\n      this.text\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @param {Object} dim.x width of object to be cached\n   * @param {Object} dim.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const dims = super._getCacheCanvasDimensions();\n    const fontSize = this.fontSize;\n    dims.width += fontSize * dims.zoomX;\n    dims.height += fontSize * dims.zoomY;\n    return dims;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const path = this.path;\n    path && !path.isNotVisible() && path._render(ctx);\n    this._setTextStyles(ctx);\n    this._renderTextLinesBackground(ctx);\n    this._renderTextDecoration(ctx, 'underline');\n    this._renderText(ctx);\n    this._renderTextDecoration(ctx, 'overline');\n    this._renderTextDecoration(ctx, 'linethrough');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderText(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderTextStroke(ctx);\n      this._renderTextFill(ctx);\n    } else {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    }\n  }\n\n  /**\n   * Set the font parameter of the context with the object properties or with charStyle\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [charStyle] object with font style properties\n   * @param {String} [charStyle.fontFamily] Font Family\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n   * @param {String} [charStyle.fontWeight] Font weight\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n   */\n  _setTextStyles(\n    ctx: CanvasRenderingContext2D,\n    charStyle?: any,\n    forMeasuring?: boolean,\n  ) {\n    ctx.textBaseline = 'alphabetic';\n    if (this.path) {\n      switch (this.pathAlign) {\n        case CENTER:\n          ctx.textBaseline = 'middle';\n          break;\n        case 'ascender':\n          ctx.textBaseline = TOP;\n          break;\n        case 'descender':\n          ctx.textBaseline = BOTTOM;\n          break;\n      }\n    }\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n  }\n\n  /**\n   * calculate and return the text Width measuring each line.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {Number} Maximum width of Text object\n   */\n  calcTextWidth(): number {\n    let maxWidth = this.getLineWidth(0);\n\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\n      const currentLineWidth = this.getLineWidth(i);\n      if (currentLineWidth > maxWidth) {\n        maxWidth = currentLineWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  /**\n   * @private\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} line Text to render\n   * @param {Number} left Left position of text\n   * @param {Number} top Top position of text\n   * @param {Number} lineIndex Index of a line in a text\n   */\n  _renderTextLine(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: string[],\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    this._renderChars(method, ctx, line, left, top, lineIndex);\n  }\n\n  /**\n   * Renders the text background for lines, taking care of style\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n      return;\n    }\n    const originalFill = ctx.fillStyle,\n      leftOffset = this._getLeftOffset();\n    let lineTopOffset = this._getTopOffset();\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (\n        !this.textBackgroundColor &&\n        !this.styleHas('textBackgroundColor', i)\n      ) {\n        lineTopOffset += heightOfLine;\n        continue;\n      }\n      const jlen = this._textLines[i].length;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxWidth = 0;\n      let boxStart = 0;\n      let drawStart;\n      let currentColor;\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (let j = 0; j < jlen; j++) {\n        // at this point charbox are either standard or full with pathInfo if there is a path.\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (this.path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillStyle = currentColor;\n          currentColor &&\n            ctx.fillRect(\n              -charBox.width / 2,\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight,\n            );\n          ctx.restore();\n        } else if (currentColor !== lastColor) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = lastColor;\n          lastColor &&\n            ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight,\n            );\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      if (currentColor && !this.path) {\n        drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(\n          drawStart,\n          lineTopOffset,\n          boxWidth,\n          heightOfLine / this.lineHeight,\n        );\n      }\n      lineTopOffset += heightOfLine;\n    }\n    ctx.fillStyle = originalFill;\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * measure and return the width of a single character.\n   * possibly overridden to accommodate different measure logic or\n   * to hook some external lib for character measurement\n   * @private\n   * @param {String} _char, char to be measured\n   * @param {Object} charStyle style of char to be measured\n   * @param {String} [previousChar] previous char\n   * @param {Object} [prevCharStyle] style of previous char\n   */\n  _measureChar(\n    _char: string,\n    charStyle: CompleteTextStyleDeclaration,\n    previousChar: string | undefined,\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>,\n  ) {\n    const fontCache = cache.getFontCache(charStyle),\n      fontDeclaration = this._getFontDeclaration(charStyle),\n      couple = previousChar + _char,\n      stylesAreEqual =\n        previousChar &&\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\n    let width: number | undefined,\n      coupleWidth: number | undefined,\n      previousWidth: number | undefined,\n      kernedWidth: number | undefined;\n\n    if (previousChar && fontCache[previousChar] !== undefined) {\n      previousWidth = fontCache[previousChar];\n    }\n    if (fontCache[_char] !== undefined) {\n      kernedWidth = width = fontCache[_char];\n    }\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\n      coupleWidth = fontCache[couple];\n      kernedWidth = coupleWidth - previousWidth!;\n    }\n    if (\n      width === undefined ||\n      previousWidth === undefined ||\n      coupleWidth === undefined\n    ) {\n      const ctx = getMeasuringContext()!;\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n      this._setTextStyles(ctx, charStyle, true);\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        // safe to use the non-null since if undefined we defined it before.\n        kernedWidth = coupleWidth - previousWidth!;\n      }\n    }\n    return {\n      width: width * fontMultiplier,\n      kernedWidth: kernedWidth! * fontMultiplier,\n    };\n  }\n\n  /**\n   * Computes height of character at given position\n   * @param {Number} line the line index number\n   * @param {Number} _char the character index number\n   * @return {Number} fontSize of the character\n   */\n  getHeightOfChar(line: number, _char: number): number {\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\n  }\n\n  /**\n   * measure a text line measuring all characters.\n   * @param {Number} lineIndex line number\n   */\n  measureLine(lineIndex: number) {\n    const lineInfo = this._measureLine(lineIndex);\n    if (this.charSpacing !== 0) {\n      lineInfo.width -= this._getWidthOfCharSpacing();\n    }\n    if (lineInfo.width < 0) {\n      lineInfo.width = 0;\n    }\n    return lineInfo;\n  }\n\n  /**\n   * measure every grapheme of a line, populating __charBounds\n   * @param {Number} lineIndex\n   * @return {Object} object.width total width of characters\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\n   */\n  _measureLine(lineIndex: number) {\n    let width = 0,\n      prevGrapheme: string | undefined,\n      graphemeInfo: GraphemeBBox | undefined;\n\n    const reverse = this.pathSide === RIGHT,\n      path = this.path,\n      line = this._textLines[lineIndex],\n      llength = line.length,\n      lineBounds = new Array<GraphemeBBox>(llength);\n\n    this.__charBounds[lineIndex] = lineBounds;\n    for (let i = 0; i < llength; i++) {\n      const grapheme = line[i];\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n      lineBounds[i] = graphemeInfo;\n      width += graphemeInfo.kernedWidth;\n      prevGrapheme = grapheme;\n    }\n    // this latest bound box represent the last character of the line\n    // to simplify cursor handling in interactive mode.\n    lineBounds[llength] = {\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n      width: 0,\n      kernedWidth: 0,\n      height: this.fontSize,\n      deltaY: 0,\n    } as GraphemeBBox;\n    if (path && path.segmentsInfo) {\n      let positionInPath = 0;\n      const totalPathLength =\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\n      switch (this.textAlign) {\n        case LEFT:\n          positionInPath = reverse ? totalPathLength - width : 0;\n          break;\n        case CENTER:\n          positionInPath = (totalPathLength - width) / 2;\n          break;\n        case RIGHT:\n          positionInPath = reverse ? 0 : totalPathLength - width;\n          break;\n        //todo - add support for justify\n      }\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n      for (\n        let i = reverse ? llength - 1 : 0;\n        reverse ? i >= 0 : i < llength;\n        reverse ? i-- : i++\n      ) {\n        graphemeInfo = lineBounds[i];\n        if (positionInPath > totalPathLength) {\n          positionInPath %= totalPathLength;\n        } else if (positionInPath < 0) {\n          positionInPath += totalPathLength;\n        }\n        // it would probably much faster to send all the grapheme position for a line\n        // and calculate path position/angle at once.\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\n        positionInPath += graphemeInfo.kernedWidth;\n      }\n    }\n    return { width: width, numOfSpaces: 0 };\n  }\n\n  /**\n   * Calculate the angle  and the left,top position of the char that follow a path.\n   * It appends it to graphemeInfo to be reused later at rendering\n   * @private\n   * @param {Number} positionInPath to be measured\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\n   * @param {Object} startingPoint position of the point\n   */\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n      path = this.path!;\n\n    // we are at currentPositionOnPath. we want to know what point on the path is.\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\n  }\n\n  /**\n   *\n   * @param {String} grapheme to be measured\n   * @param {Number} lineIndex index of the line where the char is\n   * @param {Number} charIndex position in the line\n   * @param {String} [prevGrapheme] character preceding the one to be measured\n   * @returns {GraphemeBBox} grapheme bbox\n   */\n  _getGraphemeBox(\n    grapheme: string,\n    lineIndex: number,\n    charIndex: number,\n    prevGrapheme?: string,\n    skipLeft?: boolean,\n  ): GraphemeBBox {\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      prevStyle = prevGrapheme\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\n        : {},\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\n    let kernedWidth = info.kernedWidth,\n      width = info.width,\n      charSpacing;\n\n    if (this.charSpacing !== 0) {\n      charSpacing = this._getWidthOfCharSpacing();\n      width += charSpacing;\n      kernedWidth += charSpacing;\n    }\n\n    const box: GraphemeBBox = {\n      width,\n      left: 0,\n      height: style.fontSize,\n      kernedWidth,\n      deltaY: style.deltaY,\n    };\n    if (charIndex > 0 && !skipLeft) {\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\n      box.left =\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\n    }\n    return box;\n  }\n\n  /**\n   * Calculate height of line at 'lineIndex'\n   * @param {Number} lineIndex index of line to calculate\n   * @return {Number}\n   */\n  getHeightOfLine(lineIndex: number): number {\n    if (this.__lineHeights[lineIndex]) {\n      return this.__lineHeights[lineIndex];\n    }\n\n    // char 0 is measured before the line cycle because it needs to char\n    // emptylines\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n    }\n\n    return (this.__lineHeights[lineIndex] =\n      maxHeight * this.lineHeight * this._fontSizeMult);\n  }\n\n  /**\n   * Calculate text box height\n   */\n  calcTextHeight() {\n    let lineHeight,\n      height = 0;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineHeight = this.getHeightOfLine(i);\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n    }\n    return height;\n  }\n\n  /**\n   * @private\n   * @return {Number} Left offset\n   */\n  _getLeftOffset(): number {\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n  }\n\n  /**\n   * @private\n   * @return {Number} Top offset\n   */\n  _getTopOffset(): number {\n    return -this.height / 2;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   */\n  _renderTextCommon(\n    ctx: CanvasRenderingContext2D,\n    method: 'fillText' | 'strokeText',\n  ) {\n    ctx.save();\n    let lineHeights = 0;\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset();\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i),\n        maxHeight = heightOfLine / this.lineHeight,\n        leftOffset = this._getLineLeftOffset(i);\n      this._renderTextLine(\n        method,\n        ctx,\n        this._textLines[i],\n        left + leftOffset,\n        top + lineHeights + maxHeight,\n        i,\n      );\n      lineHeights += heightOfLine;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill && !this.styleHas(FILL)) {\n      return;\n    }\n\n    this._renderTextCommon(ctx, 'fillText');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    this._setLineDash(ctx, this.strokeDashArray);\n    ctx.beginPath();\n    this._renderTextCommon(ctx, 'strokeText');\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {String} method fillText or strokeText.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} line Content of the line, splitted in an array by grapheme\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} lineIndex\n   */\n  _renderChars(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: Array<any>,\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      path = this.path,\n      shortCut =\n        !isJustify &&\n        this.charSpacing === 0 &&\n        this.isEmptyStyles(lineIndex) &&\n        !path,\n      isLtr = this.direction === 'ltr',\n      sign = this.direction === 'ltr' ? 1 : -1,\n      // this was changed in the PR #7674\n      // currentDirection = ctx.canvas.getAttribute('dir');\n      currentDirection = ctx.direction;\n\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      boxWidth = 0,\n      timeToRender,\n      drawingLeft;\n\n    ctx.save();\n    if (currentDirection !== this.direction) {\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\n    }\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\n    if (shortCut) {\n      // render all the line in one pass without checking\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\n      ctx.restore();\n      return;\n    }\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\n      if (boxWidth === 0) {\n        left += sign * (charBox.kernedWidth - charBox.width);\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\n      }\n      if (timeToRender) {\n        if (path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            -boxWidth / 2,\n            0,\n          );\n          ctx.restore();\n        } else {\n          drawingLeft = left;\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            drawingLeft,\n            top,\n          );\n        }\n        charsToRender = '';\n        actualStyle = nextStyle;\n        left += sign * boxWidth;\n        boxWidth = 0;\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {TFiller} filler a fabric gradient instance\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\n   */\n  _applyPatternGradientTransformText(filler: TFiller) {\n    // TODO: verify compatibility with strokeUniform\n    const width = this.width + this.strokeWidth,\n      height = this.height + this.strokeWidth,\n      pCanvas = createCanvasElementFor({\n        width,\n        height,\n      }),\n      pCtx = pCanvas.getContext('2d')!;\n    pCanvas.width = width;\n    pCanvas.height = height;\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.fillStyle = filler.toLive(pCtx)!;\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fill();\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\n  }\n\n  handleFiller<T extends 'fill' | 'stroke'>(\n    ctx: CanvasRenderingContext2D,\n    property: `${T}Style`,\n    filler: TFiller | string,\n  ): { offsetX: number; offsetY: number } {\n    let offsetX: number, offsetY: number;\n    if (isFiller(filler)) {\n      if (\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\n        (filler as Gradient<'linear'>).gradientTransform ||\n        (filler as Pattern).patternTransform\n      ) {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        offsetX = -this.width / 2;\n        offsetY = -this.height / 2;\n        ctx.translate(offsetX, offsetY);\n        ctx[property] = this._applyPatternGradientTransformText(filler);\n        return { offsetX, offsetY };\n      } else {\n        // is a simple gradient or pattern\n        ctx[property] = filler.toLive(ctx)!;\n        return this._applyPatternGradientTransform(ctx, filler);\n      }\n    } else {\n      // is a color\n      ctx[property] = filler;\n    }\n    return { offsetX: 0, offsetY: 0 };\n  }\n\n  /**\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\n   * @returns\n   */\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    {\n      stroke,\n      strokeWidth,\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>,\n  ) {\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineDashOffset = this.strokeDashOffset;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.miterLimit = this.strokeMiterLimit;\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\n  }\n\n  /**\n   * This function prepare the canvas for a ill style, and fill\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with ill defined\n   * @returns\n   */\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    return this.handleFiller(ctx, 'fillStyle', fill!);\n  }\n\n  /**\n   * @private\n   * @param {String} method\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {String} _char\n   * @param {Number} left Left coordinate\n   * @param {Number} top Top coordinate\n   * @param {Number} lineHeight Height of the line\n   */\n  _renderChar(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    lineIndex: number,\n    charIndex: number,\n    _char: string,\n    left: number,\n    top: number,\n  ) {\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      shouldFill = method === 'fillText' && fullDecl.fill,\n      shouldStroke =\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n    if (!shouldStroke && !shouldFill) {\n      return;\n    }\n    ctx.save();\n\n    ctx.font = this._getFontDeclaration(fullDecl);\n\n    if (decl.textBackgroundColor) {\n      this._removeShadow(ctx);\n    }\n    if (decl.deltaY) {\n      top += decl.deltaY;\n    }\n\n    if (shouldFill) {\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\n      ctx.fillText(\n        _char,\n        left - fillOffsets.offsetX,\n        top - fillOffsets.offsetY,\n      );\n    }\n\n    if (shouldStroke) {\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\n      ctx.strokeText(\n        _char,\n        left - strokeOffsets.offsetX,\n        top - strokeOffsets.offsetY,\n      );\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSuperscript(start: number, end: number) {\n    this._setScript(start, end, this.superscript);\n  }\n\n  /**\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSubscript(start: number, end: number) {\n    this._setScript(start, end, this.subscript);\n  }\n\n  /**\n   * Applies 'schema' at given position\n   * @private\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   * @param {Number} schema\n   */\n  protected _setScript(\n    start: number,\n    end: number,\n    schema: {\n      size: number;\n      baseline: number;\n    },\n  ) {\n    const loc = this.get2DCursorLocation(start, true),\n      fontSize = this.getValueOfPropertyAt(\n        loc.lineIndex,\n        loc.charIndex,\n        'fontSize',\n      ),\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n      style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline,\n      };\n    this.setSelectionStyles(style, start, end);\n  }\n\n  /**\n   * @private\n   * @param {Number} lineIndex index text line\n   * @return {Number} Line left offset\n   */\n  _getLineLeftOffset(lineIndex: number): number {\n    const lineWidth = this.getLineWidth(lineIndex),\n      lineDiff = this.width - lineWidth,\n      textAlign = this.textAlign,\n      direction = this.direction,\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n    let leftOffset = 0;\n    if (\n      textAlign === JUSTIFY ||\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\n    ) {\n      return 0;\n    }\n    if (textAlign === CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (textAlign === JUSTIFY_CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === JUSTIFY_RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (direction === 'rtl') {\n      if (\n        textAlign === RIGHT ||\n        textAlign === JUSTIFY ||\n        textAlign === JUSTIFY_RIGHT\n      ) {\n        leftOffset = 0;\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\n        leftOffset = -lineDiff;\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\n        leftOffset = -lineDiff / 2;\n      }\n    }\n    return leftOffset;\n  }\n\n  /**\n   * @private\n   */\n  _clearCache() {\n    this._forceClearCache = false;\n    this.__lineWidths = [];\n    this.__lineHeights = [];\n    this.__charBounds = [];\n  }\n\n  /**\n   * Measure a single line given its index. Used to calculate the initial\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\n   * @private\n   * @param {Number} lineIndex line number\n   * @return {Number} Line width\n   */\n  getLineWidth(lineIndex: number): number {\n    if (this.__lineWidths[lineIndex] !== undefined) {\n      return this.__lineWidths[lineIndex];\n    }\n\n    const { width } = this.measureLine(lineIndex);\n    this.__lineWidths[lineIndex] = width;\n    return width;\n  }\n\n  _getWidthOfCharSpacing() {\n    if (this.charSpacing !== 0) {\n      return (this.fontSize * this.charSpacing) / 1000;\n    }\n    return 0;\n  }\n\n  /**\n   * Retrieves the value of property at given character position\n   * @param {Number} lineIndex the line number\n   * @param {Number} charIndex the character number\n   * @param {String} property the property name\n   * @returns the value of 'property'\n   */\n  getValueOfPropertyAt<T extends StylePropertiesType>(\n    lineIndex: number,\n    charIndex: number,\n    property: T,\n  ): this[T] {\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n    return (charStyle[property] ?? this[property]) as this[T];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextDecoration(\n    ctx: CanvasRenderingContext2D,\n    type: 'underline' | 'linethrough' | 'overline',\n  ) {\n    if (!this[type] && !this.styleHas(type)) {\n      return;\n    }\n    let topOffset = this._getTopOffset();\n    const leftOffset = this._getLeftOffset(),\n      path = this.path,\n      charSpacing = this._getWidthOfCharSpacing(),\n      offsetY = this.offsets[type];\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (!this[type] && !this.styleHas(type, i)) {\n        topOffset += heightOfLine;\n        continue;\n      }\n      const line = this._textLines[i];\n      const maxHeight = heightOfLine / this.lineHeight;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxStart = 0;\n      let boxWidth = 0;\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n      let lastFill = this.getValueOfPropertyAt(i, 0, FILL);\n      let currentDecoration;\n      let currentFill;\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n      let size = this.getHeightOfChar(i, 0);\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\n        currentFill = this.getValueOfPropertyAt(i, j, FILL);\n        const currentSize = this.getHeightOfChar(i, j);\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\n        if (path && currentDecoration && currentFill) {\n          ctx.save();\n          // bug? verify lastFill is a valid fill here.\n          ctx.fillStyle = lastFill as string;\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillRect(\n            -charBox.kernedWidth / 2,\n            offsetY * currentSize + currentDy,\n            charBox.kernedWidth,\n            this.fontSize / 15,\n          );\n          ctx.restore();\n        } else if (\n          (currentDecoration !== lastDecoration ||\n            currentFill !== lastFill ||\n            currentSize !== size ||\n            currentDy !== dy) &&\n          boxWidth > 0\n        ) {\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          if (lastDecoration && lastFill) {\n            // bug? verify lastFill is a valid fill here.\n            ctx.fillStyle = lastFill as string;\n            ctx.fillRect(\n              drawStart,\n              top + offsetY * size + dy,\n              boxWidth,\n              this.fontSize / 15,\n            );\n          }\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastDecoration = currentDecoration;\n          lastFill = currentFill;\n          size = currentSize;\n          dy = currentDy;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\n      if (this.direction === 'rtl') {\n        drawStart = this.width - drawStart - boxWidth;\n      }\n      ctx.fillStyle = currentFill as string;\n      currentDecoration &&\n        currentFill &&\n        ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15,\n        );\n      topOffset += heightOfLine;\n    }\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * return font declaration string for canvas context\n   * @param {Object} [styleObject] object\n   * @returns {String} font declaration formatted for canvas context.\n   */\n  _getFontDeclaration(\n    {\n      fontFamily = this.fontFamily,\n      fontStyle = this.fontStyle,\n      fontWeight = this.fontWeight,\n      fontSize = this.fontSize,\n    }: Partial<\n      Pick<\n        TextStyleDeclaration,\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\n      >\n    > = {},\n    forMeasuring?: boolean,\n  ): string {\n    const parsedFontFamily =\n      fontFamily.includes(\"'\") ||\n      fontFamily.includes('\"') ||\n      fontFamily.includes(',') ||\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\n        ? fontFamily\n        : `\"${fontFamily}\"`;\n    return [\n      fontStyle,\n      fontWeight,\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\n      parsedFontFamily,\n    ].join(' ');\n  }\n\n  /**\n   * Renders text instance on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    if (!this.visible) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    if (this._forceClearCache) {\n      this.initDimensions();\n    }\n    super.render(ctx);\n  }\n\n  /**\n   * Override this method to customize grapheme splitting\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\n   * is more comfortable to inject the correct util rather than having to override text\n   * in the middle of the prototype chain\n   * @param {string} value\n   * @returns {string[]} array of graphemes\n   */\n  graphemeSplit(value: string): string[] {\n    return graphemeSplit(value);\n  }\n\n  /**\n   * Returns the text as an array of lines.\n   * @param {String} text text to split\n   * @returns  Lines in the text\n   */\n  _splitTextIntoLines(text: string): TextLinesInfo {\n    const lines = text.split(this._reNewline),\n      newLines = new Array<string[]>(lines.length),\n      newLine = ['\\n'];\n    let newText: string[] = [];\n    for (let i = 0; i < lines.length; i++) {\n      newLines[i] = this.graphemeSplit(lines[i]);\n      newText = newText.concat(newLines[i], newLine);\n    }\n    newText.pop();\n    return {\n      _unwrappedLines: newLines,\n      lines: lines,\n      graphemeText: newText,\n      graphemeLines: newLines,\n    };\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\n      styles: stylesToArray(this.styles, this.text),\n      ...(this.path ? { path: this.path.toObject() } : {}),\n    };\n  }\n\n  set(key: string | any, value?: any) {\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\n    super.set(key, value);\n    let needsDims = false;\n    let isAddingPath = false;\n    if (typeof key === 'object') {\n      for (const _key in key) {\n        if (_key === 'path') {\n          this.setPathInfo();\n        }\n        needsDims = needsDims || textLayoutProperties.includes(_key);\n        isAddingPath = isAddingPath || _key === 'path';\n      }\n    } else {\n      needsDims = textLayoutProperties.includes(key);\n      isAddingPath = key === 'path';\n    }\n    if (isAddingPath) {\n      this.setPathInfo();\n    }\n    if (needsDims && this.initialized) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    return this;\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity\n   */\n  complexity(): number {\n    return 1;\n  }\n\n  /**\n   * List of generic font families\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#generic-name\n   */\n  static genericFonts = [\n    'serif',\n    'sans-serif',\n    'monospace',\n    'cursive',\n    'fantasy',\n    'system-ui',\n    'ui-serif',\n    'ui-sans-serif',\n    'ui-monospace',\n    'ui-rounded',\n    'math',\n    'emoji',\n    'fangsong',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\n   * @static\n   * @memberOf Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\n    'x',\n    'y',\n    'dx',\n    'dy',\n    'font-family',\n    'font-style',\n    'font-weight',\n    'font-size',\n    'letter-spacing',\n    'text-decoration',\n    'text-anchor',\n  );\n\n  /**\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf Text\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      FabricText.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    const {\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\n      textDecoration = '',\n      dx = 0,\n      dy = 0,\n      top = 0,\n      left = 0,\n      fontSize = DEFAULT_SVG_FONT_SIZE,\n      strokeWidth = 1,\n      ...restOfOptions\n    } = { ...options, ...parsedAttributes };\n\n    const textContent = (element.textContent || '')\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\n      .replace(/\\s+/g, ' ');\n\n    // this code here is probably the usual issue for SVG center find\n    // this can later looked at again and probably removed.\n\n    const text = new this(textContent, {\n        left: left + dx,\n        top: top + dy,\n        underline: textDecoration.includes('underline'),\n        overline: textDecoration.includes('overline'),\n        linethrough: textDecoration.includes('line-through'),\n        // we initialize this as 0\n        strokeWidth: 0,\n        fontSize,\n        ...restOfOptions,\n      }),\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\n      lineHeightDiff =\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\n      textHeight = text.getScaledHeight() + scaledDiff;\n\n    let offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (textAnchor === CENTER) {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (textAnchor === RIGHT) {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top:\n        text.top -\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\n          text.lineHeight,\n      strokeWidth,\n    });\n    return text;\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns FabricText instance from an object representation\n   * @param {Object} object plain js Object to create an instance from\n   * @returns {Promise<FabricText>}\n   */\n  static fromObject<\n    T extends TOptions<SerializedTextProps>,\n    S extends FabricText,\n  >(object: T) {\n    return this._fromObject<S>(\n      {\n        ...object,\n        styles: stylesFromArray(object.styles || {}, object.text),\n      },\n      {\n        extraParam: 'text',\n      },\n    );\n  }\n}\n\napplyMixins(FabricText, [TextSVGExportMixin]);\nclassRegistry.setClass(FabricText);\nclassRegistry.setSVGClass(FabricText);\n","import type {\n  DragEventData,\n  DropEventData,\n  TPointerEvent,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { IText } from './IText';\nimport { setStyle } from '../../util/dom_style';\nimport { cloneStyles } from '../../util/internals/cloneStyles';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, NONE } from '../../constants';\n\n/**\n * #### Dragging IText/Textbox Lifecycle\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\n */\nexport class DraggableTextDelegate {\n  readonly target: IText;\n  private __mouseDownInPlace = false;\n  private __dragStartFired = false;\n  private __isDraggingOver = false;\n  private __dragStartSelection?: {\n    selectionStart: number;\n    selectionEnd: number;\n  };\n  private __dragImageDisposer?: VoidFunction;\n  private _dispose?: () => void;\n\n  constructor(target: IText) {\n    this.target = target;\n    const disposers = [\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\n      this.target.on('drop', this.dropHandler.bind(this)),\n    ];\n    this._dispose = () => {\n      disposers.forEach((d) => d());\n      this._dispose = undefined;\n    };\n  }\n\n  isPointerOverSelection(e: TPointerEvent) {\n    const target = this.target;\n    const newSelection = target.getSelectionStartFromPointer(e);\n    return (\n      target.isEditing &&\n      newSelection >= target.selectionStart &&\n      newSelection <= target.selectionEnd &&\n      target.selectionStart < target.selectionEnd\n    );\n  }\n\n  /**\n   * @public override this method to disable dragging and default to mousedown logic\n   */\n  start(e: TPointerEvent) {\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\n  }\n\n  /**\n   * @public override this method to disable dragging without discarding selection\n   */\n  isActive() {\n    return this.__mouseDownInPlace;\n  }\n\n  /**\n   * Ends interaction and sets cursor in case of a click\n   * @returns true if was active\n   */\n  end(e: TPointerEvent) {\n    const active = this.isActive();\n    if (active && !this.__dragStartFired) {\n      // mousedown has been blocked since `active` is true => cursor has not been set.\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\n      // meaning this is actually a click, `active` is a false positive.\n      this.target.setCursorByClick(e);\n      this.target.initDelayedCursor(true);\n    }\n    this.__mouseDownInPlace = false;\n    this.__dragStartFired = false;\n    this.__isDraggingOver = false;\n    return active;\n  }\n\n  getDragStartSelection() {\n    return this.__dragStartSelection;\n  }\n\n  /**\n   * Override to customize the drag image\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\n   */\n  setDragImage(\n    e: DragEvent,\n    {\n      selectionStart,\n      selectionEnd,\n    }: {\n      selectionStart: number;\n      selectionEnd: number;\n    },\n  ) {\n    const target = this.target;\n    const canvas = target.canvas!;\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\n    const boundaries = target._getCursorBoundaries(selectionStart);\n    const selectionPosition = new Point(\n      boundaries.left + boundaries.leftOffset,\n      boundaries.top + boundaries.topOffset,\n    ).multiply(flipFactor);\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\n    const pointer = canvas.getScenePoint(e);\n    const diff = pointer.subtract(pos);\n    const retinaScaling = target.getCanvasRetinaScaling();\n    const bbox = target.getBoundingRect();\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\n    const vpt = canvas.viewportTransform;\n    const offset = correction.add(diff).transform(vpt, true);\n    //  prepare instance for drag image snapshot by making all non selected text invisible\n    const bgc = target.backgroundColor;\n    const styles = cloneStyles(target.styles);\n    target.backgroundColor = '';\n    const styleOverride = {\n      stroke: 'transparent',\n      fill: 'transparent',\n      textBackgroundColor: 'transparent',\n    };\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\n    target.dirty = true;\n    const dragImage = target.toCanvasElement({\n      enableRetinaScaling: canvas.enableRetinaScaling,\n      viewportTransform: true,\n    });\n    // restore values\n    target.backgroundColor = bgc;\n    target.styles = styles;\n    target.dirty = true;\n    //  position drag image offscreen\n    setStyle(dragImage, {\n      position: 'fixed',\n      left: `${-dragImage.width}px`,\n      border: NONE,\n      width: `${dragImage.width / retinaScaling}px`,\n      height: `${dragImage.height / retinaScaling}px`,\n    });\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    this.__dragImageDisposer = () => {\n      dragImage.remove();\n    };\n    getDocumentFromElement(\n      (e.target || this.target.hiddenTextarea)! as HTMLElement,\n    ).body.appendChild(dragImage);\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\n  }\n\n  /**\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\n   */\n  onDragStart(e: DragEvent): boolean {\n    this.__dragStartFired = true;\n    const target = this.target;\n    const active = this.isActive();\n    if (active && e.dataTransfer) {\n      const selection = (this.__dragStartSelection = {\n        selectionStart: target.selectionStart,\n        selectionEnd: target.selectionEnd,\n      });\n      const value = target._text\n        .slice(selection.selectionStart, selection.selectionEnd)\n        .join('');\n      const data = { text: target.text, value, ...selection };\n      e.dataTransfer.setData('text/plain', value);\n      e.dataTransfer.setData(\n        'application/fabric',\n        JSON.stringify({\n          value: value,\n          styles: target.getSelectionStyles(\n            selection.selectionStart,\n            selection.selectionEnd,\n            true,\n          ),\n        }),\n      );\n      e.dataTransfer.effectAllowed = 'copyMove';\n      this.setDragImage(e, data);\n    }\n    target.abortCursorAnimation();\n    return active;\n  }\n\n  /**\n   * use {@link targetCanDrop} to respect overriding\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent): boolean {\n    if (\n      this.target.editable &&\n      !this.target.getActiveControl() &&\n      !e.defaultPrevented\n    ) {\n      if (this.isActive() && this.__dragStartSelection) {\n        //  drag source trying to drop over itself\n        //  allow dropping only outside of drag start selection\n        const index = this.target.getSelectionStartFromPointer(e);\n        const dragStartSelection = this.__dragStartSelection;\n        return (\n          index < dragStartSelection.selectionStart ||\n          index > dragStartSelection.selectionEnd\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\n   */\n  protected targetCanDrop(e: DragEvent) {\n    return this.target.canDrop(e);\n  }\n\n  dragEnterHandler({ e }: DragEventData) {\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    }\n  }\n\n  dragOverHandler(ev: DragEventData) {\n    const { e } = ev;\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    } else if (this.__isDraggingOver && !canDrop) {\n      //  drop state has changed\n      this.__isDraggingOver = false;\n    }\n    if (this.__isDraggingOver) {\n      //  can be dropped, inform browser\n      e.preventDefault();\n      //  inform event subscribers\n      ev.canDrop = true;\n      ev.dropTarget = this.target;\n    }\n  }\n\n  dragLeaveHandler() {\n    if (this.__isDraggingOver || this.isActive()) {\n      this.__isDraggingOver = false;\n    }\n  }\n\n  /**\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\n   */\n  dropHandler(ev: DropEventData) {\n    const { e } = ev;\n    const didDrop = e.defaultPrevented;\n    this.__isDraggingOver = false;\n    // inform browser that the drop has been accepted\n    e.preventDefault();\n    let insert = e.dataTransfer?.getData('text/plain');\n    if (insert && !didDrop) {\n      const target = this.target;\n      const canvas = target.canvas!;\n      let insertAt = target.getSelectionStartFromPointer(e);\n      const { styles } = (\n        e.dataTransfer!.types.includes('application/fabric')\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\n          : {}\n      ) as { styles: TextStyleDeclaration[] };\n      const trailing = insert[Math.max(0, insert.length - 1)];\n      const selectionStartOffset = 0;\n      //  drag and drop in same instance\n      if (this.__dragStartSelection) {\n        const selectionStart = this.__dragStartSelection.selectionStart;\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\n          insertAt = selectionStart;\n        } else if (insertAt > selectionEnd) {\n          insertAt -= selectionEnd - selectionStart;\n        }\n        target.removeChars(selectionStart, selectionEnd);\n        // prevent `dragend` from handling event\n        delete this.__dragStartSelection;\n      }\n      //  remove redundant line break\n      if (\n        target._reNewline.test(trailing) &&\n        (target._reNewline.test(target._text[insertAt]) ||\n          insertAt === target._text.length)\n      ) {\n        insert = insert.trimEnd();\n      }\n      //  inform subscribers\n      ev.didDrop = true;\n      ev.dropTarget = target;\n      //  finalize\n      target.insertChars(insert, styles, insertAt);\n      // can this part be moved in an outside event? andrea to check.\n      canvas.setActiveObject(target);\n      target.enterEditing(e);\n      target.selectionStart = Math.min(\n        insertAt + selectionStartOffset,\n        target._text.length,\n      );\n      target.selectionEnd = Math.min(\n        target.selectionStart + insert.length,\n        target._text.length,\n      );\n      target.hiddenTextarea!.value = target.text;\n      target._updateTextarea();\n      target.hiddenTextarea!.focus();\n      target.fire(CHANGED, {\n        index: insertAt + selectionStartOffset,\n        action: 'drop',\n      });\n      canvas.fire('text:changed', { target });\n      canvas.contextTopDirty = true;\n      canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * fired only on the drag source after drop (if occurred)\n   * handle changes to the drag source in case of a drop on another object or a cancellation\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   */\n  dragEndHandler({ e }: DragEventData) {\n    if (this.isActive() && this.__dragStartFired) {\n      //  once the drop event finishes we check if we need to change the drag source\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\n      if (this.__dragStartSelection) {\n        const target = this.target;\n        const canvas = this.target.canvas!;\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\n        if (dropEffect === NONE) {\n          // pointer is back over selection\n          target.selectionStart = selectionStart;\n          target.selectionEnd = selectionEnd;\n          target._updateTextarea();\n          target.hiddenTextarea!.focus();\n        } else {\n          target.clearContextTop();\n          if (dropEffect === 'move') {\n            target.removeChars(selectionStart, selectionEnd);\n            target.selectionStart = target.selectionEnd = selectionStart;\n            target.hiddenTextarea &&\n              (target.hiddenTextarea.value = target.text);\n            target._updateTextarea();\n            target.fire(CHANGED, {\n              index: selectionStart,\n              action: 'dragend',\n            });\n            canvas.fire('text:changed', { target });\n            canvas.requestRenderAll();\n          }\n          target.exitEditing();\n        }\n      }\n    }\n\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    delete this.__dragImageDisposer;\n    delete this.__dragStartSelection;\n    this.__isDraggingOver = false;\n  }\n\n  dispose() {\n    this._dispose && this._dispose();\n  }\n}\n","import type {\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventInfo,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { FabricText } from '../Text/Text';\nimport { animate } from '../../util/animation/animate';\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport type { TOptions } from '../../typedefs';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, MODIFIED, RIGHT, reNewline } from '../../constants';\nimport type { IText } from './IText';\n\n/**\n *  extend this regex to support non english languages\n *\n *  - ` `      Matches a SPACE character (char code 32).\n *  - `\\n`     Matches a LINE FEED character (char code 10).\n *  - `\\.`     Matches a \".\" character (char code 46).\n *  - `,`      Matches a \",\" character (char code 44).\n *  - `;`      Matches a \";\" character (char code 59).\n *  - `!`      Matches a \"!\" character (char code 33).\n *  - `\\?`     Matches a \"?\" character (char code 63).\n *  - `\\-`     Matches a \"-\" character (char code 45).\n */\n// eslint-disable-next-line no-useless-escape\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\nexport type ITextEvents = ObjectEvents & {\n  'selection:changed': never;\n  changed: never | { index: number; action: string };\n  tripleclick: TPointerEventInfo;\n  'editing:entered': never | { e: TPointerEvent };\n  'editing:exited': never;\n};\n\nexport abstract class ITextBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends FabricText<Props, SProps, EventSpec> {\n  declare abstract isEditing: boolean;\n  declare abstract cursorDelay: number;\n  declare abstract selectionStart: number;\n  declare abstract selectionEnd: number;\n  declare abstract cursorDuration: number;\n  declare abstract editable: boolean;\n  declare abstract editingBorderColor: string;\n\n  declare abstract compositionStart: number;\n  declare abstract compositionEnd: number;\n\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * Helps determining when the text is in composition, so that the cursor\n   * rendering is altered.\n   */\n  protected declare inCompositionMode: boolean;\n\n  protected declare _reSpace: RegExp;\n  private declare _currentTickState?: ValueAnimation;\n  private declare _currentTickCompleteState?: ValueAnimation;\n  protected _currentCursorOpacity = 1;\n  private declare _textBeforeEdit: string;\n  protected declare __selectionStartOnMouseDown: number;\n\n  protected declare selected: boolean;\n  protected declare cursorOffsetCache: { left?: number; top?: number };\n  protected declare _savedProps?: {\n    hasControls: boolean;\n    borderColor: string;\n    lockMovementX: boolean;\n    lockMovementY: boolean;\n    selectable: boolean;\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\n    defaultCursor?: CSSStyleDeclaration['cursor'];\n    moveCursor?: CSSStyleDeclaration['cursor'];\n  };\n  protected declare _selectionDirection: 'left' | 'right' | null;\n\n  abstract initHiddenTextarea(): void;\n  abstract _fireSelectionChanged(): void;\n  abstract renderCursorOrSelection(): void;\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\n  abstract _getCursorBoundaries(\n    index: number,\n    skipCaching?: boolean,\n  ): {\n    left: number;\n    top: number;\n    leftOffset: number;\n    topOffset: number;\n  };\n\n  /**\n   * Initializes all the interactive behavior of IText\n   */\n  initBehavior() {\n    this._tick = this._tick.bind(this);\n    this._onTickComplete = this._onTickComplete.bind(this);\n    this.updateSelectionOnMouseMove =\n      this.updateSelectionOnMouseMove.bind(this);\n  }\n\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\n    this.isEditing && this.exitEditing();\n    this.selected = false;\n    return super.onDeselect(options);\n  }\n\n  /**\n   * @private\n   */\n  _animateCursor({\n    toValue,\n    duration,\n    delay,\n    onComplete,\n  }: {\n    toValue: number;\n    duration: number;\n    delay?: number;\n    onComplete?: TOnAnimationChangeCallback<number, void>;\n  }) {\n    return animate({\n      startValue: this._currentCursorOpacity,\n      endValue: toValue,\n      duration,\n      delay,\n      onComplete,\n      abort: () =>\n        !this.canvas ||\n        // we do not want to animate a selection, only cursor\n        this.selectionStart !== this.selectionEnd,\n      onChange: (value) => {\n        this._currentCursorOpacity = value;\n        this.renderCursorOrSelection();\n      },\n    });\n  }\n\n  /**\n   * changes the cursor from visible to invisible\n   */\n  private _tick(delay?: number) {\n    this._currentTickState = this._animateCursor({\n      toValue: 0,\n      duration: this.cursorDuration / 2,\n      delay: Math.max(delay || 0, 100),\n      onComplete: this._onTickComplete,\n    });\n  }\n\n  /**\n   * Changes the cursor from invisible to visible\n   */\n  private _onTickComplete() {\n    this._currentTickCompleteState?.abort();\n    this._currentTickCompleteState = this._animateCursor({\n      toValue: 1,\n      duration: this.cursorDuration,\n      onComplete: this._tick,\n    });\n  }\n\n  /**\n   * Initializes delayed cursor\n   */\n  initDelayedCursor(restart?: boolean) {\n    this.abortCursorAnimation();\n    this._tick(restart ? 0 : this.cursorDelay);\n  }\n\n  /**\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\n   */\n  abortCursorAnimation() {\n    let shouldClear = false;\n    [this._currentTickState, this._currentTickCompleteState].forEach(\n      (cursorAnimation) => {\n        if (cursorAnimation && !cursorAnimation.isDone()) {\n          shouldClear = true;\n          cursorAnimation.abort();\n        }\n      },\n    );\n\n    this._currentCursorOpacity = 1;\n\n    //  make sure we clear context even if instance is not editing\n    if (shouldClear) {\n      this.clearContextTop();\n    }\n  }\n\n  /**\n   * Restart tue cursor animation if either is in complete state ( between animations )\n   * or if it never started before\n   */\n  restartCursorIfNeeded() {\n    if (\n      [this._currentTickState, this._currentTickCompleteState].some(\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone(),\n      )\n    ) {\n      this.initDelayedCursor();\n    }\n  }\n\n  /**\n   * Selects entire text\n   */\n  selectAll() {\n    this.selectionStart = 0;\n    this.selectionEnd = this._text.length;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Returns selected text\n   * @return {String}\n   */\n  getSelectedText(): string {\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n  }\n\n  /**\n   * Find new selection index representing start of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    // remove space before cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index--;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    // remove space after cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index++;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Find new selection index representing start of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    while (!/\\n/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Finds index corresponding to beginning or end of a word\n   * @param {Number} selectionStart Index of a character\n   * @param {Number} direction 1 or -1\n   * @return {Number} Index of the beginning or end of a word\n   */\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\n    const text = this._text;\n    // if we land on a space we move the cursor backwards\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\n    let index =\n        selectionStart > 0 &&\n        this._reSpace.test(text[selectionStart]) &&\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\n          ? selectionStart - 1\n          : selectionStart,\n      _char = text[index];\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\n      index += direction;\n      _char = text[index];\n    }\n    if (direction === -1 && reNonWord.test(_char)) {\n      index++;\n    }\n    return index;\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a word based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectWord(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    // search backwards\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n      // search forward\n      newSelectionEnd = Math.max(\n        newSelectionStart,\n        this.searchWordBoundary(selectionStart, 1),\n      );\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a line based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectLine(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Enters editing state\n   */\n  enterEditing(e?: TPointerEvent) {\n    if (this.isEditing || !this.editable) {\n      return;\n    }\n    this.enterEditingImpl();\n    this.fire('editing:entered', e ? { e } : undefined);\n    this._fireSelectionChanged();\n    if (this.canvas) {\n      this.canvas.fire('text:editing:entered', {\n        target: this as unknown as IText,\n        e,\n      });\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * runs the actual logic that enter from editing state, see {@link enterEditing}\n   */\n  enterEditingImpl() {\n    if (this.canvas) {\n      this.canvas.calcOffset();\n      this.canvas.textEditingManager.exitTextEditing();\n    }\n\n    this.isEditing = true;\n\n    this.initHiddenTextarea();\n    this.hiddenTextarea!.focus();\n    this.hiddenTextarea!.value = this.text;\n    this._updateTextarea();\n    this._saveEditingProps();\n    this._setEditingProps();\n    this._textBeforeEdit = this.text;\n\n    this._tick();\n  }\n\n  /**\n   * called by {@link Canvas#textEditingManager}\n   */\n  updateSelectionOnMouseMove(e: TPointerEvent) {\n    if (this.getActiveControl()) {\n      return;\n    }\n\n    const el = this.hiddenTextarea!;\n    // regain focus\n    getDocumentFromElement(el).activeElement !== el && el.focus();\n\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\n      currentStart = this.selectionStart,\n      currentEnd = this.selectionEnd;\n    if (\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\n        currentStart === currentEnd) &&\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n    ) {\n      return;\n    }\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\n      this.selectionStart = this.__selectionStartOnMouseDown;\n      this.selectionEnd = newSelectionStart;\n    } else {\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = this.__selectionStartOnMouseDown;\n    }\n    if (\n      this.selectionStart !== currentStart ||\n      this.selectionEnd !== currentEnd\n    ) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setEditingProps() {\n    this.hoverCursor = 'text';\n\n    if (this.canvas) {\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n    }\n\n    this.borderColor = this.editingBorderColor;\n    this.hasControls = this.selectable = false;\n    this.lockMovementX = this.lockMovementY = true;\n  }\n\n  /**\n   * convert from textarea to grapheme indexes\n   */\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\n    const smallerTextStart = text.slice(0, start),\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = text.slice(start, end),\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * convert from fabric to textarea values\n   */\n  fromGraphemeToStringSelection(\n    start: number,\n    end: number,\n    graphemes: string[],\n  ) {\n    const smallerTextStart = graphemes.slice(0, start),\n      graphemeStart = smallerTextStart.join('').length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = graphemes.slice(start, end),\n      graphemeEnd = smallerTextEnd.join('').length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _updateTextarea() {\n    this.cursorOffsetCache = {};\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    if (!this.inCompositionMode) {\n      const newSelection = this.fromGraphemeToStringSelection(\n        this.selectionStart,\n        this.selectionEnd,\n        this._text,\n      );\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateFromTextArea() {\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    this.cursorOffsetCache = {};\n    const textarea = this.hiddenTextarea;\n    this.text = textarea.value;\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    const newSelection = this.fromStringToGraphemeSelection(\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      textarea.value,\n    );\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n    if (!this.inCompositionMode) {\n      this.selectionStart = newSelection.selectionStart;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateTextareaPosition() {\n    if (this.selectionStart === this.selectionEnd) {\n      const style = this._calcTextareaPosition();\n      this.hiddenTextarea!.style.left = style.left;\n      this.hiddenTextarea!.style.top = style.top;\n    }\n  }\n\n  /**\n   * @private\n   * @return {Object} style contains style for hiddenTextarea\n   */\n  _calcTextareaPosition() {\n    if (!this.canvas) {\n      return { left: '1px', top: '1px' };\n    }\n    const desiredPosition = this.inCompositionMode\n        ? this.compositionStart\n        : this.selectionStart,\n      boundaries = this._getCursorBoundaries(desiredPosition),\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex = cursorLocation.charIndex,\n      charHeight =\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\n        this.lineHeight,\n      leftOffset = boundaries.leftOffset,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      upperCanvas = this.canvas.upperCanvasEl,\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\n      maxWidth = upperCanvasWidth - charHeight,\n      maxHeight = upperCanvasHeight - charHeight;\n\n    const p = new Point(\n      boundaries.left + leftOffset,\n      boundaries.top + boundaries.topOffset + charHeight,\n    )\n      .transform(this.calcTransformMatrix())\n      .transform(this.canvas.viewportTransform)\n      .multiply(\n        new Point(\n          upperCanvas.clientWidth / upperCanvasWidth,\n          upperCanvas.clientHeight / upperCanvasHeight,\n        ),\n      );\n\n    if (p.x < 0) {\n      p.x = 0;\n    }\n    if (p.x > maxWidth) {\n      p.x = maxWidth;\n    }\n    if (p.y < 0) {\n      p.y = 0;\n    }\n    if (p.y > maxHeight) {\n      p.y = maxHeight;\n    }\n\n    // add canvas offset on document\n    p.x += this.canvas._offset.left;\n    p.y += this.canvas._offset.top;\n\n    return {\n      left: `${p.x}px`,\n      top: `${p.y}px`,\n      fontSize: `${charHeight}px`,\n      charHeight: charHeight,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _saveEditingProps() {\n    this._savedProps = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      lockMovementX: this.lockMovementX,\n      lockMovementY: this.lockMovementY,\n      hoverCursor: this.hoverCursor,\n      selectable: this.selectable,\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\n      moveCursor: this.canvas && this.canvas.moveCursor,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _restoreEditingProps() {\n    if (!this._savedProps) {\n      return;\n    }\n\n    this.hoverCursor = this._savedProps.hoverCursor;\n    this.hasControls = this._savedProps.hasControls;\n    this.borderColor = this._savedProps.borderColor;\n    this.selectable = this._savedProps.selectable;\n    this.lockMovementX = this._savedProps.lockMovementX;\n    this.lockMovementY = this._savedProps.lockMovementY;\n\n    if (this.canvas) {\n      this.canvas.defaultCursor =\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\n      this.canvas.moveCursor =\n        this._savedProps.moveCursor || this.canvas.moveCursor;\n    }\n\n    delete this._savedProps;\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * Please use exitEditingImpl, this function was kept to avoid breaking changes.\n   * Will be removed in fabric 7.0\n   * @deprecated use \"exitEditingImpl\"\n   */\n  protected _exitEditing() {\n    const hiddenTextarea = this.hiddenTextarea;\n    this.selected = false;\n    this.isEditing = false;\n\n    if (hiddenTextarea) {\n      hiddenTextarea.blur && hiddenTextarea.blur();\n      hiddenTextarea.parentNode &&\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n    }\n    this.hiddenTextarea = null;\n    this.abortCursorAnimation();\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * But it does not fire events\n   */\n  exitEditingImpl() {\n    this._exitEditing();\n    this.selectionEnd = this.selectionStart;\n    this._restoreEditingProps();\n    if (this._forceClearCache) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  }\n\n  /**\n   * Exits from editing state and fires relevant events\n   */\n  exitEditing() {\n    const isTextChanged = this._textBeforeEdit !== this.text;\n    this.exitEditingImpl();\n\n    this.fire('editing:exited');\n    isTextChanged && this.fire(MODIFIED);\n    if (this.canvas) {\n      this.canvas.fire('text:editing:exited', {\n        target: this as unknown as IText,\n      });\n      // todo: evaluate add an action to this event\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _removeExtraneousStyles() {\n    for (const prop in this.styles) {\n      if (!this._textLines[prop as unknown as number]) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * remove and reflow a style block from start to end.\n   * @param {Number} start linear start position for removal (included in removal)\n   * @param {Number} end linear end position for removal ( excluded from removal )\n   */\n  removeStyleFromTo(start: number, end: number) {\n    const { lineIndex: lineStart, charIndex: charStart } =\n        this.get2DCursorLocation(start, true),\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\n        end,\n        true,\n      );\n    if (lineStart !== lineEnd) {\n      // step1 remove the trailing of lineStart\n      if (this.styles[lineStart]) {\n        for (\n          let i = charStart;\n          i < this._unwrappedTextLines[lineStart].length;\n          i++\n        ) {\n          delete this.styles[lineStart][i];\n        }\n      }\n      // step2 move the trailing of lineEnd to lineStart if needed\n      if (this.styles[lineEnd]) {\n        for (\n          let i = charEnd;\n          i < this._unwrappedTextLines[lineEnd].length;\n          i++\n        ) {\n          const styleObj = this.styles[lineEnd][i];\n          if (styleObj) {\n            this.styles[lineStart] || (this.styles[lineStart] = {});\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n          }\n        }\n      }\n      // step3 detects lines will be completely removed.\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\n        delete this.styles[i];\n      }\n      // step4 shift remaining lines.\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n    } else {\n      // remove and shift left on the same line\n      if (this.styles[lineStart]) {\n        const styleObj = this.styles[lineStart];\n        const diff = charEnd - charStart;\n        for (let i = charStart; i < charEnd; i++) {\n          delete styleObj[i];\n        }\n        for (const char in this.styles[lineStart]) {\n          const numericChar = parseInt(char, 10);\n          if (numericChar >= charEnd) {\n            styleObj[numericChar - diff] = styleObj[char];\n            delete styleObj[char];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Shifts line styles up or down\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} offset Can any number?\n   */\n  shiftLineStyles(lineIndex: number, offset: number) {\n    const clonedStyles = Object.assign({}, this.styles);\n    for (const line in this.styles) {\n      const numericLine = parseInt(line, 10);\n      if (numericLine > lineIndex) {\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\n        if (!clonedStyles[numericLine - offset]) {\n          delete this.styles[numericLine];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle insertion of more consecutive style lines for when one or more\n   * newlines gets added to the text. Since current style needs to be shifted\n   * first we shift the current style of the number lines needed, then we add\n   * new lines from the last to the first.\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} qty number of lines to add\n   * @param {Array} copiedStyle Array of objects styles\n   */\n  insertNewlineStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    qty: number,\n    copiedStyle?: { [index: number]: TextStyleDeclaration },\n  ) {\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\n    const isEndOfLine = originalLineLength === charIndex;\n\n    let someStyleIsCarryingOver = false;\n    qty || (qty = 1);\n    this.shiftLineStyles(lineIndex, qty);\n    const currentCharStyle = this.styles[lineIndex]\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\n      : undefined;\n\n    // we clone styles of all chars\n    // after cursor onto the current line\n    for (const index in this.styles[lineIndex]) {\n      const numIndex = parseInt(index, 10);\n      if (numIndex >= charIndex) {\n        someStyleIsCarryingOver = true;\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n        // remove lines from the previous line since they're on a new line now\n        if (!(isEndOfLine && charIndex === 0)) {\n          delete this.styles[lineIndex][index];\n        }\n      }\n    }\n    let styleCarriedOver = false;\n    if (someStyleIsCarryingOver && !isEndOfLine) {\n      // if is end of line, the extra style we copied\n      // is probably not something we want\n      this.styles[lineIndex + qty] = newLineStyles;\n      styleCarriedOver = true;\n    }\n    if (styleCarriedOver || originalLineLength > charIndex) {\n      // skip the last line of since we already prepared it.\n      // or contains text without style that we don't want to style\n      // just because it changed lines\n      qty--;\n    }\n    // for the all the lines or all the other lines\n    // we clone current char style onto the next (otherwise empty) line\n    while (qty > 0) {\n      if (copiedStyle && copiedStyle[qty - 1]) {\n        this.styles[lineIndex + qty] = {\n          0: { ...copiedStyle[qty - 1] },\n        };\n      } else if (currentCharStyle) {\n        this.styles[lineIndex + qty] = {\n          0: { ...currentCharStyle },\n        };\n      } else {\n        delete this.styles[lineIndex + qty];\n      }\n      qty--;\n    }\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Inserts style object for a given line/char index\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} quantity number Style object to insert, if given\n   * @param {Array} copiedStyle array of style objects\n   */\n  insertCharStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    quantity: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    if (!this.styles) {\n      this.styles = {};\n    }\n    const currentLineStyles = this.styles[lineIndex],\n      currentLineStylesCloned = currentLineStyles\n        ? { ...currentLineStyles }\n        : {};\n\n    quantity || (quantity = 1);\n    // shift all char styles by quantity forward\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n    for (const index in currentLineStylesCloned) {\n      const numericIndex = parseInt(index, 10);\n      if (numericIndex >= charIndex) {\n        currentLineStyles[numericIndex + quantity] =\n          currentLineStylesCloned[numericIndex];\n        // only delete the style if there was nothing moved there\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\n          delete currentLineStyles[numericIndex];\n        }\n      }\n    }\n    this._forceClearCache = true;\n    if (copiedStyle) {\n      while (quantity--) {\n        if (!Object.keys(copiedStyle[quantity]).length) {\n          continue;\n        }\n        if (!this.styles[lineIndex]) {\n          this.styles[lineIndex] = {};\n        }\n        this.styles[lineIndex][charIndex + quantity] = {\n          ...copiedStyle[quantity],\n        };\n      }\n      return;\n    }\n    if (!currentLineStyles) {\n      return;\n    }\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n    while (newStyle && quantity--) {\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\n    }\n  }\n\n  /**\n   * Inserts style object(s)\n   * @param {Array} insertedText Characters at the location where style is inserted\n   * @param {Number} start cursor index for inserting style\n   * @param {Array} [copiedStyle] array of style objects to insert.\n   */\n  insertNewStyleBlock(\n    insertedText: string[],\n    start: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    const cursorLoc = this.get2DCursorLocation(start, true),\n      addedLines = [0];\n    let linesLength = 0;\n    // get an array of how many char per lines are being added.\n    for (let i = 0; i < insertedText.length; i++) {\n      if (insertedText[i] === '\\n') {\n        linesLength++;\n        addedLines[linesLength] = 0;\n      } else {\n        addedLines[linesLength]++;\n      }\n    }\n    // for the first line copy the style from the current char position.\n    if (addedLines[0] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex,\n        addedLines[0],\n        copiedStyle,\n      );\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n    }\n    linesLength &&\n      this.insertNewlineStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex + addedLines[0],\n        linesLength,\n      );\n    let i;\n    for (i = 1; i < linesLength; i++) {\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(\n          cursorLoc.lineIndex + i,\n          0,\n          addedLines[i],\n          copiedStyle,\n        );\n      } else if (copiedStyle) {\n        // this test is required in order to close #6841\n        // when a pasted buffer begins with a newline then\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n        // may be undefined for some reason\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n      }\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n    }\n    if (addedLines[i] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex + i,\n        0,\n        addedLines[i],\n        copiedStyle,\n      );\n    }\n  }\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars(start: number, end: number = start + 1) {\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars(\n    text: string,\n    style: TextStyleDeclaration[] | undefined,\n    start: number,\n    end: number = start,\n  ) {\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    const graphemes = this.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [\n      ...this._text.slice(0, start),\n      ...graphemes,\n      ...this._text.slice(end),\n    ];\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * Set the selectionStart and selectionEnd according to the new position of cursor\n   * mimic the key - mouse navigation when shift is pressed.\n   */\n  setSelectionStartEndWithShift(\n    start: number,\n    end: number,\n    newSelection: number,\n  ) {\n    if (newSelection <= start) {\n      if (end === start) {\n        this._selectionDirection = LEFT;\n      } else if (this._selectionDirection === RIGHT) {\n        this._selectionDirection = LEFT;\n        this.selectionEnd = start;\n      }\n      this.selectionStart = newSelection;\n    } else if (newSelection > start && newSelection < end) {\n      if (this._selectionDirection === RIGHT) {\n        this.selectionEnd = newSelection;\n      } else {\n        this.selectionStart = newSelection;\n      }\n    } else {\n      // newSelection is > selection start and end\n      if (end === start) {\n        this._selectionDirection = RIGHT;\n      } else if (this._selectionDirection === LEFT) {\n        this._selectionDirection = RIGHT;\n        this.selectionStart = end;\n      }\n      this.selectionEnd = newSelection;\n    }\n  }\n}\n","import { config } from '../../config';\nimport { getFabricDocument, getEnv } from '../../env';\nimport { capValue } from '../../util/misc/capValue';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextBehavior } from './ITextBehavior';\nimport type { TKeyMapIText } from './constants';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, LEFT, RIGHT } from '../../constants';\nimport type { IText } from './IText';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\n\nexport abstract class ITextKeyBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextBehavior<Props, SProps, EventSpec> {\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behavior for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the IText or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = Object.assign({}, this.keysMap);\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\n   */\n  declare keysMap: TKeyMapIText;\n\n  declare keysMapRtl: TKeyMapIText;\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  declare ctrlKeysMapUp: TKeyMapIText;\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  declare ctrlKeysMapDown: TKeyMapIText;\n\n  declare hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * DOM container to append the hiddenTextarea.\n   * An alternative to attaching to the document.body.\n   * Useful to reduce laggish redraw of the full document.body tree and\n   * also with modals event capturing that won't let the textarea take focus.\n   * @type HTMLElement\n   * @default\n   */\n  declare hiddenTextareaContainer?: HTMLElement | null;\n\n  private declare _clickHandlerInitialized: boolean;\n  private declare _copyDone: boolean;\n  private declare fromPaste: boolean;\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea() {\n    const doc =\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n      getFabricDocument();\n    const textarea = doc.createElement('textarea');\n    Object.entries({\n      autocapitalize: 'off',\n      autocorrect: 'off',\n      autocomplete: 'off',\n      spellcheck: 'false',\n      'data-fabric': 'textarea',\n      wrap: 'off',\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\n    const { top, left, fontSize } = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\n\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\n\n    Object.entries({\n      blur: 'blur',\n      keydown: 'onKeyDown',\n      keyup: 'onKeyUp',\n      input: 'onInput',\n      copy: 'copy',\n      cut: 'copy',\n      paste: 'paste',\n      compositionstart: 'onCompositionStart',\n      compositionupdate: 'onCompositionUpdate',\n      compositionend: 'onCompositionEnd',\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\n      textarea.addEventListener(\n        eventName,\n        (this[handler] as EventListener).bind(this),\n      ),\n    );\n    this.hiddenTextarea = textarea;\n  }\n\n  /**\n   * Override this method to customize cursor behavior on textbox blur\n   */\n  blur() {\n    this.abortCursorAnimation();\n  }\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isEditing) {\n      return;\n    }\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      (this[keyMap[e.keyCode] as keyof this] as (arg: KeyboardEvent) => void)(\n        e,\n      );\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      (\n        this[this.ctrlKeysMapDown[e.keyCode] as keyof this] as (\n          arg: KeyboardEvent,\n        ) => void\n      )(e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      (\n        this[this.ctrlKeysMapUp[e.keyCode] as keyof this] as (\n          arg: KeyboardEvent,\n        ) => void\n      )(e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  }\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\n    const fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    const updateAndFire = () => {\n      this.updateFromTextArea();\n      this.fire(CHANGED);\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\n        this.canvas.requestRenderAll();\n      }\n    };\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      updateAndFire();\n      return;\n    }\n    // decisions about style changes.\n    const nextText = this._splitTextIntoLines(\n        this.hiddenTextarea.value,\n      ).graphemeText,\n      charCount = this._text.length,\n      nextCharCount = nextText.length,\n      selectionStart = this.selectionStart,\n      selectionEnd = this.selectionEnd,\n      selection = selectionStart !== selectionEnd;\n    let copiedStyle: TextStyleDeclaration[] | undefined,\n      removedText,\n      charDiff = nextCharCount - charCount,\n      removeFrom,\n      removeTo;\n\n    const textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value,\n    );\n    const backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      } else {\n        removedText = this._text.slice(\n          selectionStart,\n          selectionStart - charDiff,\n        );\n      }\n    }\n    const insertedText = nextText.slice(\n      textareaSelection.selectionEnd - charDiff,\n      textareaSelection.selectionEnd,\n    );\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(\n          selectionStart,\n          selectionStart + 1,\n          false,\n        );\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(\n          () =>\n            // this return an array of references, but that is fine since we are\n            // copying the style later.\n            copiedStyle![0],\n        );\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      } else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      } else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      const { copyPasteData } = getEnv();\n      if (\n        fromPaste &&\n        insertedText.join('') === copyPasteData.copiedText &&\n        !config.disableStyleCopyPaste\n      ) {\n        copiedStyle = copyPasteData.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    updateAndFire();\n  }\n\n  /**\n   * Composition start\n   */\n  onCompositionStart() {\n    this.inCompositionMode = true;\n  }\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd() {\n    this.inCompositionMode = false;\n  }\n\n  onCompositionUpdate({ target }: CompositionEvent) {\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\n    this.compositionStart = selectionStart;\n    this.compositionEnd = selectionEnd;\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * Copies selected text\n   */\n  copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    const { copyPasteData } = getEnv();\n    copyPasteData.copiedText = this.getSelectedText();\n    if (!config.disableStyleCopyPaste) {\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd,\n        true,\n      );\n    } else {\n      copyPasteData.copiedTextStyle = undefined;\n    }\n    this._copyDone = true;\n  }\n\n  /**\n   * Pastes text\n   */\n  paste() {\n    this.fromPaste = true;\n  }\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n      bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  }\n\n  /**\n   * Gets start offset of a selection\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (\n      lineIndex === this._textLines.length - 1 ||\n      e.metaKey ||\n      e.keyCode === 34\n    ) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return (\n      textAfterCursor.length +\n      indexOnOtherLine +\n      1 +\n      this.missingNewlineOffset(lineIndex)\n    );\n  }\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return (\n      -this._textLines[lineIndex - 1].length +\n      indexOnOtherLine -\n      textBeforeCursor.length +\n      (1 - missingNewlineOffset)\n    );\n  }\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine(lineIndex: number, width: number) {\n    const line = this._textLines[lineIndex],\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    let widthOfCharsOnLine = lineLeftOffset,\n      indexOnLine = 0,\n      charWidth,\n      foundMatch;\n\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        const leftEdge = widthOfCharsOnLine - charWidth,\n          rightEdge = widthOfCharsOnLine,\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\n          offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  }\n\n  /**\n   * Moves cursor down\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorDown(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  }\n\n  /**\n   * Moves cursor up\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorUp(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  }\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\n    const offset = this[`get${direction}CursorOffset`](\n      e,\n      this._selectionDirection === RIGHT,\n    );\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      const max = this.text.length;\n      this.selectionStart = capValue(0, this.selectionStart, max);\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift(offset: number) {\n    const newSelection =\n      this._selectionDirection === LEFT\n        ? this.selectionStart + offset\n        : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(\n      this.selectionStart,\n      this.selectionEnd,\n      newSelection,\n    );\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift(offset: number) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor left\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorLeft(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  }\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   *\n   * @todo refactor not to use method name composition\n   */\n  _move(\n    e: KeyboardEvent,\n    prop: 'selectionStart' | 'selectionEnd',\n    direction: 'Left' | 'Right',\n  ): boolean {\n    let newValue: number | undefined;\n    if (e.altKey) {\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Left');\n  }\n\n  /**\n   * @private\n   */\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Right');\n  }\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\n    let change = true;\n    this._selectionDirection = LEFT;\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (\n      this.selectionEnd === this.selectionStart &&\n      this.selectionStart !== 0\n    ) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  }\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === RIGHT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = LEFT;\n      return this._moveLeft(e, 'selectionStart');\n    }\n  }\n\n  /**\n   * Moves cursor right\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRight(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  }\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\n    const actionName = `moveCursor${direction}${\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\n    }` as const;\n    this._currentCursorOpacity = 1;\n    if (this[actionName](e)) {\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorRightWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === LEFT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = RIGHT;\n      return this._moveRight(e, 'selectionEnd');\n    }\n  }\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\n    let changed = true;\n    this._selectionDirection = RIGHT;\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  }\n}\n","import type { TPointerEvent, TPointerEventInfo } from '../../EventTypeDefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { stopEvent } from '../../util/dom_event';\nimport { invertTransform } from '../../util/misc/matrix';\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport type { IText } from './IText';\n/**\n * `LEFT_CLICK === 0`\n */\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\n\nexport abstract class ITextClickBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\n  private declare __lastSelected: boolean;\n  private declare __lastClickTime: number;\n  private declare __lastLastClickTime: number;\n  private declare __lastPointer: XY | Record<string, never>;\n  private declare __newClickTime: number;\n\n  protected draggableTextDelegate: DraggableTextDelegate;\n\n  initBehavior() {\n    // Initializes event handlers related to cursor or selection\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n    this.on('mouseup', this.mouseUpHandler);\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n\n    // Initializes \"dbclick\" event handler\n    this.__lastClickTime = +new Date();\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n\n    this.draggableTextDelegate = new DraggableTextDelegate(\n      this as unknown as IText,\n    );\n\n    super.initBehavior();\n  }\n\n  /**\n   * If this method returns true a mouse move operation over a text selection\n   * will not prevent the native mouse event allowing the browser to start a drag operation.\n   * shouldStartDragging can be read 'do not prevent default for mouse move event'\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns\n   */\n  shouldStartDragging() {\n    return this.draggableTextDelegate.isActive();\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drag source,\n   * @see also {@link DraggableTextDelegate#isActive}\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns {boolean} should handle event\n   */\n  onDragStart(e: DragEvent) {\n    return this.draggableTextDelegate.onDragStart(e);\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent) {\n    return this.draggableTextDelegate.canDrop(e);\n  }\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown(options: TPointerEventInfo) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    const newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastSelected = this.selected && !this.getActiveControl();\n  }\n\n  isTripleClick(newPointer: XY) {\n    return (\n      this.__newClickTime - this.__lastClickTime < 500 &&\n      this.__lastClickTime - this.__lastLastClickTime < 500 &&\n      this.__lastPointer.x === newPointer.x &&\n      this.__lastPointer.y === newPointer.y\n    );\n  }\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler({ e }: TPointerEventInfo) {\n    if (\n      !this.canvas ||\n      !this.editable ||\n      notALeftClick(e) ||\n      this.getActiveControl()\n    ) {\n      return;\n    }\n\n    if (this.draggableTextDelegate.start(e)) {\n      return;\n    }\n\n    this.canvas.textEditingManager.register(this);\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore({ e }: TPointerEventInfo) {\n    if (!this.canvas || !this.editable || notALeftClick(e)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  }\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler({ e, transform }: TPointerEventInfo) {\n    const didDrag = this.draggableTextDelegate.end(e);\n    if (this.canvas) {\n      this.canvas.textEditingManager.unregister(this);\n\n      const activeObject = this.canvas._activeObject;\n      if (activeObject && activeObject !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n    if (\n      !this.editable ||\n      (this.group && !this.group.interactive) ||\n      (transform && transform.actionPerformed) ||\n      notALeftClick(e) ||\n      didDrag\n    ) {\n      return;\n    }\n\n    if (this.__lastSelected && !this.getActiveControl()) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  }\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {TPointerEvent} e Event object\n   */\n  setCursorByClick(e: TPointerEvent) {\n    const newSelection = this.getSelectionStartFromPointer(e),\n      start = this.selectionStart,\n      end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {TPointerEvent} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer(e: TPointerEvent): number {\n    const mouseOffset = this.canvas!.getScenePoint(e)\n      .transform(invertTransform(this.calcTransformMatrix()))\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\n    let height = 0,\n      charIndex = 0,\n      lineIndex = 0;\n\n    for (let i = 0; i < this._textLines.length; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i);\n        lineIndex = i;\n        if (i > 0) {\n          charIndex +=\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\n    let width = lineLeftOffset;\n    const charLength = this._textLines[lineIndex].length;\n    const chars = this.__charBounds[lineIndex];\n    for (let j = 0; j < charLength; j++) {\n      // i removed something about flipX here, check.\n      const charWidth = chars[j].kernedWidth;\n      const widthAfter = width + charWidth;\n      if (mouseOffset.x <= widthAfter) {\n        // if the pointer is closer to the end of the char we increment charIndex\n        // in order to position the cursor after the char\n        if (\n          Math.abs(mouseOffset.x - widthAfter) <=\n          Math.abs(mouseOffset.x - width)\n        ) {\n          charIndex++;\n        }\n        break;\n      }\n      width = widthAfter;\n      charIndex++;\n    }\n\n    return Math.min(\n      // if object is horizontally flipped, mirror cursor location from the end\n      this.flipX ? charLength - charIndex : charIndex,\n      this._text.length,\n    );\n  }\n}\n","export type TKeyMapIText = Record<\n  KeyboardEvent['keyCode'],\n  CursorHandlingMethods\n>;\n\nexport type CursorHandlingMethods =\n  | 'moveCursorUp'\n  | 'moveCursorDown'\n  | 'moveCursorLeft'\n  | 'moveCursorRight'\n  | 'exitEditing'\n  | 'copy'\n  | 'cut'\n  | 'selectAll';\n\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\n\n// @TODO look into import { Key } from 'ts-key-enum';\n// and transition from keyCode to Key\n// also reduce string duplication\nexport const keysMap: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_RIGHT,\n  36: MOVE_CURSOR_LEFT,\n  37: MOVE_CURSOR_LEFT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_RIGHT,\n  40: MOVE_CURSOR_DOWN,\n};\n\nexport const keysMapRtl: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_LEFT,\n  36: MOVE_CURSOR_RIGHT,\n  37: MOVE_CURSOR_RIGHT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_LEFT,\n  40: MOVE_CURSOR_DOWN,\n};\n\n/**\n * For functionalities on keyUp + ctrl || cmd\n */\nexport const ctrlKeysMapUp: TKeyMapIText = {\n  67: 'copy',\n  // there was a reason this wasn't deleted. for now leave it here\n  88: 'cut',\n};\n\n/**\n * For functionalities on keyDown + ctrl || cmd\n */\nexport const ctrlKeysMapDown: TKeyMapIText = {\n  65: 'selectAll',\n};\n","import { Canvas } from '../../canvas/Canvas';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextClickBehavior } from './ITextClickBehavior';\nimport {\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  keysMap,\n  keysMapRtl,\n} from './constants';\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport {\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from '../Text/constants';\nimport { CENTER, FILL, LEFT, RIGHT } from '../../constants';\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\n\nexport type CursorBoundaries = {\n  left: number;\n  top: number;\n  leftOffset: number;\n  topOffset: number;\n};\n\nexport type CursorRenderingData = {\n  color: string;\n  opacity: number;\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\n// Declare IText protected properties to workaround TS\nconst protectedDefaultValues = {\n  _selectionDirection: null,\n  _reSpace: /\\s|\\r?\\n/,\n  inCompositionMode: false,\n};\n\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\n  selectionStart: 0,\n  selectionEnd: 0,\n  selectionColor: 'rgba(17,119,255,0.3)',\n  isEditing: false,\n  editable: true,\n  editingBorderColor: 'rgba(102,153,255,0.25)',\n  cursorWidth: 2,\n  cursorColor: '',\n  cursorDelay: 1000,\n  cursorDuration: 600,\n  caching: true,\n  hiddenTextareaContainer: null,\n  keysMap,\n  keysMapRtl,\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  ...protectedDefaultValues,\n};\n\n// @TODO this is not complete\ninterface UniqueITextProps {\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface SerializedITextProps\n  extends SerializedTextProps,\n    UniqueITextProps {}\n\nexport interface ITextProps extends TextProps, UniqueITextProps {}\n\n/**\n * @fires changed\n * @fires selection:changed\n * @fires editing:entered\n * @fires editing:exited\n * @fires dragstart\n * @fires drag drag event firing on the drag source\n * @fires dragend\n * @fires copy\n * @fires cut\n * @fires paste\n *\n * #### Supported key combinations\n * ```\n *   Move cursor:                    left, right, up, down\n *   Select character:               shift + left, shift + right\n *   Select text vertically:         shift + up, shift + down\n *   Move cursor by word:            alt + left, alt + right\n *   Select words:                   shift + alt + left, shift + alt + right\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n *   Jump to start/end of text:      cmd + up, cmd + down\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n *   Delete character:               backspace\n *   Delete word:                    alt + backspace\n *   Delete line:                    cmd + backspace\n *   Forward delete:                 delete\n *   Copy text:                      ctrl/cmd + c\n *   Paste text:                     ctrl/cmd + v\n *   Cut text:                       ctrl/cmd + x\n *   Select entire text:             ctrl/cmd + a\n *   Quit editing                    tab or esc\n * ```\n *\n * #### Supported mouse/touch combination\n * ```\n *   Position cursor:                click/touch\n *   Create selection:               click/touch & drag\n *   Create selection:               click & shift + click\n *   Select word:                    double click\n *   Select line:                    triple click\n * ```\n */\nexport class IText<\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\n    SProps extends SerializedITextProps = SerializedITextProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends ITextClickBehavior<Props, SProps, EventSpec>\n  implements UniqueITextProps\n{\n  /**\n   * Index where text selection starts (or where cursor is when there is no selection)\n   * @type Number\n   * @default\n   */\n  declare selectionStart: number;\n\n  /**\n   * Index where text selection ends\n   * @type Number\n   * @default\n   */\n  declare selectionEnd: number;\n\n  declare compositionStart: number;\n\n  declare compositionEnd: number;\n\n  /**\n   * Color of text selection\n   * @type String\n   * @default\n   */\n  declare selectionColor: string;\n\n  /**\n   * Indicates whether text is in editing mode\n   * @type Boolean\n   * @default\n   */\n  declare isEditing: boolean;\n\n  /**\n   * Indicates whether a text can be edited\n   * @type Boolean\n   * @default\n   */\n  declare editable: boolean;\n\n  /**\n   * Border color of text object while it's in editing mode\n   * @type String\n   * @default\n   */\n  declare editingBorderColor: string;\n\n  /**\n   * Width of cursor (in px)\n   * @type Number\n   * @default\n   */\n  declare cursorWidth: number;\n\n  /**\n   * Color of text cursor color in editing mode.\n   * if not set (default) will take color from the text.\n   * if set to a color value that fabric can understand, it will\n   * be used instead of the color of the text at the current position.\n   * @type String\n   * @default\n   */\n  declare cursorColor: string;\n\n  /**\n   * Delay between cursor blink (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDelay: number;\n\n  /**\n   * Duration of cursor fade in (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDuration: number;\n\n  declare compositionColor: string;\n\n  /**\n   * Indicates whether internal text char widths can be cached\n   * @type Boolean\n   * @default\n   */\n  declare caching: boolean;\n\n  static ownDefaults = iTextDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...IText.ownDefaults };\n  }\n\n  static type = 'IText';\n\n  get type() {\n    const type = super.type;\n    // backward compatibility\n    return type === 'itext' ? 'i-text' : type;\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...IText.ownDefaults, ...options } as Props);\n    this.initBehavior();\n  }\n\n  /**\n   * While editing handle differently\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\n      // @ts-expect-error irritating TS\n      this._savedProps[key] = value;\n      return this;\n    }\n    if (key === 'canvas') {\n      this.canvas instanceof Canvas &&\n        this.canvas.textEditingManager.remove(this);\n      value instanceof Canvas && value.textEditingManager.add(this);\n    }\n    return super._set(key, value);\n  }\n\n  /**\n   * Sets selection start (left boundary of a selection)\n   * @param {Number} index Index to set selection start to\n   */\n  setSelectionStart(index: number) {\n    index = Math.max(index, 0);\n    this._updateAndFire('selectionStart', index);\n  }\n\n  /**\n   * Sets selection end (right boundary of a selection)\n   * @param {Number} index Index to set selection end to\n   */\n  setSelectionEnd(index: number) {\n    index = Math.min(index, this.text.length);\n    this._updateAndFire('selectionEnd', index);\n  }\n\n  /**\n   * @private\n   * @param {String} property 'selectionStart' or 'selectionEnd'\n   * @param {Number} index new position of property\n   */\n  protected _updateAndFire(\n    property: 'selectionStart' | 'selectionEnd',\n    index: number,\n  ) {\n    if (this[property] !== index) {\n      this._fireSelectionChanged();\n      this[property] = index;\n    }\n    this._updateTextarea();\n  }\n\n  /**\n   * Fires the even of selection changed\n   * @private\n   */\n  _fireSelectionChanged() {\n    this.fire('selection:changed');\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n  }\n\n  /**\n   * Initialize text dimensions. Render all text on given context\n   * or on a offscreen canvas to get the text width with measureText.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   * @private\n   */\n  initDimensions() {\n    this.isEditing && this.initDelayedCursor();\n    super.initDimensions();\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n    complete?: boolean,\n  ) {\n    return super.getSelectionStyles(startIndex, endIndex, complete);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} [styles] Styles object\n   * @param {Number} [startIndex] Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n   */\n  setSelectionStyles(\n    styles: object,\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n  ) {\n    return super.setSelectionStyles(styles, startIndex, endIndex);\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(\n    selectionStart = this.selectionStart,\n    skipWrapping?: boolean,\n  ) {\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx);\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n    // the correct position but not at every cursor animation.\n    this.cursorOffsetCache = {};\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * @override block cursor/selection logic while rendering the exported canvas\n   * @todo this workaround should be replaced with a more robust solution\n   */\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\n    const isEditing = this.isEditing;\n    this.isEditing = false;\n    const canvas = super.toCanvasElement(options);\n    this.isEditing = isEditing;\n    return canvas;\n  }\n\n  /**\n   * Renders cursor or selection (depending on what exists)\n   * it does on the contextTop. If contextTop is not available, do nothing.\n   */\n  renderCursorOrSelection() {\n    if (!this.isEditing) {\n      return;\n    }\n    const ctx = this.clearContextTop(true);\n    if (!ctx) {\n      return;\n    }\n    const boundaries = this._getCursorBoundaries();\n    if (this.selectionStart === this.selectionEnd && !this.inCompositionMode) {\n      this.renderCursor(ctx, boundaries);\n    } else {\n      this.renderSelection(ctx, boundaries);\n    }\n    this.canvas!.contextTopDirty = true;\n    ctx.restore();\n  }\n\n  /**\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\n   * left/top are left/top of entire text box\n   * leftOffset/topOffset are offset from that left/top point of a text box\n   * @private\n   * @param {number} [index] index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundaries(\n    index: number = this.selectionStart,\n    skipCaching?: boolean,\n  ): CursorBoundaries {\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset(),\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\n    return {\n      left: left,\n      top: top,\n      leftOffset: offsets.left,\n      topOffset: offsets.top,\n    };\n  }\n\n  /**\n   * Caches and returns cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundariesOffsets(\n    index: number,\n    skipCaching?: boolean,\n  ): { left: number; top: number } {\n    if (skipCaching) {\n      return this.__getCursorBoundariesOffsets(index);\n    }\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n      return this.cursorOffsetCache as { left: number; top: number };\n    }\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\n  }\n\n  /**\n   * Calculates cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   */\n  __getCursorBoundariesOffsets(index: number) {\n    let topOffset = 0,\n      leftOffset = 0;\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\n\n    for (let i = 0; i < lineIndex; i++) {\n      topOffset += this.getHeightOfLine(i);\n    }\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    const bound = this.__charBounds[lineIndex][charIndex];\n    bound && (leftOffset = bound.left);\n    if (\n      this.charSpacing !== 0 &&\n      charIndex === this._textLines[lineIndex].length\n    ) {\n      leftOffset -= this._getWidthOfCharSpacing();\n    }\n    const boundaries = {\n      top: topOffset,\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n    };\n    if (this.direction === 'rtl') {\n      if (\n        this.textAlign === RIGHT ||\n        this.textAlign === JUSTIFY ||\n        this.textAlign === JUSTIFY_RIGHT\n      ) {\n        boundaries.left *= -1;\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      } else if (\n        this.textAlign === CENTER ||\n        this.textAlign === JUSTIFY_CENTER\n      ) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      }\n    }\n    return boundaries;\n  }\n\n  /**\n   * Renders cursor on context Top, outside the animation cycle, on request\n   * Used for the drag/drop effect.\n   * If contextTop is not available, do nothing.\n   */\n  renderCursorAt(selectionStart: number) {\n    this._renderCursor(\n      this.canvas!.contextTop,\n      this._getCursorBoundaries(selectionStart, true),\n      selectionStart,\n    );\n  }\n\n  /**\n   * Renders cursor\n   * @param {Object} boundaries\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    this._renderCursor(ctx, boundaries, this.selectionStart);\n  }\n\n  /**\n   * Return the data needed to render the cursor for given selection start\n   * The left,top are relative to the object, while width and height are prescaled\n   * to look think with canvas zoom and object scaling,\n   * so they depend on canvas and object scaling\n   */\n  getCursorRenderingData(\n    selectionStart: number = this.selectionStart,\n    boundaries: CursorBoundaries = this._getCursorBoundaries(selectionStart),\n  ): CursorRenderingData {\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex =\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\n      cursorWidth = this.cursorWidth / multiplier,\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\n      topOffset =\n        boundaries.topOffset +\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\n          this.lineHeight -\n        charHeight * (1 - this._fontSizeFraction);\n\n    return {\n      color:\n        this.cursorColor ||\n        (this.getValueOfPropertyAt(lineIndex, charIndex, 'fill') as string),\n      opacity: this._currentCursorOpacity,\n      left: boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n      top: topOffset + boundaries.top + dy,\n      width: cursorWidth,\n      height: charHeight,\n    };\n  }\n\n  /**\n   * Render the cursor at the given selectionStart.\n   *\n   */\n  _renderCursor(\n    ctx: CanvasRenderingContext2D,\n    boundaries: CursorBoundaries,\n    selectionStart: number,\n  ) {\n    const { color, opacity, left, top, width, height } =\n      this.getCursorRenderingData(selectionStart, boundaries);\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity;\n    ctx.fillRect(left, top, width, height);\n  }\n\n  /**\n   * Renders text selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    const selection = {\n      selectionStart: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionStart\n        : this.selectionStart,\n      selectionEnd: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionEnd\n        : this.selectionEnd,\n    };\n    this._renderSelection(ctx, selection, boundaries);\n  }\n\n  /**\n   * Renders drag start text selection\n   */\n  renderDragSourceEffect() {\n    const dragStartSelection =\n      this.draggableTextDelegate.getDragStartSelection()!;\n    this._renderSelection(\n      this.canvas!.contextTop,\n      dragStartSelection,\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true),\n    );\n  }\n\n  renderDropTargetEffect(e: DragEvent) {\n    const dragSelection = this.getSelectionStartFromPointer(e);\n    this.renderCursorAt(dragSelection);\n  }\n\n  /**\n   * Renders text selection\n   * @private\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderSelection(\n    ctx: CanvasRenderingContext2D,\n    selection: { selectionStart: number; selectionEnd: number },\n    boundaries: CursorBoundaries,\n  ) {\n    const selectionStart = selection.selectionStart,\n      selectionEnd = selection.selectionEnd,\n      isJustify = this.textAlign.includes(JUSTIFY),\n      start = this.get2DCursorLocation(selectionStart),\n      end = this.get2DCursorLocation(selectionEnd),\n      startLine = start.lineIndex,\n      endLine = end.lineIndex,\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n    for (let i = startLine; i <= endLine; i++) {\n      const lineOffset = this._getLineLeftOffset(i) || 0;\n      let lineHeight = this.getHeightOfLine(i),\n        realLineHeight = 0,\n        boxStart = 0,\n        boxEnd = 0;\n\n      if (i === startLine) {\n        boxStart = this.__charBounds[startLine][startChar].left;\n      }\n      if (i >= startLine && i < endLine) {\n        boxEnd =\n          isJustify && !this.isEndOfWrapping(i)\n            ? this.width\n            : this.getLineWidth(i) || 5; // WTF is this 5?\n      } else if (i === endLine) {\n        if (endChar === 0) {\n          boxEnd = this.__charBounds[endLine][endChar].left;\n        } else {\n          const charSpacing = this._getWidthOfCharSpacing();\n          boxEnd =\n            this.__charBounds[endLine][endChar - 1].left +\n            this.__charBounds[endLine][endChar - 1].width -\n            charSpacing;\n        }\n      }\n      realLineHeight = lineHeight;\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n        lineHeight /= this.lineHeight;\n      }\n      let drawStart = boundaries.left + lineOffset + boxStart,\n        drawHeight = lineHeight,\n        extraTop = 0;\n      const drawWidth = boxEnd - boxStart;\n      if (this.inCompositionMode) {\n        ctx.fillStyle = this.compositionColor || 'black';\n        drawHeight = 1;\n        extraTop = lineHeight;\n      } else {\n        ctx.fillStyle = this.selectionColor;\n      }\n      if (this.direction === 'rtl') {\n        if (\n          this.textAlign === RIGHT ||\n          this.textAlign === JUSTIFY ||\n          this.textAlign === JUSTIFY_RIGHT\n        ) {\n          drawStart = this.width - drawStart - drawWidth;\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        } else if (\n          this.textAlign === CENTER ||\n          this.textAlign === JUSTIFY_CENTER\n        ) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        }\n      }\n      ctx.fillRect(\n        drawStart,\n        boundaries.top + boundaries.topOffset + extraTop,\n        drawWidth,\n        drawHeight,\n      );\n      boundaries.topOffset += realLineHeight;\n    }\n  }\n\n  /**\n   * High level function to know the height of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns fontSize of char at the current cursor\n   * Unused from the library, is for the end user\n   * @return {Number} Character font size\n   */\n  getCurrentCharFontSize(): number {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n  }\n\n  /**\n   * High level function to know the color of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns color (fill) of char at the current cursor\n   * if the text object has a pattern or gradient for filler, it will return that.\n   * Unused by the library, is for the end user\n   * @return {String | TFiller} Character color (fill)\n   */\n  getCurrentCharColor(): string | TFiller | null {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, FILL);\n  }\n\n  /**\n   * Returns the cursor position for the getCurrent.. functions\n   * @private\n   */\n  _getCurrentCharIndex() {\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n      charIndex =\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n    return { l: cursorPosition.lineIndex, c: charIndex };\n  }\n\n  dispose() {\n    this.exitEditingImpl();\n    this.draggableTextDelegate.dispose();\n    super.dispose();\n  }\n}\n\nclassRegistry.setClass(IText);\n// legacy\nclassRegistry.setClass(IText, 'i-text');\n","import type { TClassProperties, TOptions } from '../typedefs';\nimport { IText } from './IText/IText';\nimport { classRegistry } from '../ClassRegistry';\nimport { createTextboxDefaultControls } from '../controls/commonControls';\nimport { JUSTIFY } from './Text/constants';\nimport type { TextStyleDeclaration } from './Text/StyledText';\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\nimport type { ITextEvents } from './IText/ITextBehavior';\nimport type { TextLinesInfo } from './Text/Text';\nimport type { Control } from '../controls/Control';\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\n  minWidth: 20,\n  dynamicMinWidth: 2,\n  lockScalingFlip: true,\n  noScaleCache: false,\n  _wordJoiners: /[ \\t\\r]/,\n  splitByGrapheme: false,\n};\n\nexport type GraphemeData = {\n  wordsData: {\n    word: string[];\n    width: number;\n  }[][];\n  largestWordWidth: number;\n};\n\nexport type StyleMap = Record<string, { line: number; offset: number }>;\n\n// @TODO this is not complete\ninterface UniqueTextboxProps {\n  minWidth: number;\n  splitByGrapheme: boolean;\n  dynamicMinWidth: number;\n  _wordJoiners: RegExp;\n}\n\nexport interface SerializedTextboxProps\n  extends SerializedITextProps,\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\n\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\n\n/**\n * Textbox class, based on IText, allows the user to resize the text rectangle\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\n * user can only change width. Height is adjusted automatically based on the\n * wrapping of lines.\n */\nexport class Textbox<\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends IText<Props, SProps, EventSpec>\n  implements UniqueTextboxProps\n{\n  /**\n   * Minimum width of textbox, in pixels.\n   * @type Number\n   * @default\n   */\n  declare minWidth: number;\n\n  /**\n   * Minimum calculated width of a textbox, in pixels.\n   * fixed to 2 so that an empty textbox cannot go to 0\n   * and is still selectable without text.\n   * @type Number\n   * @default\n   */\n  declare dynamicMinWidth: number;\n\n  /**\n   * Use this boolean property in order to split strings that have no white space concept.\n   * this is a cheap way to help with chinese/japanese\n   * @type Boolean\n   * @since 2.6.0\n   */\n  declare splitByGrapheme: boolean;\n\n  declare _wordJoiners: RegExp;\n\n  declare _styleMap: StyleMap;\n\n  declare isWrapping: boolean;\n\n  static type = 'Textbox';\n\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\n\n  static ownDefaults = textboxDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Textbox.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...Textbox.ownDefaults, ...options } as Props);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createTextboxDefaultControls() };\n  }\n\n  /**\n   * Unlike superclass's version of this function, Textbox does not update\n   * its width.\n   * @private\n   * @override\n   */\n  initDimensions() {\n    if (!this.initialized) {\n      return;\n    }\n    this.isEditing && this.initDelayedCursor();\n    this._clearCache();\n    // clear dynamicMinWidth as it will be different after we re-wrap line\n    this.dynamicMinWidth = 0;\n    // wrap lines\n    this._styleMap = this._generateStyleMap(this._splitText());\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n    if (this.dynamicMinWidth > this.width) {\n      this._set('width', this.dynamicMinWidth);\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n    // clear cache and re-calculate height\n    this.height = this.calcTextHeight();\n  }\n\n  /**\n   * Generate an object that translates the style object so that it is\n   * broken up by visual lines (new lines and automatic wrapping).\n   * The original text styles object is broken up by actual lines (new lines only),\n   * which is only sufficient for Text / IText\n   * @private\n   */\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\n    let realLineCount = 0,\n      realLineCharCount = 0,\n      charCount = 0;\n    const map: StyleMap = {};\n\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n        realLineCharCount = 0;\n        charCount++;\n        realLineCount++;\n      } else if (\n        !this.splitByGrapheme &&\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\n        i > 0\n      ) {\n        // this case deals with space's that are removed from end of lines when wrapping\n        realLineCharCount++;\n        charCount++;\n      }\n\n      map[i] = { line: realLineCount, offset: realLineCharCount };\n\n      charCount += textInfo.graphemeLines[i].length;\n      realLineCharCount += textInfo.graphemeLines[i].length;\n    }\n\n    return map;\n  }\n\n  /**\n   * Returns true if object has a style property or has it on a specified line\n   * @param {Number} lineIndex\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (map) {\n        lineIndex = map.line;\n      }\n    }\n    return super.styleHas(property, lineIndex);\n  }\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    let offset = 0,\n      nextLineIndex = lineIndex + 1,\n      nextOffset: number,\n      shouldLimit = false;\n    const map = this._styleMap[lineIndex],\n      mapNextLine = this._styleMap[lineIndex + 1];\n    if (map) {\n      lineIndex = map.line;\n      offset = map.offset;\n    }\n    if (mapNextLine) {\n      nextLineIndex = mapNextLine.line;\n      shouldLimit = nextLineIndex === lineIndex;\n      nextOffset = mapNextLine.offset;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        const p2Number = parseInt(p2, 10);\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\n          // eslint-disable-next-line no-unused-vars\n          for (const p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (!map) {\n        return {};\n      }\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n    }\n    return super._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    const map = this._styleMap[lineIndex];\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\n  }\n\n  /**\n   * probably broken need a fix\n   * Returns the real style line that correspond to the wrapped lineIndex line\n   * Used just to verify if the line does exist or not.\n   * @param {Number} lineIndex\n   * @returns {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    const map = this._styleMap[lineIndex];\n    return !!this.styles[map.line];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._setLineStyle(map.line);\n  }\n\n  /**\n   * Wraps text using the 'width' property of Textbox. First this function\n   * splits text on newlines, so we preserve newlines entered by the user.\n   * Then it wraps each line using the width of the Textbox by calling\n   * _wrapLine().\n   * @param {Array} lines The string array of text that is split into lines\n   * @param {Number} desiredWidth width you want to wrap to\n   * @returns {Array} Array of lines\n   */\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\n    this.isWrapping = true;\n    // extract all thewords and the widths to optimally wrap lines.\n    const data = this.getGraphemeDataForRender(lines);\n    const wrapped: string[][] = [];\n    for (let i = 0; i < data.wordsData.length; i++) {\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\n    }\n    this.isWrapping = false;\n    return wrapped;\n  }\n\n  /**\n   * For each line of text terminated by an hard line stop,\n   * measure each word width and extract the largest word from all.\n   * The returned words here are the one that at the end will be rendered.\n   * @param {string[]} lines the lines we need to measure\n   *\n   */\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\n    const splitByGrapheme = this.splitByGrapheme,\n      infix = splitByGrapheme ? '' : ' ';\n\n    let largestWordWidth = 0;\n\n    const data = lines.map((line, lineIndex) => {\n      let offset = 0;\n      const wordsOrGraphemes = splitByGrapheme\n        ? this.graphemeSplit(line)\n        : this.wordSplit(line);\n\n      if (wordsOrGraphemes.length === 0) {\n        return [{ word: [], width: 0 }];\n      }\n\n      return wordsOrGraphemes.map((word: string) => {\n        // if using splitByGrapheme words are already in graphemes.\n        const graphemeArray = splitByGrapheme\n          ? [word]\n          : this.graphemeSplit(word);\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\n        largestWordWidth = Math.max(width, largestWordWidth);\n        offset += graphemeArray.length + infix.length;\n        return { word: graphemeArray, width };\n      });\n    });\n\n    return {\n      wordsData: data,\n      largestWordWidth,\n    };\n  }\n\n  /**\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\n   * It gets called when charBounds are not available yet.\n   * Override if necessary\n   * Use with {@link Textbox#wordSplit}\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {number} lineIndex\n   * @param {number} charOffset\n   * @returns {number}\n   */\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\n    let width = 0,\n      prevGrapheme;\n    const skipLeft = true;\n    for (let i = 0, len = word.length; i < len; i++) {\n      const box = this._getGraphemeBox(\n        word[i],\n        lineIndex,\n        i + charOffset,\n        prevGrapheme,\n        skipLeft,\n      );\n      width += box.kernedWidth;\n      prevGrapheme = word[i];\n    }\n    return width;\n  }\n\n  /**\n   * Override this method to customize word splitting\n   * Use with {@link Textbox#_measureWord}\n   * @param {string} value\n   * @returns {string[]} array of words\n   */\n  wordSplit(value: string): string[] {\n    return value.split(this._wordJoiners);\n  }\n\n  /**\n   * Wraps a line of text using the width of the Textbox as desiredWidth\n   * and leveraging the known width o words from GraphemeData\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} desiredWidth width you want to wrap the line to\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n   * @returns {Array} Array of line(s) into which the given text is wrapped\n   * to.\n   */\n  _wrapLine(\n    lineIndex: number,\n    desiredWidth: number,\n    { largestWordWidth, wordsData }: GraphemeData,\n    reservedSpace = 0,\n  ): string[][] {\n    const additionalSpace = this._getWidthOfCharSpacing(),\n      splitByGrapheme = this.splitByGrapheme,\n      graphemeLines = [],\n      infix = splitByGrapheme ? '' : ' ';\n\n    let lineWidth = 0,\n      line: string[] = [],\n      // spaces in different languages?\n      offset = 0,\n      infixWidth = 0,\n      lineJustStarted = true;\n\n    desiredWidth -= reservedSpace;\n\n    const maxWidth = Math.max(\n      desiredWidth,\n      largestWordWidth,\n      this.dynamicMinWidth,\n    );\n    // layout words\n    const data = wordsData[lineIndex];\n    offset = 0;\n    let i;\n    for (i = 0; i < data.length; i++) {\n      const { word, width: wordWidth } = data[i];\n      offset += word.length;\n\n      lineWidth += infixWidth + wordWidth - additionalSpace;\n      if (lineWidth > maxWidth && !lineJustStarted) {\n        graphemeLines.push(line);\n        line = [];\n        lineWidth = wordWidth;\n        lineJustStarted = true;\n      } else {\n        lineWidth += additionalSpace;\n      }\n\n      if (!lineJustStarted && !splitByGrapheme) {\n        line.push(infix);\n      }\n      line = line.concat(word);\n\n      infixWidth = splitByGrapheme\n        ? 0\n        : this._measureWord([infix], lineIndex, offset);\n      offset++;\n      lineJustStarted = false;\n    }\n\n    i && graphemeLines.push(line);\n\n    // TODO: this code is probably not necessary anymore.\n    // it can be moved out of this function since largestWordWidth is now\n    // known in advance\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n    }\n    return graphemeLines;\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @param {Number} lineIndex text to split\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    if (!this._styleMap[lineIndex + 1]) {\n      // is last line, return true;\n      return true;\n    }\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n      // this is last line before a line break, return true;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * This is important only for splitByGrapheme at the end of wrapping.\n   * If we are not wrapping the offset is always 1\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\n    if (this.splitByGrapheme && !skipWrapping) {\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n    }\n    return 1;\n  }\n\n  /**\n   * Gets lines of text to render in the Textbox. This function calculates\n   * text wrapping on the fly every time it is called.\n   * @param {String} text text to split\n   * @returns {Array} Array of lines in the Textbox.\n   * @override\n   */\n  _splitTextIntoLines(text: string) {\n    const newText = super._splitTextIntoLines(text),\n      graphemeLines = this._wrapText(newText.lines, this.width),\n      lines = new Array(graphemeLines.length);\n    for (let i = 0; i < graphemeLines.length; i++) {\n      lines[i] = graphemeLines[i].join('');\n    }\n    newText.lines = lines;\n    newText.graphemeLines = graphemeLines;\n    return newText;\n  }\n\n  getMinWidth() {\n    return Math.max(this.minWidth, this.dynamicMinWidth);\n  }\n\n  _removeExtraneousStyles() {\n    const linesToKeep = new Map();\n    for (const prop in this._styleMap) {\n      const propNumber = parseInt(prop, 10);\n      if (this._textLines[propNumber]) {\n        const lineIndex = this._styleMap[prop].line;\n        linesToKeep.set(`${lineIndex}`, true);\n      }\n    }\n    for (const prop in this.styles) {\n      if (!linesToKeep.has(prop)) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject<T, K>([\n      'minWidth',\n      'splitByGrapheme',\n      ...propertiesToInclude,\n    ] as K[]) as Pick<T, K> & SProps;\n  }\n}\n\nclassRegistry.setClass(Textbox);\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport { sendPointToPlane } from '../../util/misc/planeChange';\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { getObjectBounds } from './utils';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to match the clip path bounding box.\n */\nexport class ClipPathLayout extends LayoutStrategy {\n  static readonly type = 'clip-path';\n\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\n  }\n\n  shouldLayoutClipPath() {\n    return false;\n  }\n\n  calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    const { target } = context;\n    const { clipPath, group } = target;\n    if (!clipPath || !this.shouldPerformLayout(context)) {\n      return;\n    }\n    // TODO: remove stroke calculation from this case\n    const { width, height } = makeBoundingBoxFromPoints(\n      getObjectBounds(target, clipPath as FabricObject),\n    );\n    const size = new Point(width, height);\n    if (clipPath.absolutePositioned) {\n      //  we want the center point to exist in group's containing plane\n      const clipPathCenter = sendPointToPlane(\n        clipPath.getRelativeCenterPoint(),\n        undefined,\n        group ? group.calcTransformMatrix() : undefined,\n      );\n      return {\n        center: clipPathCenter,\n        size,\n      };\n    } else {\n      //  we want the center point to exist in group's containing plane, so we send it upwards\n      const clipPathCenter = clipPath\n        .getRelativeCenterPoint()\n        .transform(target.calcOwnMatrix(), true);\n      if (this.shouldPerformLayout(context)) {\n        // the clip path is positioned relative to the group's center which is affected by the bbox\n        // so we first calculate the bbox\n        const { center = new Point(), correction = new Point() } =\n          this.calcBoundingBox(objects, context) || {};\n        return {\n          center: center.add(clipPathCenter),\n          correction: correction.subtract(clipPathCenter),\n          size,\n        };\n      } else {\n        return {\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\n          size,\n        };\n      }\n    }\n  }\n}\n\nclassRegistry.setClass(ClipPathLayout);\n","import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n","import { LayoutManager } from './LayoutManager';\nimport type { RegistrationContext, StrictLayoutContext } from './types';\nimport type { Group } from '../shapes/Group';\n\n/**\n * Today the LayoutManager class also takes care of subscribing event handlers\n * to update the group layout when the group is interactive and a transform is applied\n * to a child object.\n * The ActiveSelection is never interactive, but it could contain objects from\n * groups that are.\n * The standard LayoutManager would subscribe the children of the activeSelection to\n * perform layout changes to the active selection itself, what we need instead is that\n * the transformation applied to the active selection will trigger changes to the\n * original group of the children ( the one referenced under the parent property )\n * This subclass of the LayoutManager has a single duty to fill the gap of this difference.`\n */\nexport class ActiveSelectionLayoutManager extends LayoutManager {\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      parent.layoutManager.subscribeTargets({\n        target: parent,\n        targets: [activeSelection],\n      });\n    });\n  }\n\n  /**\n   * unsubscribe from parent only if all its children were deselected\n   */\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const selectedObjects = activeSelection.getObjects();\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      !selectedObjects.some((object) => object.parent === parent) &&\n        parent.layoutManager.unsubscribeTargets({\n          target: parent,\n          targets: [activeSelection],\n        });\n    });\n  }\n}\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\nimport { classRegistry } from '../ClassRegistry';\nimport type { GroupProps } from './Group';\nimport { Group } from './Group';\nimport type { FabricObject } from './Object/FabricObject';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { TClassProperties } from '../typedefs';\nimport { log } from '../util/internals/console';\nimport { ActiveSelectionLayoutManager } from '../LayoutManager/ActiveSelectionLayoutManager';\n\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\n\nexport interface ActiveSelectionOptions extends GroupProps {\n  multiSelectionStacking: MultiSelectionStacking;\n}\n\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\n  {\n    multiSelectionStacking: 'canvas-stacking',\n  };\n\n/**\n * Used by Canvas to manage selection.\n *\n * @example\n * class MyActiveSelection extends ActiveSelection {\n *   ...\n * }\n *\n * // override the default `ActiveSelection` class\n * classRegistry.setClass(MyActiveSelection)\n */\nexport class ActiveSelection extends Group {\n  static type = 'ActiveSelection';\n\n  static ownDefaults: Record<string, any> = activeSelectionDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\n  }\n\n  /**\n   * The ActiveSelection needs to use the ActiveSelectionLayoutManager\n   * or selections on interactive groups may be broken\n   */\n  declare layoutManager: ActiveSelectionLayoutManager;\n\n  /**\n   * controls how selected objects are added during a multiselection event\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\n   * - `selection-order` adds the selected object to the top of the stack,\n   * meaning that the stack is ordered by the order in which objects were selected\n   * @default `canvas-stacking`\n   */\n  declare multiSelectionStacking: MultiSelectionStacking;\n\n  constructor(\n    objects: FabricObject[] = [],\n    options: Partial<ActiveSelectionOptions> = {},\n  ) {\n    super();\n    Object.assign(this, ActiveSelection.ownDefaults);\n    this.setOptions(options);\n    const { left, top, layoutManager } = options;\n    this.groupInit(objects, {\n      left,\n      top,\n      layoutManager: layoutManager ?? new ActiveSelectionLayoutManager(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return true;\n  }\n\n  /**\n   * @private\n   * @override we don't want the selection monitor to be active\n   */\n  __objectSelectionMonitor() {\n    //  noop\n  }\n\n  /**\n   * Adds objects with respect to {@link multiSelectionStacking}\n   * @param targets object to add to selection\n   */\n  multiSelectAdd(...targets: FabricObject[]) {\n    if (this.multiSelectionStacking === 'selection-order') {\n      this.add(...targets);\n    } else {\n      //  respect object stacking as it is on canvas\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\n      targets.forEach((target) => {\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\n        const insertAt =\n          index === -1\n            ? //  `target` is in front of all other objects\n              this.size()\n            : index;\n        this.insertAt(insertAt, target);\n      });\n    }\n  }\n\n  /**\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\n   */\n  canEnterGroup(object: FabricObject) {\n    if (\n      this.getObjects().some(\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o),\n      )\n    ) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'ActiveSelection: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    }\n\n    return super.canEnterGroup(object);\n  }\n\n  /**\n   * Change an object so that it can be part of an active selection.\n   * this method is called by multiselectAdd from canvas code.\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    // This condition check that the object has currently a group, and the group\n    // is also its parent, meaning that is not in an active selection, but is\n    // in a normal group.\n    if (object.parent && object.parent === object.group) {\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\n      // for later re-enter\n      object.parent._exitGroup(object);\n      // in this case the object is probably inside an active selection.\n    } else if (object.group && object.parent !== object.group) {\n      // in this case group.remove will also clear the old parent reference.\n      object.group.remove(object);\n    }\n    // enter the active selection from a render perspective\n    // the object will be in the objects array of both the ActiveSelection and the Group\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * we want objects to retain their canvas ref when exiting instance\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    // return to parent\n    object.parent && object.parent._enterGroup(object, true);\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    super._onAfterObjectsChange(type, targets);\n    const groups = new Set<Group>();\n    targets.forEach((object) => {\n      const { parent } = object;\n      parent && groups.add(parent);\n    });\n    if (type === LAYOUT_TYPE_REMOVED) {\n      //  invalidate groups' layout and mark as dirty\n      groups.forEach((group) => {\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\n      });\n    } else {\n      //  mark groups as dirty\n      groups.forEach((group) => {\n        group._set('dirty', true);\n      });\n    }\n  }\n\n  /**\n   * @override remove all objects\n   */\n  onDeselect() {\n    this.removeAll();\n    return false;\n  }\n\n  /**\n   * Returns string representation of a group\n   * @return {String}\n   */\n  toString() {\n    return `#<ActiveSelection: (${this.complexity()})>`;\n  }\n\n  /**\n   * Decide if the object should cache or not. The Active selection never caches\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return false;\n  }\n\n  /**\n   * Check if this group or its parent group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache() {\n    return false;\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [styleOverride] properties to override the object style\n   * @param {Object} [childrenOverride] properties to override the children overrides\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride?: ControlRenderingStyleOverride,\n    childrenOverride?: ControlRenderingStyleOverride,\n  ) {\n    ctx.save();\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    const options = {\n      hasControls: false,\n      ...childrenOverride,\n      forActiveSelection: true,\n    };\n    for (let i = 0; i < this._objects.length; i++) {\n      this._objects[i]._renderControls(ctx, options);\n    }\n    super._renderControls(ctx, styleOverride);\n    ctx.restore();\n  }\n}\n\nclassRegistry.setClass(ActiveSelection);\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\n","/**\n * Canvas 2D filter backend.\n */\nimport type { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\n\nexport class Canvas2dFilterBackend {\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  /**\n   * Apply a set of filters against a source image and draw the filtered output\n   * to the provided destination canvas.\n   *\n   * @param {EnhancedFilter} filters The filter to apply.\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n   * @param {Number} sourceWidth The width of the source input.\n   * @param {Number} sourceHeight The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    sourceElement: CanvasImageSource,\n    sourceWidth: number,\n    sourceHeight: number,\n    targetCanvas: HTMLCanvasElement,\n  ): T2DPipelineState | void {\n    const ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const pipelineState: T2DPipelineState = {\n      sourceWidth,\n      sourceHeight,\n      imageData,\n      originalEl: sourceElement,\n      originalImageData,\n      canvasEl: targetCanvas,\n      ctx,\n      filterBackend: this,\n    };\n    filters.forEach((filter) => {\n      filter.applyTo(pipelineState);\n    });\n    const { imageData: imageDataPostFilter } = pipelineState;\n    if (\n      imageDataPostFilter.width !== sourceWidth ||\n      imageDataPostFilter.height !== sourceHeight\n    ) {\n      targetCanvas.width = imageDataPostFilter.width;\n      targetCanvas.height = imageDataPostFilter.height;\n    }\n    ctx.putImageData(imageDataPostFilter, 0, 0);\n    return pipelineState;\n  }\n}\n","import { config } from '../config';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport type {\n  TWebGLPipelineState,\n  TProgramCache,\n  TTextureCache,\n  TPipelineResources,\n} from './typedefs';\nimport type { BaseFilter } from './BaseFilter';\n\nexport class WebGLFilterBackend {\n  declare tileSize: number;\n\n  /**\n   * Define ...\n   **/\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n\n  /**\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\n   * to transfer the data back in the 2d logic\n   **/\n  declare imageBuffer?: ArrayBuffer;\n\n  declare canvas: HTMLCanvasElement;\n\n  /**\n   * The Webgl context that will execute the operations for filtering\n   **/\n  declare gl: WebGLRenderingContext;\n\n  /**\n   * Keyed map for shader cache\n   **/\n  declare programCache: TProgramCache;\n\n  /**\n   * Keyed map for texture cache\n   **/\n  declare textureCache: TTextureCache;\n\n  /**\n   * Contains GPU info for debug\n   **/\n  declare gpuInfo: any;\n\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  constructor({ tileSize = config.textureSize } = {}) {\n    this.tileSize = tileSize;\n    this.setupGLContext(tileSize, tileSize);\n    this.captureGPUInfo();\n  }\n\n  /**\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n   */\n  setupGLContext(width: number, height: number): void {\n    this.dispose();\n    this.createWebGLCanvas(width, height);\n  }\n\n  /**\n   * Create a canvas element and associated WebGL context and attaches them as\n   * class properties to the GLFilterBackend class.\n   */\n  createWebGLCanvas(width: number, height: number): void {\n    const canvas = createCanvasElementFor({ width, height });\n    const glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false,\n      },\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\n\n    if (!gl) {\n      return;\n    }\n    gl.clearColor(0, 0, 0, 0);\n    // this canvas can fire webglcontextlost and webglcontextrestored\n    this.canvas = canvas;\n    this.gl = gl;\n  }\n\n  /**\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\n   * to the provided target canvas.\n   *\n   * @param {Array} filters The filters to apply.\n   * @param {TexImageSource} source The source to be filtered.\n   * @param {Number} width The width of the source input.\n   * @param {Number} height The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n   * omitted, caching will be skipped.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    source: TexImageSource,\n    width: number,\n    height: number,\n    targetCanvas: HTMLCanvasElement,\n    cacheKey?: string,\n  ): TWebGLPipelineState | undefined {\n    const gl = this.gl;\n    const ctx = targetCanvas.getContext('2d');\n    if (!gl || !ctx) {\n      return;\n    }\n    let cachedTexture;\n    if (cacheKey) {\n      cachedTexture = this.getCachedTexture(cacheKey, source);\n    }\n    const pipelineState: TWebGLPipelineState = {\n      originalWidth:\n        (source as HTMLImageElement).width ||\n        (source as HTMLImageElement).naturalWidth ||\n        0,\n      originalHeight:\n        (source as HTMLImageElement).height ||\n        (source as HTMLImageElement).naturalHeight ||\n        0,\n      sourceWidth: width,\n      sourceHeight: height,\n      destinationWidth: width,\n      destinationHeight: height,\n      context: gl,\n      sourceTexture: this.createTexture(\n        gl,\n        width,\n        height,\n        !cachedTexture ? source : undefined,\n      ),\n      targetTexture: this.createTexture(gl, width, height),\n      originalTexture:\n        cachedTexture ||\n        this.createTexture(\n          gl,\n          width,\n          height,\n          !cachedTexture ? source : undefined,\n        )!,\n      passes: filters.length,\n      webgl: true,\n      aPosition: this.aPosition,\n      programCache: this.programCache,\n      pass: 0,\n      filterBackend: this,\n      targetCanvas: targetCanvas,\n    };\n    const tempFbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n    filters.forEach((filter: any) => {\n      filter && filter.applyTo(pipelineState);\n    });\n    resizeCanvasIfNeeded(pipelineState);\n    this.copyGLTo2D(gl, pipelineState);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.deleteTexture(pipelineState.sourceTexture);\n    gl.deleteTexture(pipelineState.targetTexture);\n    gl.deleteFramebuffer(tempFbo);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    return pipelineState;\n  }\n\n  /**\n   * Detach event listeners, remove references, and clean up caches.\n   */\n  dispose() {\n    if (this.canvas) {\n      // we are disposing, we don't care about the fact\n      // that the canvas shouldn't be null.\n      // @ts-expect-error disposing\n      this.canvas = null;\n      // @ts-expect-error disposing\n      this.gl = null;\n    }\n    this.clearWebGLCaches();\n  }\n\n  /**\n   * Wipe out WebGL-related caches.\n   */\n  clearWebGLCaches() {\n    this.programCache = {};\n    this.textureCache = {};\n  }\n\n  /**\n   * Create a WebGL texture object.\n   *\n   * Accepts specific dimensions to initialize the texture to or a source image.\n   *\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n   * @param {number} width The width to initialize the texture at.\n   * @param {number} height The height to initialize the texture.\n   * @param {TexImageSource} textureImageSource A source for the texture data.\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\n   * @returns {WebGLTexture}\n   */\n  createTexture(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    textureImageSource?: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ) {\n    const {\n      NEAREST,\n      TEXTURE_2D,\n      RGBA,\n      UNSIGNED_BYTE,\n      CLAMP_TO_EDGE,\n      TEXTURE_MAG_FILTER,\n      TEXTURE_MIN_FILTER,\n      TEXTURE_WRAP_S,\n      TEXTURE_WRAP_T,\n    } = gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n    if (textureImageSource) {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        RGBA,\n        UNSIGNED_BYTE,\n        textureImageSource,\n      );\n    } else {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        width,\n        height,\n        0,\n        RGBA,\n        UNSIGNED_BYTE,\n        null,\n      );\n    }\n    return texture;\n  }\n\n  /**\n   * Can be optionally used to get a texture from the cache array\n   *\n   * If an existing texture is not found, a new texture is created and cached.\n   *\n   * @param {String} uniqueId A cache key to use to find an existing texture.\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n   * texture cache entry if one does not already exist.\n   */\n  getCachedTexture(\n    uniqueId: string,\n    textureImageSource: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ): WebGLTexture | null {\n    const { textureCache } = this;\n    if (textureCache[uniqueId]) {\n      return textureCache[uniqueId];\n    } else {\n      const texture = this.createTexture(\n        this.gl,\n        (textureImageSource as HTMLImageElement).width,\n        (textureImageSource as HTMLImageElement).height,\n        textureImageSource,\n        filter,\n      );\n      if (texture) {\n        textureCache[uniqueId] = texture;\n      }\n      return texture;\n    }\n  }\n\n  /**\n   * Clear out cached resources related to a source image that has been\n   * filtered previously.\n   *\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\n   */\n  evictCachesForKey(cacheKey: string) {\n    if (this.textureCache[cacheKey]) {\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\n      delete this.textureCache[cacheKey];\n    }\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas.\n   *\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\n    const glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.translate(0, targetCanvas.height); // move it down again\n    ctx.scale(1, -1); // vertical flip\n    // where is my image on the big glcanvas?\n    const sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(\n      glCanvas,\n      0,\n      sourceY,\n      targetCanvas.width,\n      targetCanvas.height,\n      0,\n      0,\n      targetCanvas.width,\n      targetCanvas.height,\n    );\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2DPutImageData(\n    this: Required<WebGLFilterBackend>,\n    gl: WebGLRenderingContext,\n    pipelineState: TWebGLPipelineState,\n  ) {\n    const targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n    if (!ctx) {\n      return;\n    }\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Attempt to extract GPU information strings from a WebGL context.\n   *\n   * Useful information when debugging or blacklisting specific GPUs.\n   *\n   * @returns {Object} A GPU info object with renderer and vendor strings.\n   */\n  captureGPUInfo() {\n    if (this.gpuInfo) {\n      return this.gpuInfo;\n    }\n    const gl = this.gl,\n      gpuInfo = { renderer: '', vendor: '' };\n    if (!gl) {\n      return gpuInfo;\n    }\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\n    if (ext) {\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n      if (renderer) {\n        gpuInfo.renderer = renderer.toLowerCase();\n      }\n      if (vendor) {\n        gpuInfo.vendor = vendor.toLowerCase();\n      }\n    }\n    this.gpuInfo = gpuInfo;\n    return gpuInfo;\n  }\n}\n\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\n  const targetCanvas = pipelineState.targetCanvas,\n    width = targetCanvas.width,\n    height = targetCanvas.height,\n    dWidth = pipelineState.destinationWidth,\n    dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n","import { config } from '../config';\nimport { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\n\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\n\nlet filterBackend: FilterBackend;\n\n/**\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\n */\nexport function initFilterBackend(): FilterBackend {\n  const { WebGLProbe } = getEnv();\n  WebGLProbe.queryWebGL(createCanvasElement());\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\n  } else {\n    return new Canvas2dFilterBackend();\n  }\n}\n\n/**\n * Get the current fabricJS filter backend  or initialize one if not available yet\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\n * pass `false` to get the backend ref without mutating it\n */\nexport function getFilterBackend(strict = true): FilterBackend {\n  if (!filterBackend && strict) {\n    filterBackend = initFilterBackend();\n  }\n  return filterBackend;\n}\n\nexport function setFilterBackend(backend: FilterBackend) {\n  filterBackend = backend;\n}\n","import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { FILL, NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter<string, Record<string, any>>[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter<string, Record<string, any>>[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options?: Props) {\n    super();\n    this.filters = [];\n    Object.assign(this, FabricImage.ownDefaults);\n    this.setOptions(options);\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options,\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList?.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n',\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`,\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== FILL) {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElementFor(elementToFilter),\n      { width, height } = elementToFilter;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter],\n      elementToFilter,\n      width,\n      height,\n      this._element,\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[] = this.filters || [],\n  ) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement,\n      this.cacheKey,\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D,\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the FabricImage should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special Image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || '',\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * Will be removed from fabric 7\n   * @static\n   * @deprecated\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options?: Abortable,\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter<string>>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter<'Resize'>>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T,\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions),\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'],\n      options,\n      parsedAttributes,\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n","import { svgNS } from './constants';\nimport {\n  parsePreserveAspectRatioAttribute,\n  parseUnit,\n} from '../util/misc/svgParsing';\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\nimport { NONE } from '../constants';\n\nexport type ParsedViewboxTransform = Partial<{\n  width: number;\n  height: number;\n  minX: number;\n  minY: number;\n  viewBoxWidth: number;\n  viewBoxHeight: number;\n}>;\n\n/**\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n */\nexport function applyViewboxTransform(\n  element: Element,\n): ParsedViewboxTransform {\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\n    return {};\n  }\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\n  let scaleX = 1;\n  let scaleY = 1;\n  let minX = 0;\n  let minY = 0;\n  let matrix;\n  let el;\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const x = element.getAttribute('x') || 0;\n  const y = element.getAttribute('y') || 0;\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\n  const missingViewBox = !goodViewbox;\n  const missingDimAttr =\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\n\n  let translateMatrix = '';\n  let widthDiff = 0;\n  let heightDiff = 0;\n\n  if (missingViewBox) {\n    if (\n      (x || y) &&\n      element.parentNode &&\n      element.parentNode.nodeName !== '#document'\n    ) {\n      translateMatrix =\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\n      element.setAttribute('transform', matrix);\n      element.removeAttribute('x');\n      element.removeAttribute('y');\n    }\n  }\n\n  if (missingViewBox && missingDimAttr) {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const parsedDim: ParsedViewboxTransform = {\n    width: 0,\n    height: 0,\n  };\n\n  if (missingViewBox) {\n    parsedDim.width = parseUnit(widthAttr!);\n    parsedDim.height = parseUnit(heightAttr!);\n    // set a transform for elements that have x y and are inner(only) SVGs\n    return parsedDim;\n  }\n\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\n  minX = -parseFloat(pasedViewBox[1]);\n  minY = -parseFloat(pasedViewBox[2]);\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\n  parsedDim.minX = minX;\n  parsedDim.minY = minY;\n  parsedDim.viewBoxWidth = viewBoxWidth;\n  parsedDim.viewBoxHeight = viewBoxHeight;\n  if (!missingDimAttr) {\n    parsedDim.width = parseUnit(widthAttr);\n    parsedDim.height = parseUnit(heightAttr);\n    scaleX = parsedDim.width / viewBoxWidth;\n    scaleY = parsedDim.height / viewBoxHeight;\n  } else {\n    parsedDim.width = viewBoxWidth;\n    parsedDim.height = viewBoxHeight;\n  }\n\n  // default is to preserve aspect ratio\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\n    element.getAttribute('preserveAspectRatio') || '',\n  );\n  if (preserveAspectRatio.alignX !== NONE) {\n    //translate all container for the effect of Mid, Min, Max\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n      // calculate additional translation to move the viewbox\n    }\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\n      // calculate additional translation to move the viewbox\n    }\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n    if (preserveAspectRatio.alignX === 'Mid') {\n      widthDiff /= 2;\n    }\n    if (preserveAspectRatio.alignY === 'Mid') {\n      heightDiff /= 2;\n    }\n    if (preserveAspectRatio.alignX === 'Min') {\n      widthDiff = 0;\n    }\n    if (preserveAspectRatio.alignY === 'Min') {\n      heightDiff = 0;\n    }\n  }\n\n  if (\n    scaleX === 1 &&\n    scaleY === 1 &&\n    minX === 0 &&\n    minY === 0 &&\n    x === 0 &&\n    y === 0\n  ) {\n    return parsedDim;\n  }\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\n    translateMatrix =\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n  }\n\n  matrix =\n    translateMatrix +\n    ' matrix(' +\n    scaleX +\n    ' 0' +\n    ' 0 ' +\n    scaleY +\n    ' ' +\n    (minX * scaleX + widthDiff) +\n    ' ' +\n    (minY * scaleY + heightDiff) +\n    ') ';\n  // seems unused.\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\n  if (element.nodeName === 'svg') {\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\n    // element.firstChild != null\n    while (element.firstChild) {\n      el.appendChild(element.firstChild);\n    }\n    element.appendChild(el);\n  } else {\n    el = element;\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    matrix = el.getAttribute('transform') + matrix;\n  }\n  el.setAttribute('transform', matrix);\n  return parsedDim;\n}\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\n","import { svgInvalidAncestors } from './constants';\nimport { getSvgRegex } from './getSvgRegex';\nimport { getTagName } from './getTagName';\n\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n\nexport function hasInvalidAncestor(element: Element) {\n  let _element: Element | null = element;\n  while (_element && (_element = _element.parentElement)) {\n    if (\n      _element &&\n      _element.nodeName &&\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\n      !_element.getAttribute('instantiated_by_use')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","export function getMultipleNodes(\n  doc: Document,\n  nodeNames: string[],\n): Element[] {\n  let nodeName,\n    nodeArray: Element[] = [],\n    nodeList,\n    i,\n    len;\n  for (i = 0, len = nodeNames.length; i < len; i++) {\n    nodeName = nodeNames[i];\n    nodeList = doc.getElementsByTagNameNS(\n      'http://www.w3.org/2000/svg',\n      nodeName,\n    );\n    nodeArray = nodeArray.concat(Array.from(nodeList));\n  }\n  return nodeArray;\n}\n","const gradientsAttrs = [\n  'gradientTransform',\n  'x1',\n  'x2',\n  'y1',\n  'y2',\n  'gradientUnits',\n  'cx',\n  'cy',\n  'r',\n  'fx',\n  'fy',\n];\nconst xlinkAttr = 'xlink:href';\n\nexport function recursivelyParseGradientsXlink(\n  doc: Document,\n  gradient: Element,\n) {\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\n    referencedGradient = doc.getElementById(xLink);\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\n  }\n  if (referencedGradient) {\n    gradientsAttrs.forEach((attr) => {\n      const value = referencedGradient.getAttribute(attr);\n      if (!gradient.hasAttribute(attr) && value) {\n        gradient.setAttribute(attr, value);\n      }\n    });\n    if (!gradient.children.length) {\n      const referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n  }\n  gradient.removeAttribute(xlinkAttr);\n}\n","import { getMultipleNodes } from './getMultipleNodes';\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\n\nconst tagArray = [\n  'linearGradient',\n  'radialGradient',\n  'svg:linearGradient',\n  'svg:radialGradient',\n];\n\n/**\n * Parses an SVG document, returning all of the gradient declarations found in it\n * @param {SVGDocument} doc SVG document to parse\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n */\nexport function getGradientDefs(\n  doc: Document,\n): Record<string, SVGGradientElement> {\n  const elList = getMultipleNodes(doc, tagArray);\n  const gradientDefs: Record<string, SVGGradientElement> = {};\n  let j = elList.length;\n  while (j--) {\n    const el = elList[j];\n    if (el.getAttribute('xlink:href')) {\n      recursivelyParseGradientsXlink(doc, el);\n    }\n    const id = el.getAttribute('id');\n    if (id) {\n      gradientDefs[id] = el as SVGGradientElement;\n    }\n  }\n  return gradientDefs;\n}\n","import type { CSSRules } from './typedefs';\n\n/**\n * Returns CSS rules for a given SVG document\n * @param {HTMLElement} doc SVG document to parse\n * @return {Object} CSS rules of this document\n */\nexport function getCSSRules(doc: Document) {\n  const styles = doc.getElementsByTagName('style');\n  let i;\n  let len;\n  const allRules: CSSRules = {};\n\n  // very crude parsing of style contents\n  for (i = 0, len = styles.length; i < len; i++) {\n    const styleContents = (styles[i].textContent || '').replace(\n      // remove comments\n      /\\/\\*[\\s\\S]*?\\*\\//g,\n      '',\n    );\n\n    if (styleContents.trim() === '') {\n      continue;\n    }\n    // recovers all the rule in this form `body { style code... }`\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n    styleContents\n      .split('}')\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\n      // at this point we have hopefully an array of rules `body { style code... `\n      .forEach((rule) => {\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\n        // can not handle it.\n        if (\n          (rule.match(/{/g) || []).length > 1 &&\n          rule.trim().startsWith('@')\n        ) {\n          return;\n        }\n\n        const match = rule.split('{'),\n          ruleObj: Record<string, string> = {},\n          declaration = match[1].trim(),\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\n            return pair.trim();\n          });\n\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n          const pair = propertyValuePairs[i].split(':'),\n            property = pair[0].trim(),\n            value = pair[1].trim();\n          ruleObj[property] = value;\n        }\n        rule = match[0].trim();\n        rule.split(',').forEach((_rule) => {\n          _rule = _rule.replace(/^svg/i, '').trim();\n          if (_rule === '') {\n            return;\n          }\n          allRules[_rule] = {\n            ...(allRules[_rule] || {}),\n            ...ruleObj,\n          };\n        });\n      });\n  }\n  return allRules;\n}\n","import { Gradient } from '../gradient/Gradient';\nimport { Group } from '../shapes/Group';\nimport { FabricImage } from '../shapes/Image';\nimport { classRegistry } from '../ClassRegistry';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../util/misc/matrix';\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { Point } from '../Point';\nimport { CENTER, FILL, STROKE } from '../constants';\nimport { getGradientDefs } from './getGradientDefs';\nimport { getCSSRules } from './getCSSRules';\nimport type { LoadImageOptions } from '../util';\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\nimport type { SVGOptions } from '../gradient';\nimport { getTagName } from './getTagName';\nimport { parseTransformAttribute } from './parseTransformAttribute';\n\nconst findTag = (el: Element) =>\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\n\ntype StorageType = {\n  fill: SVGGradientElement;\n  stroke: SVGGradientElement;\n  clipPath: Element[];\n};\n\ntype NotParsedFabricObject = FabricObject & {\n  fill: string;\n  stroke: string;\n  clipPath?: string;\n  clipRule?: CanvasFillRule;\n};\n\nexport class ElementsParser {\n  declare elements: Element[];\n  declare options: LoadImageOptions & ParsedViewboxTransform;\n  declare reviver?: TSvgReviverCallback;\n  declare regexUrl: RegExp;\n  declare doc: Document;\n  declare clipPaths: Record<string, Element[]>;\n  declare gradientDefs: Record<string, SVGGradientElement>;\n  declare cssRules: CSSRules;\n\n  constructor(\n    elements: Element[],\n    options: LoadImageOptions & ParsedViewboxTransform,\n    reviver: TSvgReviverCallback | undefined,\n    doc: Document,\n    clipPaths: Record<string, Element[]>,\n  ) {\n    this.elements = elements;\n    this.options = options;\n    this.reviver = reviver;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n    this.doc = doc;\n    this.clipPaths = clipPaths;\n    this.gradientDefs = getGradientDefs(doc);\n    this.cssRules = getCSSRules(doc);\n  }\n\n  parse(): Promise<Array<FabricObject | null>> {\n    return Promise.all(\n      this.elements.map((element) => this.createObject(element)),\n    );\n  }\n\n  async createObject(el: Element): Promise<FabricObject | null> {\n    const klass = findTag(el);\n    if (klass) {\n      const obj: NotParsedFabricObject = await klass.fromElement(\n        el,\n        this.options,\n        this.cssRules,\n      );\n      this.resolveGradient(obj, el, FILL);\n      this.resolveGradient(obj, el, STROKE);\n      if (obj instanceof FabricImage && obj._originalElement) {\n        removeTransformMatrixForSvgParsing(\n          obj,\n          obj.parsePreserveAspectRatioAttribute(),\n        );\n      } else {\n        removeTransformMatrixForSvgParsing(obj);\n      }\n      await this.resolveClipPath(obj, el);\n      this.reviver && this.reviver(el, obj);\n      return obj;\n    }\n    return null;\n  }\n\n  extractPropertyDefinition(\n    obj: NotParsedFabricObject,\n    property: 'fill' | 'stroke' | 'clipPath',\n    storage: Record<string, StorageType[typeof property]>,\n  ): StorageType[typeof property] | undefined {\n    const value = obj[property]!,\n      regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return undefined;\n    }\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\n    regex.lastIndex = 0;\n    // we passed the regex test, so we know is not null;\n    const id = regex.exec(value)![1];\n    regex.lastIndex = 0;\n    // @todo fix this\n    return storage[id];\n  }\n\n  resolveGradient(\n    obj: NotParsedFabricObject,\n    el: Element,\n    property: 'fill' | 'stroke',\n  ) {\n    const gradientDef = this.extractPropertyDefinition(\n      obj,\n      property,\n      this.gradientDefs,\n    ) as SVGGradientElement;\n    if (gradientDef) {\n      const opacityAttr = el.getAttribute(property + '-opacity');\n      const gradient = Gradient.fromElement(gradientDef, obj, {\n        ...this.options,\n        opacity: opacityAttr,\n      } as SVGOptions);\n      obj.set(property, gradient);\n    }\n  }\n\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\n  // is a refactor that i m not sure is worth on this code\n  async resolveClipPath(\n    obj: NotParsedFabricObject,\n    usingElement: Element,\n    exactOwner?: Element,\n  ) {\n    const clipPathElements = this.extractPropertyDefinition(\n      obj,\n      'clipPath',\n      this.clipPaths,\n    ) as Element[];\n    if (clipPathElements) {\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\n      const clipPathTag = clipPathElements[0].parentElement!;\n      let clipPathOwner = usingElement;\n      while (\n        !exactOwner &&\n        clipPathOwner.parentElement &&\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\n      ) {\n        clipPathOwner = clipPathOwner.parentElement;\n      }\n      // move the clipPath tag as sibling to the real element that is using it\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\n\n      // this multiplication order could be opposite.\n      // but i don't have an svg to test it\n      // at the first SVG that has a transform on both places and is misplaced\n      // try to invert this multiplication order\n      const finalTransform = parseTransformAttribute(\n        `${clipPathOwner.getAttribute('transform') || ''} ${\n          clipPathTag.getAttribute('originalTransform') || ''\n        }`,\n      );\n\n      clipPathTag.setAttribute(\n        'transform',\n        `matrix(${finalTransform.join(',')})`,\n      );\n\n      const container = await Promise.all(\n        clipPathElements.map((clipPathElement) => {\n          return findTag(clipPathElement)\n            .fromElement(clipPathElement, this.options, this.cssRules)\n            .then((enlivedClippath: NotParsedFabricObject) => {\n              removeTransformMatrixForSvgParsing(enlivedClippath);\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\n              delete enlivedClippath.clipRule;\n              return enlivedClippath;\n            });\n        }),\n      );\n      const clipPath =\n        container.length === 1 ? container[0] : new Group(container);\n      const gTransform = multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix(),\n      );\n      if (clipPath.clipPath) {\n        await this.resolveClipPath(\n          clipPath,\n          clipPathOwner,\n          // this is tricky.\n          // it tries to differentiate from when clipPaths are inherited by outside groups\n          // or when are really clipPaths referencing other clipPaths\n          clipPathTag.getAttribute('clip-path') ? clipPathOwner : undefined,\n        );\n      }\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\n        qrDecompose(gTransform);\n      clipPath.set({\n        flipX: false,\n        flipY: false,\n      });\n      clipPath.set({\n        scaleX,\n        scaleY,\n        angle,\n        skewX,\n        skewY: 0,\n      });\n      clipPath.setPositionByOrigin(\n        new Point(translateX, translateY),\n        CENTER,\n        CENTER,\n      );\n      obj.clipPath = clipPath;\n    } else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n      return;\n    }\n  }\n}\n","import { applyViewboxTransform } from './applyViewboxTransform';\nimport { svgValidTagNamesRegEx } from './constants';\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\nimport { parseUseDirectives } from './parseUseDirectives';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { ElementsParser } from './elements_parser';\nimport { log, SignalAbortedError } from '../util/internals/console';\nimport { getTagName } from './getTagName';\n\nconst isValidSvgTag = (el: Element) =>\n  svgValidTagNamesRegEx.test(getTagName(el));\n\nexport const createEmptyResponse = (): SVGParsingOutput => ({\n  objects: [],\n  elements: [],\n  options: {},\n  allElements: [],\n});\n\n/**\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n * @static\n * @function\n * @memberOf fabric\n * @param {HTMLElement} doc SVG document to parse\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @return {SVGParsingOutput}\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n */\nexport async function parseSVGDocument(\n  doc: Document,\n  reviver?: TSvgReviverCallback,\n  { crossOrigin, signal }: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  if (signal && signal.aborted) {\n    log('log', new SignalAbortedError('parseSVGDocument'));\n    // this is an unhappy path, we dont care about speed\n    return createEmptyResponse();\n  }\n  const documentElement = doc.documentElement;\n  parseUseDirectives(doc);\n\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\n    options = {\n      ...applyViewboxTransform(documentElement),\n      crossOrigin,\n      signal,\n    };\n  const elements = descendants.filter((el) => {\n    applyViewboxTransform(el);\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n  });\n  if (!elements || (elements && !elements.length)) {\n    return {\n      ...createEmptyResponse(),\n      options,\n      allElements: descendants,\n    };\n  }\n  const localClipPaths: Record<string, Element[]> = {};\n  descendants\n    .filter((el) => getTagName(el) === 'clipPath')\n    .forEach((el) => {\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\n      const id = el.getAttribute('id')!;\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\n        (el) => isValidSvgTag(el),\n      );\n    });\n\n  // Precedence of rules:   style > class > attribute\n  const elementParser = new ElementsParser(\n    elements,\n    options,\n    reviver,\n    doc,\n    localClipPaths,\n  );\n\n  const instances = await elementParser.parse();\n\n  return {\n    objects: instances,\n    elements,\n    options,\n    allElements: descendants,\n  };\n}\n","import { svgNS } from './constants';\nimport { getMultipleNodes } from './getMultipleNodes';\nimport { applyViewboxTransform } from './applyViewboxTransform';\nimport { parseStyleString } from './parseStyleString';\n\nexport function parseUseDirectives(doc: Document) {\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\n  const skipAttributes = ['x', 'y', 'xlink:href', 'href', 'transform'];\n\n  for (const useElement of nodelist) {\n    const useAttributes: NamedNodeMap = useElement.attributes;\n\n    const useAttrMap: Record<string, string> = {};\n    for (const attr of useAttributes) {\n      attr.value && (useAttrMap[attr.name] = attr.value);\n    }\n\n    const xlink = (useAttrMap['xlink:href'] || useAttrMap.href || '').slice(1);\n\n    if (xlink === '') {\n      return;\n    }\n    const referencedElement = doc.getElementById(xlink);\n    if (referencedElement === null) {\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\n      return;\n    }\n    let clonedOriginal = referencedElement.cloneNode(true) as Element;\n\n    const originalAttributes: NamedNodeMap = clonedOriginal.attributes;\n\n    const originalAttrMap: Record<string, string> = {};\n    for (const attr of originalAttributes) {\n      attr.value && (originalAttrMap[attr.name] = attr.value);\n    }\n\n    // Transform attribute needs to be merged in a particular way\n    const { x = 0, y = 0, transform = '' } = useAttrMap;\n    const currentTrans = `${transform} ${\n      originalAttrMap.transform || ''\n    } translate(${x}, ${y})`;\n\n    applyViewboxTransform(clonedOriginal);\n\n    if (/^svg$/i.test(clonedOriginal.nodeName)) {\n      // if is an SVG, create a group and apply all the attributes on top of it\n      const el3 = clonedOriginal.ownerDocument.createElementNS(svgNS, 'g');\n      Object.entries(originalAttrMap).forEach(([name, value]) =>\n        el3.setAttributeNS(svgNS, name, value),\n      );\n      el3.append(...clonedOriginal.childNodes);\n      clonedOriginal = el3;\n    }\n\n    for (const attr of useAttributes) {\n      if (!attr) {\n        continue;\n      }\n      const { name, value } = attr;\n      if (skipAttributes.includes(name)) {\n        continue;\n      }\n\n      if (name === 'style') {\n        // when use has a style, merge the two styles, with the ref being priority (not use)\n        // priority is by feature. an attribute for fill on the original element\n        // will overwrite the fill in style or attribute for tha use\n        const styleRecord: Record<string, any> = {};\n        parseStyleString(value!, styleRecord);\n        // cleanup styleRecord from attributes of original\n        Object.entries(originalAttrMap).forEach(([name, value]) => {\n          styleRecord[name] = value;\n        });\n        // now we can put in the style of the original that will overwrite the original attributes\n        parseStyleString(originalAttrMap.style || '', styleRecord);\n        const mergedStyles = Object.entries(styleRecord)\n          .map((entry) => entry.join(':'))\n          .join(';');\n        clonedOriginal.setAttribute(name, mergedStyles);\n      } else {\n        // set the attribute from use element only if the original does not have it already\n        !originalAttrMap[name] && clonedOriginal.setAttribute(name, value!);\n      }\n    }\n\n    clonedOriginal.setAttribute('transform', currentTrans);\n    clonedOriginal.setAttribute('instantiated_by_use', '1');\n    clonedOriginal.removeAttribute('id');\n    useElement.parentNode!.replaceChild(clonedOriginal, useElement);\n  }\n}\n","import { getFabricWindow } from '../env';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { parseSVGDocument } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\n\n/**\n * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n * @memberOf fabric\n * @param {String} string representing the svg\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromString(\n  string: string,\n  reviver?: TSvgReviverCallback,\n  options?: LoadImageOptions,\n): Promise<SVGParsingOutput> {\n  const parser = new (getFabricWindow().DOMParser)(),\n    // should we use `image/svg+xml` here?\n    doc = parser.parseFromString(string.trim(), 'text/xml');\n  return parseSVGDocument(doc, reviver, options);\n}\n","import { request } from '../util/internals/dom_request';\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\n\n/**\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n * @memberOf fabric\n * @param {string} url where the SVG is\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromURL(\n  url: string,\n  reviver?: TSvgReviverCallback,\n  options: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  // need to handle error properly\n  return new Promise<Document>((resolve, reject) => {\n    const onComplete = (r: XMLHttpRequest) => {\n      const xml = r.responseXML;\n      if (xml) {\n        resolve(xml);\n      }\n      reject();\n    };\n\n    request(url.replace(/^\\n\\s*/, '').trim(), {\n      onComplete,\n      signal: options.signal,\n    });\n  })\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\n    .catch(() => {\n      // this is an unhappy path, we dont care about speed\n      return createEmptyResponse();\n    });\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Polyline } from '../shapes/Polyline';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { MODIFY_POLY } from '../constants';\n\nconst ACTION_NAME: TModificationEvents = MODIFY_POLY;\n\ntype TTransformAnchor = Transform & { pointIndex: number };\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nexport const createPolyPositionHandler = (pointIndex: number) => {\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\n    const { points, pathOffset } = polyObject;\n    return new Point(points[pointIndex])\n      .subtract(pathOffset)\n      .transform(\n        multiplyTransformMatrices(\n          polyObject.getViewportTransform(),\n          polyObject.calcTransformMatrix(),\n        ),\n      );\n  };\n};\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nexport const polyActionHandler = (\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) => {\n  const { target, pointIndex } = transform;\n  const poly = target as Polyline;\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    poly.calcOwnMatrix(),\n  );\n\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\n  poly.setDimensions();\n\n  return true;\n};\n\n/**\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\n */\nexport const factoryPolyActionHandler = (\n  pointIndex: number,\n  fn: TransformActionHandler<TTransformAnchor>,\n) => {\n  return function (\n    eventData: TPointerEvent,\n    transform: Transform,\n    x: number,\n    y: number,\n  ) {\n    const poly = transform.target as Polyline,\n      anchorPoint = new Point(\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1],\n      ),\n      anchorPointInParentPlane = anchorPoint\n        .subtract(poly.pathOffset)\n        .transform(poly.calcOwnMatrix()),\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\n\n    const newAnchorPointInParentPlane = anchorPoint\n      .subtract(poly.pathOffset)\n      .transform(poly.calcOwnMatrix());\n\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n    poly.left -= diff.x;\n    poly.top -= diff.y;\n\n    return actionPerformed;\n  };\n};\n\nexport const createPolyActionHandler = (pointIndex: number) =>\n  wrapWithFireEvent(\n    ACTION_NAME,\n    factoryPolyActionHandler(pointIndex, polyActionHandler),\n  );\n\nexport function createPolyControls(\n  poly: Polyline,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  numOfControls: number,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  arg0: number | Polyline,\n  options: Partial<Control> = {},\n) {\n  const controls = {} as Record<string, Control>;\n  for (\n    let idx = 0;\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\n    idx++\n  ) {\n    controls[`p${idx}`] = new Control({\n      actionName: ACTION_NAME,\n      positionHandler: createPolyPositionHandler(idx),\n      actionHandler: createPolyActionHandler(idx),\n      ...options,\n    });\n  }\n  return controls;\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Path } from '../shapes/Path';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport type { TSimpleParseCommandType } from '../util/path/typedefs';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\nconst ACTION_NAME: TModificationEvents = 'modifyPath' as const;\n\ntype TTransformAnchor = Transform;\n\nexport type PathPointControlStyle = {\n  controlFill?: string;\n  controlStroke?: string;\n  connectionDashArray?: number[];\n};\n\nconst calcPathPointPosition = (\n  pathObject: Path,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n  const command = path[commandIndex];\n  return new Point(\n    (command[pointIndex] as number) - pathOffset.x,\n    (command[pointIndex + 1] as number) - pathOffset.y,\n  ).transform(\n    multiplyTransformMatrices(\n      pathObject.getViewportTransform(),\n      pathObject.calcTransformMatrix(),\n    ),\n  );\n};\n\nconst movePathPoint = (\n  pathObject: Path,\n  x: number,\n  y: number,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n\n  const anchorCommand =\n    path[(commandIndex > 0 ? commandIndex : path.length) - 1];\n  const anchorPoint = new Point(\n    anchorCommand[pointIndex] as number,\n    anchorCommand[pointIndex + 1] as number,\n  );\n\n  const anchorPointInParentPlane = anchorPoint\n    .subtract(pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    pathObject.calcOwnMatrix(),\n  );\n\n  path[commandIndex][pointIndex] = mouseLocalPosition.x + pathOffset.x;\n  path[commandIndex][pointIndex + 1] = mouseLocalPosition.y + pathOffset.y;\n  pathObject.setDimensions();\n\n  const newAnchorPointInParentPlane = anchorPoint\n    .subtract(pathObject.pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n  pathObject.left -= diff.x;\n  pathObject.top -= diff.y;\n  pathObject.set('dirty', true);\n  return true;\n};\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nfunction pathPositionHandler(\n  this: PathPointControl,\n  dim: Point,\n  finalMatrix: TMat2D,\n  pathObject: Path,\n) {\n  const { commandIndex, pointIndex } = this;\n  return calcPathPointPosition(pathObject, commandIndex, pointIndex);\n}\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nfunction pathActionHandler(\n  this: PathPointControl,\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) {\n  const { target } = transform;\n  const { commandIndex, pointIndex } = this;\n  const actionPerformed = movePathPoint(\n    target as Path,\n    x,\n    y,\n    commandIndex,\n    pointIndex,\n  );\n  if (actionPerformed) {\n    fireEvent(this.actionName as TModificationEvents, {\n      ...commonEventInfo(eventData, transform, x, y),\n      commandIndex,\n      pointIndex,\n    });\n  }\n  return actionPerformed;\n}\n\nconst indexFromPrevCommand = (previousCommandType: TSimpleParseCommandType) =>\n  previousCommandType === 'C' ? 5 : previousCommandType === 'Q' ? 3 : 1;\n\nclass PathPointControl extends Control {\n  declare commandIndex: number;\n  declare pointIndex: number;\n  declare controlFill: string;\n  declare controlStroke: string;\n  constructor(options?: Partial<PathPointControl>) {\n    super(options);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const overrides: ControlRenderingStyleOverride = {\n      ...styleOverride,\n      cornerColor: this.controlFill,\n      cornerStrokeColor: this.controlStroke,\n      transparentCorners: !this.controlFill,\n    };\n    super.render(ctx, left, top, overrides, fabricObject);\n  }\n}\n\nclass PathControlPointControl extends PathPointControl {\n  declare connectionDashArray?: number[];\n  declare connectToCommandIndex: number;\n  declare connectToPointIndex: number;\n  constructor(options?: Partial<PathControlPointControl>) {\n    super(options);\n  }\n\n  render(\n    this: PathControlPointControl,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const { path } = fabricObject;\n    const {\n      commandIndex,\n      pointIndex,\n      connectToCommandIndex,\n      connectToPointIndex,\n    } = this;\n    ctx.save();\n    ctx.strokeStyle = this.controlStroke;\n    if (this.connectionDashArray) {\n      ctx.setLineDash(this.connectionDashArray);\n    }\n    const [commandType] = path[commandIndex];\n    const point = calcPathPointPosition(\n      fabricObject,\n      connectToCommandIndex,\n      connectToPointIndex,\n    );\n\n    if (commandType === 'Q') {\n      // one control point connects to 2 points\n      const point2 = calcPathPointPosition(\n        fabricObject,\n        commandIndex,\n        pointIndex + 2,\n      );\n      ctx.moveTo(point2.x, point2.y);\n      ctx.lineTo(left, top);\n    } else {\n      ctx.moveTo(left, top);\n    }\n    ctx.lineTo(point.x, point.y);\n    ctx.stroke();\n    ctx.restore();\n\n    super.render(ctx, left, top, styleOverride, fabricObject);\n  }\n}\n\nconst createControl = (\n  commandIndexPos: number,\n  pointIndexPos: number,\n  isControlPoint: boolean,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  },\n  connectToCommandIndex?: number,\n  connectToPointIndex?: number,\n) =>\n  new (isControlPoint ? PathControlPointControl : PathPointControl)({\n    commandIndex: commandIndexPos,\n    pointIndex: pointIndexPos,\n    actionName: ACTION_NAME,\n    positionHandler: pathPositionHandler,\n    actionHandler: pathActionHandler,\n    connectToCommandIndex,\n    connectToPointIndex,\n    ...options,\n    ...(isControlPoint ? options.controlPointStyle : options.pointStyle),\n  } as Partial<PathControlPointControl>);\n\nexport function createPathControls(\n  path: Path,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  } = {},\n): Record<string, Control> {\n  const controls = {} as Record<string, Control>;\n  let previousCommandType: TSimpleParseCommandType = 'M';\n  path.path.forEach((command, commandIndex) => {\n    const commandType = command[0];\n\n    if (commandType !== 'Z') {\n      controls[`c_${commandIndex}_${commandType}`] = createControl(\n        commandIndex,\n        command.length - 2,\n        false,\n        options,\n      );\n    }\n    switch (commandType) {\n      case 'C':\n        controls[`c_${commandIndex}_C_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex - 1,\n          indexFromPrevCommand(previousCommandType),\n        );\n        controls[`c_${commandIndex}_C_CP_2`] = createControl(\n          commandIndex,\n          3,\n          true,\n          options,\n          commandIndex,\n          5,\n        );\n        break;\n      case 'Q':\n        controls[`c_${commandIndex}_Q_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex,\n          3,\n        );\n        break;\n    }\n    previousCommandType = commandType;\n  });\n  return controls;\n}\n","import { getFabricWindow } from '../env';\nimport { createCanvasElement, createCanvasElementFor } from '../util/misc/dom';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\n\nexport const isWebGLPipelineState = (\n  options: TWebGLPipelineState | T2DPipelineState,\n): options is TWebGLPipelineState => {\n  return (options as TWebGLPipelineState).webgl !== undefined;\n};\n\n/**\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n * drawImage should be faster, but is also bugged for a small combination of old hardware\n * and drivers.\n * putImageData is faster than drawImage for that specific operation.\n */\nexport const isPutImageFaster = (width: number, height: number): boolean => {\n  const targetCanvas = createCanvasElementFor({ width, height });\n  const sourceCanvas = createCanvasElement();\n  const gl = sourceCanvas.getContext('webgl')!;\n  // eslint-disable-next-line no-undef\n  const imageBuffer = new ArrayBuffer(width * height * 4);\n\n  const testContext = {\n    imageBuffer: imageBuffer,\n  } as unknown as Required<WebGLFilterBackend>;\n  const testPipelineState = {\n    destinationWidth: width,\n    destinationHeight: height,\n    targetCanvas: targetCanvas,\n  } as unknown as TWebGLPipelineState;\n  let startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\n\n  return drawImageTime > putImageDataTime;\n};\n","export const highPsourceCode = `precision highp float`;\n\nexport const identityFragmentShader = `\n    ${highPsourceCode};\n    varying vec2 vTexCoord;\n    uniform sampler2D uTexture;\n    void main() {\n      gl_FragColor = texture2D(uTexture, vTexCoord);\n    }`;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    void main() {\n      vTexCoord = aPosition;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }`;\n","import { getEnv } from '../env';\nimport type {\n  T2DPipelineState,\n  TWebGLAttributeLocationMap,\n  TWebGLPipelineState,\n  TWebGLProgramCacheItem,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport {\n  highPsourceCode,\n  identityFragmentShader,\n  vertexSource,\n} from './shaders/baseFilter';\nimport type { Abortable } from '../typedefs';\nimport { FabricError } from '../util/internals/console';\nimport { createCanvasElementFor } from '../util/misc/dom';\n\nconst regex = new RegExp(highPsourceCode, 'g');\n\nexport class BaseFilter<\n  Name extends string,\n  OwnProps extends Record<string, any> = object,\n  SerializedProps extends Record<string, any> = OwnProps,\n> {\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  get type(): Name {\n    return (this.constructor as typeof BaseFilter).type as Name;\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'BaseFilter';\n\n  /**\n   * Contains the uniform locations for the fragment shader.\n   * uStepW and uStepH are handled by the BaseFilter, each filter class\n   * needs to specify all the one that are needed\n   */\n  static uniformLocations: string[] = [];\n\n  declare static defaults: Record<string, unknown>;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor({\n    type,\n    ...options\n  }: { type?: never } & Partial<OwnProps> & Record<string, any> = {}) {\n    Object.assign(\n      this,\n      (this.constructor as typeof BaseFilter).defaults,\n      options,\n    );\n  }\n\n  protected getFragmentSource(): string {\n    return identityFragmentShader;\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram(\n    gl: WebGLRenderingContext,\n    fragmentSource: string = this.getFragmentSource(),\n    vertexSource: string = this.getVertexSource(),\n  ) {\n    const {\n      WebGLProbe: { GLPrecision = 'highp' },\n    } = getEnv();\n    if (GLPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(\n        regex,\n        highPsourceCode.replace('highp', GLPrecision),\n      );\n    }\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n\n    if (!vertexShader || !fragmentShader || !program) {\n      throw new FabricError(\n        'Vertex, fragment shader or program creation error',\n      );\n    }\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          vertexShader,\n        )}`,\n      );\n    }\n\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          fragmentShader,\n        )}`,\n      );\n    }\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new FabricError(\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`,\n      );\n    }\n\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n\n    return {\n      program,\n      attributeLocations: this.getAttributeLocations(gl, program),\n      uniformLocations,\n    };\n  }\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLAttributeLocationMap {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  }\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLUniformLocationMap {\n    const locations = (this.constructor as unknown as typeof BaseFilter<string>)\n      .uniformLocations;\n\n    const uniformLocations: Record<string, WebGLUniformLocation | null> = {};\n    for (let i = 0; i < locations.length; i++) {\n      uniformLocations[locations[i]] = gl.getUniformLocation(\n        program,\n        locations[i],\n      );\n    }\n    return uniformLocations;\n  }\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData(\n    gl: WebGLRenderingContext,\n    attributeLocations: Record<string, number>,\n    aPositionData: Float32Array,\n  ) {\n    const attributeLocation = attributeLocations.aPosition;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  }\n\n  _setupFrameBuffer(options: TWebGLPipelineState) {\n    const gl = options.context;\n    if (options.passes > 1) {\n      const width = options.destinationWidth;\n      const height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(\n          gl,\n          width,\n          height,\n        );\n      }\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        options.targetTexture,\n        0,\n      );\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  }\n\n  _swapTextures(options: TWebGLPipelineState) {\n    options.passes--;\n    options.pass++;\n    const temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  }\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isNeutralState(options?: any): boolean {\n    return false;\n  }\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(_options: T2DPipelineState): void {\n    // override by subclass\n  }\n\n  /**\n   * Returns a string that represent the current selected shader code for the filter.\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\n   * @type string\n   **/\n  getCacheKey(): string {\n    return this.type;\n  }\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   * @return {WebGLProgram} the compiled program shader\n   */\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\n    const key = this.getCacheKey();\n    if (!options.programCache[key]) {\n      options.programCache[key] = this.createProgram(options.context);\n    }\n    return options.programCache[key];\n  }\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context;\n    const shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  bindAdditionalTexture(\n    gl: WebGLRenderingContext,\n    texture: WebGLTexture,\n    textureUnit: number,\n  ) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} _gl The canvas context used to compile the shader program.\n   * @param {Object} _uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData(\n    _gl: WebGLRenderingContext,\n    _uniformLocations: TWebGLUniformLocationMap,\n  ): void {\n    // override by subclass\n  }\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer(options: T2DPipelineState) {\n    if (!options.helpLayer) {\n      const { sourceWidth, sourceHeight } = options;\n      const helpLayer = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      options.helpLayer = helpLayer;\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * It will automatically export the default values of a filter,\n   * stored in the static defaults property.\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): { type: Name } & SerializedProps {\n    const defaultKeys = Object.keys(\n      (this.constructor as typeof BaseFilter).defaults || {},\n    ) as (keyof SerializedProps)[];\n\n    return {\n      type: this.type,\n      ...defaultKeys.reduce<SerializedProps>((acc, key) => {\n        acc[key] = this[\n          key as keyof this\n        ] as unknown as (typeof acc)[typeof key];\n        return acc;\n      }, {} as SerializedProps),\n    };\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  static async fromObject(\n    { type, ...filterOptions }: Record<string, any>,\n    _options: Abortable,\n  ): Promise<BaseFilter<string, object>> {\n    return new this(filterOptions);\n  }\n}\n","export const blendColorFragmentSource = {\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n  screen:\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n  exclusion:\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n  overlay: `\n    if (uColor.r < 0.5) {\n      gl_FragColor.r *= 2.0 * uColor.r;\n    } else {\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n    }\n    if (uColor.g < 0.5) {\n      gl_FragColor.g *= 2.0 * uColor.g;\n    } else {\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n    }\n    if (uColor.b < 0.5) {\n      gl_FragColor.b *= 2.0 * uColor.b;\n    } else {\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n    }\n    `,\n  tint: `\n    gl_FragColor.rgb *= (1.0 - uColor.a);\n    gl_FragColor.rgb += uColor.rgb;\n    `,\n} as const;\n","import { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { blendColorFragmentSource } from './shaders/blendColor';\n\nexport type TBlendMode =\n  | 'multiply'\n  | 'add'\n  | 'difference'\n  | 'screen'\n  | 'subtract'\n  | 'darken'\n  | 'lighten'\n  | 'overlay'\n  | 'exclusion'\n  | 'tint';\n\ntype BlendColorOwnProps = {\n  color: string;\n  mode: TBlendMode;\n  alpha: number;\n};\n\nexport const blendColorDefaultValues: BlendColorOwnProps = {\n  color: '#F95C63',\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Color Blend filter class\n * @example\n * const filter = new BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendColor extends BaseFilter<'BlendColor', BlendColorOwnProps> {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   * @type String\n   * @default\n   **/\n  declare color: BlendColorOwnProps['color'];\n\n  /**\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\n   * darken, lighten, overlay, exclusion, tint.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendColorOwnProps['mode'];\n  /**\n   * alpha value. represent the strength of the blend color operation.\n   * @type Number\n   * @default\n   **/\n  declare alpha: BlendColorOwnProps['alpha'];\n\n  static defaults = blendColorDefaultValues;\n\n  static type = 'BlendColor';\n\n  static uniformLocations = ['uColor'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  protected getFragmentSource(): string {\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec4 uColor;\n      varying vec2 vTexCoord;\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        gl_FragColor = color;\n        if (color.a > 0.0) {\n          ${blendColorFragmentSource[this.mode]}\n        }\n      }\n      `;\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const source = new Color(this.color).getSource();\n    const alpha = this.alpha;\n    const tr = source[0] * alpha;\n    const tg = source[1] * alpha;\n    const tb = source[2] * alpha;\n    const alpha1 = 1 - alpha;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      let oR, oG, oB;\n      switch (this.mode) {\n        case 'multiply':\n          oR = (r * tr) / 255;\n          oG = (g * tg) / 255;\n          oB = (b * tb) / 255;\n          break;\n        case 'screen':\n          oR = 255 - ((255 - r) * (255 - tr)) / 255;\n          oG = 255 - ((255 - g) * (255 - tg)) / 255;\n          oB = 255 - ((255 - b) * (255 - tb)) / 255;\n          break;\n        case 'add':\n          oR = r + tr;\n          oG = g + tg;\n          oB = b + tb;\n          break;\n        case 'difference':\n          oR = Math.abs(r - tr);\n          oG = Math.abs(g - tg);\n          oB = Math.abs(b - tb);\n          break;\n        case 'subtract':\n          oR = r - tr;\n          oG = g - tg;\n          oB = b - tb;\n          break;\n        case 'darken':\n          oR = Math.min(r, tr);\n          oG = Math.min(g, tg);\n          oB = Math.min(b, tb);\n          break;\n        case 'lighten':\n          oR = Math.max(r, tr);\n          oG = Math.max(g, tg);\n          oB = Math.max(b, tb);\n          break;\n        case 'overlay':\n          oR =\n            tr < 128\n              ? (2 * r * tr) / 255\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\n          oG =\n            tg < 128\n              ? (2 * g * tg) / 255\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\n          oB =\n            tb < 128\n              ? (2 * b * tb) / 255\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\n          break;\n        case 'exclusion':\n          oR = tr + r - (2 * tr * r) / 255;\n          oG = tg + g - (2 * tg * g) / 255;\n          oB = tb + b - (2 * tb * b) / 255;\n          break;\n        case 'tint':\n          oR = tr + r * alpha1;\n          oG = tg + g * alpha1;\n          oB = tb + b * alpha1;\n      }\n      data[i] = oR;\n      data[i + 1] = oG;\n      data[i + 2] = oB;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource();\n    source[0] = (this.alpha * source[0]) / 255;\n    source[1] = (this.alpha * source[1]) / 255;\n    source[2] = (this.alpha * source[2]) / 255;\n    source[3] = this.alpha;\n    gl.uniform4fv(uniformLocations.uColor, source);\n  }\n}\n\nclassRegistry.setClass(BlendColor);\n","import type { TBlendImageMode } from '../BlendImage';\n\nexport const fragmentSource: Record<TBlendImageMode, string> = {\n  multiply: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.rgba *= color2.rgba;\n      gl_FragColor = color;\n    }\n    `,\n  mask: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.a = color2.a;\n      gl_FragColor = color;\n    }\n    `,\n} as const;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    uniform mat3 uTransformMatrix;\n    void main() {\n      vTexCoord = aPosition;\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ` as const;\n","import { FabricImage } from '../shapes/Image';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource, vertexSource } from './shaders/blendImage';\n\nexport type TBlendImageMode = 'multiply' | 'mask';\n\ntype BlendImageOwnProps = {\n  mode: TBlendImageMode;\n  alpha: number;\n};\n\nexport const blendImageDefaultValues: BlendImageOwnProps = {\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Image Blend filter class\n * @example\n * const filter = new filters.BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendImage extends BaseFilter<'BlendImage', BlendImageOwnProps> {\n  /**\n   * Image to make the blend operation with.\n   **/\n  declare image: FabricImage;\n\n  /**\n   * Blend mode for the filter: either 'multiply' or 'mask'. 'multiply' will\n   * multiply the values of each channel (R, G, B, and A) of the filter image by\n   * their corresponding values in the base image. 'mask' will only look at the\n   * alpha channel of the filter image, and apply those values to the base\n   * image's alpha channel.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendImageOwnProps['mode'];\n\n  /**\n   * alpha value. represent the strength of the blend image operation.\n   * not implemented.\n   **/\n  declare alpha: BlendImageOwnProps['alpha'];\n\n  static type = 'BlendImage';\n\n  static defaults = blendImageDefaultValues;\n\n  static uniformLocations = ['uTransformMatrix', 'uImage'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource[this.mode];\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context,\n      texture = this.createTexture(options.filterBackend, this.image);\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\n    super.applyToWebGL(options);\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n  }\n\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\n  }\n\n  /**\n   * Calculate a transformMatrix to adapt the image to blend over\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  calculateMatrix() {\n    const image = this.image,\n      { width, height } = image.getElement();\n    return [\n      1 / image.scaleX,\n      0,\n      0,\n      0,\n      1 / image.scaleY,\n      0,\n      -image.left / width,\n      -image.top / height,\n      1,\n    ];\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({\n    imageData: { data, width, height },\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const image = this.image;\n    if (!resources.blendImage) {\n      resources.blendImage = createCanvasElement();\n    }\n    const canvas1 = resources.blendImage;\n    const context = canvas1.getContext('2d')!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas1.width = width;\n      canvas1.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    context.setTransform(\n      image.scaleX,\n      0,\n      0,\n      image.scaleY,\n      image.left,\n      image.top,\n    );\n    context.drawImage(image.getElement(), 0, 0, width, height);\n    const blendData = context.getImageData(0, 0, width, height).data;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const a = data[i + 3];\n\n      const tr = blendData[i];\n      const tg = blendData[i + 1];\n      const tb = blendData[i + 2];\n      const ta = blendData[i + 3];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          data[i + 3] = (a * ta) / 255;\n          break;\n        case 'mask':\n          data[i + 3] = ta;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const matrix = this.calculateMatrix();\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * TODO: Handle the possibility of missing image better.\n   * As of now a BlendImage filter without image can't be used with fromObject\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): {\n    type: 'BlendImage';\n    image: ReturnType<FabricImage['toObject']>;\n  } & BlendImageOwnProps {\n    return {\n      ...super.toObject(),\n      image: this.image && this.image.toObject(),\n    };\n  }\n\n  /**\n   * Create filter instance from an object representation\n   * @static\n   * @param {object} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<BlendImage>}\n   */\n  static async fromObject(\n    { type, image, ...filterOptions }: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<BaseFilter<'BlendImage', BlendImageOwnProps>> {\n    return FabricImage.fromObject(image, options).then(\n      (enlivedImage) =>\n        new this({ ...filterOptions, image: enlivedImage }) as BlendImage,\n    );\n  }\n}\n\nclassRegistry.setClass(BlendImage);\n","import { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  TWebGLPipelineState,\n  T2DPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blur';\n\ntype BlurOwnProps = {\n  blur: number;\n};\n\nexport const blurDefaultValues: BlurOwnProps = {\n  blur: 0,\n};\n\n/**\n * Blur filter class\n * @example\n * const filter = new Blur({\n *   blur: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Blur extends BaseFilter<'Blur', BlurOwnProps> {\n  /**\n   * blur value, in percentage of image dimensions.\n   * specific to keep the image blur constant at different resolutions\n   * range between 0 and 1.\n   * @type Number\n   * @default\n   */\n  declare blur: BlurOwnProps['blur'];\n\n  declare horizontal: boolean;\n  declare aspectRatio: number;\n\n  static type = 'Blur';\n\n  static defaults = blurDefaultValues;\n\n  static uniformLocations = ['uDelta'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      // this aspectRatio is used to give the same blur to vertical and horizontal\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\n      options.passes++;\n      this._setupFrameBuffer(options);\n      this.horizontal = true;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n      this._setupFrameBuffer(options);\n      this.horizontal = false;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(options: T2DPipelineState) {\n    options.imageData = this.simpleBlur(options);\n  }\n\n  simpleBlur({\n    ctx,\n    imageData,\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const { width, height } = imageData;\n    if (!resources.blurLayer1) {\n      resources.blurLayer1 = createCanvasElement();\n      resources.blurLayer2 = createCanvasElement();\n    }\n    const canvas1 = resources.blurLayer1!;\n    const canvas2 = resources.blurLayer2!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas2.width = canvas1.width = width;\n      canvas2.height = canvas1.height = height;\n    }\n    const ctx1 = canvas1.getContext('2d')!,\n      ctx2 = canvas2.getContext('2d')!,\n      nSamples = 15,\n      blur = this.blur * 0.06 * 0.5;\n    let random, percent, j, i;\n\n    // load first canvas\n    ctx1.putImageData(imageData, 0, 0);\n    ctx2.clearRect(0, 0, width, height);\n\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * width + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, j, random);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * height + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, random, j);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    ctx.drawImage(canvas1, 0, 0);\n    const newImageData = ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n    ctx1.globalAlpha = 1;\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    return newImageData;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const delta = this.chooseRightDelta();\n    gl.uniform2fv(uniformLocations.uDelta, delta);\n  }\n\n  isNeutralState() {\n    return this.blur === 0;\n  }\n\n  /**\n   * choose right value of image percentage to blur with\n   * @returns {Array} a numeric array with delta values\n   */\n  chooseRightDelta() {\n    let blurScale = 1;\n    const delta = [0, 0];\n    if (this.horizontal) {\n      if (this.aspectRatio > 1) {\n        // image is wide, i want to shrink radius horizontal\n        blurScale = 1 / this.aspectRatio;\n      }\n    } else {\n      if (this.aspectRatio < 1) {\n        // image is tall, i want to shrink radius vertical\n        blurScale = this.aspectRatio;\n      }\n    }\n    const blur = blurScale * this.blur * 0.12;\n    if (this.horizontal) {\n      delta[0] = blur;\n    } else {\n      delta[1] = blur;\n    }\n    return delta;\n  }\n}\n\nclassRegistry.setClass(Blur);\n","export const fragmentSource = `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n    const float nSamples = 15.0;\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n    float random(vec3 scale) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n    }\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      float offset = random(v3offset);\n      for (float t = -nSamples; t <= nSamples; t++) {\n        float percent = (t + offset - 0.5) / nSamples;\n        float weight = 1.0 - abs(percent);\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\n        total += weight;\n      }\n      gl_FragColor = color / total;\n    }\n  ` as const;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/brightness';\n\ntype BrightnessOwnProps = {\n  brightness: number;\n};\n\nexport const brightnessDefaultValues: BrightnessOwnProps = {\n  brightness: 0,\n};\n\n/**\n * Brightness filter class\n * @example\n * const filter = new Brightness({\n *   brightness: 0.05\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Brightness extends BaseFilter<'Brightness', BrightnessOwnProps> {\n  /**\n   * Brightness value, from -1 to 1.\n   * translated to -255 to 255 for 2d\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Number} brightness\n   * @default\n   */\n  declare brightness: BrightnessOwnProps['brightness'];\n\n  static type = 'Brightness';\n\n  static defaults = brightnessDefaultValues;\n\n  static uniformLocations = ['uBrightness'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const brightness = Math.round(this.brightness * 255);\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] += brightness;\n      data[i + 1] += brightness;\n      data[i + 2] += brightness;\n    }\n  }\n\n  isNeutralState() {\n    return this.brightness === 0;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n  }\n}\n\nclassRegistry.setClass(Brightness);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBrightness;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += uBrightness;\n    gl_FragColor = color;\n  }\n`;\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  varying vec2 vTexCoord;\n  uniform mat4 uColorMatrix;\n  uniform vec4 uConstants;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color *= uColorMatrix;\n    color += uConstants;\n    gl_FragColor = color;\n  }`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TMatColorMatrix,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\n\nexport type ColorMatrixOwnProps = {\n  matrix: TMatColorMatrix;\n  colorsOnly: boolean;\n};\n\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n  colorsOnly: true,\n};\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix<\n  Name extends string = 'ColorMatrix',\n  OwnProps extends object = ColorMatrixOwnProps,\n  SerializedProps extends object = ColorMatrixOwnProps,\n> extends BaseFilter<Name, OwnProps, SerializedProps> {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: ColorMatrixOwnProps['matrix'];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n      data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n      data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      if (!colorsOnly) {\n        const a = data[i + 3];\n        data[i] += a * m[3];\n        data[i + 1] += a * m[8];\n        data[i + 2] += a * m[13];\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n\n  toObject(): { type: Name } & SerializedProps {\n    return {\n      ...super.toObject(),\n      matrix: [...this.matrix] as TMatColorMatrix,\n    };\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n","import { ColorMatrix } from './ColorMatrix';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TMatColorMatrix } from './typedefs';\n\ntype FixedFiltersOwnProps = {\n  colorsOnly: boolean;\n};\n\nexport function createColorMatrixFilter(key: string, matrix: TMatColorMatrix) {\n  const newClass = class extends ColorMatrix<\n    typeof key,\n    FixedFiltersOwnProps,\n    FixedFiltersOwnProps\n  > {\n    static type = key;\n\n    static defaults = {\n      colorsOnly: false,\n      matrix,\n    };\n\n    toObject(): { type: string } & FixedFiltersOwnProps {\n      return { type: this.type, colorsOnly: this.colorsOnly };\n    }\n  };\n  classRegistry.setClass(newClass, key);\n  return newClass as typeof ColorMatrix<typeof key, FixedFiltersOwnProps>;\n}\n\nexport const Brownie = createColorMatrixFilter(\n  'Brownie',\n  [\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Vintage = createColorMatrixFilter(\n  'Vintage',\n  [\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Kodachrome = createColorMatrixFilter(\n  'Kodachrome',\n  [\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Technicolor = createColorMatrixFilter(\n  'Technicolor',\n  [\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Polaroid = createColorMatrixFilter(\n  'Polaroid',\n  [\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\n    1.483, 0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Sepia = createColorMatrixFilter(\n  'Sepia',\n  [\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\n    0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const BlackWhite = createColorMatrixFilter(\n  'BlackWhite',\n  [\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\n    1, 0,\n  ],\n);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\n\ntype ComposedOwnProps = {\n  subFilters: BaseFilter<string, object, object>[];\n};\n\ntype ComposedSerializedProps = {\n  subFilters: Record<string, unknown>[];\n};\n\n/**\n * A container class that knows how to apply a sequence of filters to an input image.\n */\nexport class Composed extends BaseFilter<\n  'Composed',\n  ComposedOwnProps,\n  ComposedSerializedProps\n> {\n  /**\n   * A non sparse array of filters to apply\n   */\n  declare subFilters: ComposedOwnProps['subFilters'];\n\n  static type = 'Composed';\n\n  constructor(\n    options: { subFilters?: BaseFilter<string, object>[] } & Record<\n      string,\n      any\n    > = {},\n  ) {\n    super(options);\n    this.subFilters = options.subFilters || [];\n  }\n\n  /**\n   * Apply this container's filters to the input image provided.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be applied.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      options.passes += this.subFilters.length - 1;\n    }\n    this.subFilters.forEach((filter) => {\n      filter.applyTo(options);\n    });\n  }\n\n  /**\n   * Serialize this filter into JSON.\n   * @returns {Object} A JSON representation of this filter.\n   */\n  toObject() {\n    return {\n      type: this.type,\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\n    };\n  }\n\n  isNeutralState() {\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\n  }\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   * @static\n   * @param {oject} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<Composed>}\n   */\n  static fromObject(\n    object: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<Composed> {\n    return Promise.all(\n      ((object.subFilters || []) as BaseFilter<string, object>[]).map(\n        (filter) =>\n          classRegistry\n            .getClass<typeof BaseFilter>(filter.type)\n            .fromObject(filter, options),\n      ),\n    ).then(\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as Composed,\n    );\n  }\n}\n\nclassRegistry.setClass(Composed);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\n\ntype ContrastOwnProps = {\n  contrast: number;\n};\n\nexport const contrastDefaultValues: ContrastOwnProps = {\n  contrast: 0,\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: ContrastOwnProps['contrast'];\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  static uniformLocations = ['uContrast'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  isNeutralState() {\n    return this.contrast === 0;\n  }\n\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uContrast;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n    gl_FragColor = color;\n  }`;\n","export const fragmentSource = {\n  Convolute_3_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_3_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_5_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_5_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_7_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_7_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_9_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_9_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/convolute';\n\nexport type ConvoluteOwnProps = {\n  opaque: boolean;\n  matrix: number[];\n};\n\nexport const convoluteDefaultValues: ConvoluteOwnProps = {\n  opaque: false,\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n};\n\n/**\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n * @example <caption>Sharpen filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 0, -1,  0,\n *            -1,  5, -1,\n *             0, -1,  0 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Blur filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter with opaqueness</caption>\n * const filter = new Convolute({\n *   opaque: true,\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Convolute extends BaseFilter<'Convolute', ConvoluteOwnProps> {\n  /*\n   * Opaque value (true/false)\n   */\n  declare opaque: ConvoluteOwnProps['opaque'];\n\n  /*\n   * matrix for the filter, max 9x9\n   */\n  declare matrix: ConvoluteOwnProps['matrix'];\n\n  static type = 'Convolute';\n\n  static defaults = convoluteDefaultValues;\n\n  static uniformLocations = ['uMatrix', 'uOpaque', 'uHalfSize', 'uSize'];\n\n  getCacheKey() {\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\n      this.opaque ? 1 : 0\n    }` as keyof typeof fragmentSource;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.getCacheKey()];\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      weights = this.matrix,\n      side = Math.round(Math.sqrt(weights.length)),\n      halfSide = Math.floor(side / 2),\n      sw = imageData.width,\n      sh = imageData.height,\n      output = options.ctx.createImageData(sw, sh),\n      dst = output.data,\n      // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0;\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n\n    for (y = 0; y < sh; y++) {\n      for (x = 0; x < sw; x++) {\n        dstOff = (y * sw + x) * 4;\n        // calculate the weighed sum of the source image pixels that\n        // fall under the convolution matrix\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 0;\n\n        for (cy = 0; cy < side; cy++) {\n          for (cx = 0; cx < side; cx++) {\n            scy = y + cy - halfSide;\n            scx = x + cx - halfSide;\n\n            // eslint-disable-next-line max-depth\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n              continue;\n            }\n\n            srcOff = (scy * sw + scx) * 4;\n            wt = weights[cy * side + cx];\n\n            r += data[srcOff] * wt;\n            g += data[srcOff + 1] * wt;\n            b += data[srcOff + 2] * wt;\n            // eslint-disable-next-line max-depth\n            if (!alphaFac) {\n              a += data[srcOff + 3] * wt;\n            }\n          }\n        }\n        dst[dstOff] = r;\n        dst[dstOff + 1] = g;\n        dst[dstOff + 2] = b;\n        if (!alphaFac) {\n          dst[dstOff + 3] = a;\n        } else {\n          dst[dstOff + 3] = data[dstOff + 3];\n        }\n      }\n    }\n    options.imageData = output;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      opaque: this.opaque,\n      matrix: [...this.matrix],\n    };\n  }\n}\n\nclassRegistry.setClass(Convolute);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform vec3 uGamma;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    vec3 correction = (1.0 / uGamma);\n    color.r = pow(color.r, correction.r);\n    color.g = pow(color.g, correction.g);\n    color.b = pow(color.b, correction.b);\n    gl_FragColor = color;\n    gl_FragColor.rgb *= color.a;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/gamma';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nconst GAMMA = 'Gamma' as const;\n\nexport type GammaInput = [number, number, number];\n\nexport type GammaOwnProps = {\n  gamma: GammaInput;\n};\n\nexport const gammaDefaultValues: GammaOwnProps = {\n  gamma: [1, 1, 1],\n};\n\n/**\n * Gamma filter class\n * @example\n * const filter = new Gamma({\n *   gamma: [1, 0.5, 2.1]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Gamma extends BaseFilter<typeof GAMMA, GammaOwnProps> {\n  /**\n   * Gamma array value, from 0.01 to 2.2.\n   * @param {Array} gamma\n   * @default\n   */\n  declare gamma: GammaOwnProps['gamma'];\n  declare rgbValues?: {\n    r: Uint8Array;\n    g: Uint8Array;\n    b: Uint8Array;\n  };\n\n  static type = GAMMA;\n\n  static defaults = gammaDefaultValues;\n\n  static uniformLocations = ['uGamma'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  constructor(options: { gamma?: GammaInput } = {}) {\n    super(options);\n    this.gamma =\n      options.gamma ||\n      ((\n        this.constructor as typeof Gamma\n      ).defaults.gamma.concat() as GammaInput);\n  }\n\n  /**\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const gamma = this.gamma,\n      rInv = 1 / gamma[0],\n      gInv = 1 / gamma[1],\n      bInv = 1 / gamma[2];\n\n    if (!this.rgbValues) {\n      this.rgbValues = {\n        r: new Uint8Array(256),\n        g: new Uint8Array(256),\n        b: new Uint8Array(256),\n      };\n    }\n\n    // This is an optimization - pre-compute a look-up table for each color channel\n    // instead of performing these pow calls for each pixel in the image.\n    const rgb = this.rgbValues;\n    for (let i = 0; i < 256; i++) {\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\n    }\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = rgb.r[data[i]];\n      data[i + 1] = rgb.g[data[i + 1]];\n      data[i + 2] = rgb.b[data[i + 2]];\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n  }\n\n  isNeutralState() {\n    const { gamma } = this;\n    return gamma[0] === 1 && gamma[1] === 1 && gamma[2] === 1;\n  }\n\n  toObject(): { type: typeof GAMMA; gamma: GammaInput } {\n    return {\n      type: GAMMA,\n      gamma: this.gamma.concat() as GammaInput,\n    };\n  }\n}\n\nclassRegistry.setClass(Gamma);\n","import type { TGrayscaleMode } from '../Grayscale';\n\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\n  average: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      float average = (color.r + color.b + color.g) / 3.0;\n      gl_FragColor = vec4(average, average, average, color.a);\n    }\n    `,\n  lightness: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n  luminosity: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/grayscale';\n\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\n\ntype GrayscaleOwnProps = {\n  mode: TGrayscaleMode;\n};\n\nexport const grayscaleDefaultValues: GrayscaleOwnProps = {\n  mode: 'average',\n};\n\n/**\n * Grayscale image filter class\n * @example\n * const filter = new Grayscale();\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Grayscale extends BaseFilter<'Grayscale', GrayscaleOwnProps> {\n  declare mode: TGrayscaleMode;\n\n  static type = 'Grayscale';\n\n  static defaults = grayscaleDefaultValues;\n\n  static uniformLocations = ['uMode'];\n\n  /**\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0, value: number; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      switch (this.mode) {\n        case 'average':\n          value = (r + g + b) / 3;\n          break;\n        case 'lightness':\n          value = (Math.min(r, g, b) + Math.max(r, g, b)) / 2;\n          break;\n        case 'luminosity':\n          value = 0.21 * r + 0.72 * g + 0.07 * b;\n          break;\n      }\n\n      data[i + 2] = data[i + 1] = data[i] = value;\n    }\n  }\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.mode];\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const mode = 1;\n    gl.uniform1i(uniformLocations.uMode, mode);\n  }\n\n  /**\n   * Grayscale filter isNeutralState implementation\n   * The filter is never neutral\n   * on the image\n   **/\n  isNeutralState() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Grayscale);\n","import { cos } from '../util/misc/cos';\nimport { sin } from '../util/misc/sin';\nimport {\n  ColorMatrix,\n  type ColorMatrixOwnProps,\n  colorMatrixDefaultValues,\n} from './ColorMatrix';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\n\nexport type HueRotationOwnProps = ColorMatrixOwnProps & {\n  rotation: number;\n};\n\nexport type HueRotationSerializedProps = {\n  rotation: number;\n};\n\nexport const hueRotationDefaultValues: HueRotationOwnProps = {\n  ...colorMatrixDefaultValues,\n  rotation: 0,\n};\n\n/**\n * HueRotation filter class\n * @example\n * const filter = new HueRotation({\n *   rotation: -0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class HueRotation extends ColorMatrix<\n  'HueRotation',\n  HueRotationOwnProps,\n  HueRotationSerializedProps\n> {\n  /**\n   * HueRotation value, from -1 to 1.\n   */\n  declare rotation: HueRotationOwnProps['rotation'];\n\n  static type = 'HueRotation';\n\n  static defaults = hueRotationDefaultValues;\n\n  calculateMatrix() {\n    const rad = this.rotation * Math.PI,\n      cosine = cos(rad),\n      sine = sin(rad),\n      aThird = 1 / 3,\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\n      OneMinusCos = 1 - cosine;\n    this.matrix = [\n      cosine + OneMinusCos / 3,\n      aThird * OneMinusCos - aThirdSqtSin,\n      aThird * OneMinusCos + aThirdSqtSin,\n      0,\n      0,\n      aThird * OneMinusCos + aThirdSqtSin,\n      cosine + aThird * OneMinusCos,\n      aThird * OneMinusCos - aThirdSqtSin,\n      0,\n      0,\n      aThird * OneMinusCos - aThirdSqtSin,\n      aThird * OneMinusCos + aThirdSqtSin,\n      cosine + aThird * OneMinusCos,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n    ];\n  }\n\n  isNeutralState() {\n    return this.rotation === 0;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    this.calculateMatrix();\n    super.applyTo(options);\n  }\n\n  toObject() {\n    return {\n      type: this.type,\n      rotation: this.rotation,\n    };\n  }\n}\n\nclassRegistry.setClass(HueRotation);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport type InvertOwnProps = {\n  alpha: boolean;\n  invert: boolean;\n};\n\nexport const invertDefaultValues: InvertOwnProps = {\n  alpha: false,\n  invert: true,\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: InvertOwnProps['alpha'];\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: InvertOwnProps['invert'];\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  static uniformLocations = ['uInvert', 'uAlpha'];\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform int uInvert;\n  uniform int uAlpha;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    if (uInvert == 1) {\n      if (uAlpha == 1) {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\n      } else {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n      }\n    } else {\n      gl_FragColor = color;\n    }\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport type NoiseOwnProps = {\n  noise: number;\n};\n\nexport const noiseDefaultValues: NoiseOwnProps = {\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter<'Noise', NoiseOwnProps> {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: NoiseOwnProps['noise'];\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  static uniformLocations = ['uNoise', 'uSeed'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  isNeutralState() {\n    return this.noise === 0;\n  }\n}\n\nclassRegistry.setClass(Noise);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uStepH;\n  uniform float uNoise;\n  uniform float uSeed;\n  varying vec2 vTexCoord;\n  float rand(vec2 co, float seed, float vScale) {\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n  }\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/pixelate';\n\nexport type PixelateOwnProps = {\n  blocksize: number;\n};\n\nexport const pixelateDefaultValues: PixelateOwnProps = {\n  blocksize: 4,\n};\n\n/**\n * Pixelate filter class\n * @example\n * const filter = new Pixelate({\n *   blocksize: 8\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Pixelate extends BaseFilter<'Pixelate', PixelateOwnProps> {\n  declare blocksize: PixelateOwnProps['blocksize'];\n\n  static type = 'Pixelate';\n\n  static defaults = pixelateDefaultValues;\n\n  static uniformLocations = ['uBlocksize'];\n\n  /**\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    for (let i = 0; i < height; i += this.blocksize) {\n      for (let j = 0; j < width; j += this.blocksize) {\n        const index = i * 4 * width + j * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        const a = data[index + 3];\n\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\n            const index = _i * 4 * width + _j * 4;\n            data[index] = r;\n            data[index + 1] = g;\n            data[index + 2] = b;\n            data[index + 3] = a;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicate when the filter is not gonna apply changes to the image\n   **/\n  isNeutralState() {\n    return this.blocksize === 1;\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n  }\n}\n\nclassRegistry.setClass(Pixelate);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBlocksize;\n  uniform float uStepW;\n  uniform float uStepH;\n  varying vec2 vTexCoord;\n  void main() {\n    float blockW = uBlocksize * uStepW;\n    float blockH = uBlocksize * uStepH;\n    int posX = int(vTexCoord.x / blockW);\n    int posY = int(vTexCoord.y / blockH);\n    float fposX = float(posX);\n    float fposY = float(posY);\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n    vec4 color = texture2D(uTexture, squareCoords);\n    gl_FragColor = color;\n  }\n`;\n","import { classRegistry } from '../ClassRegistry';\nimport { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport { fragmentShader } from './shaders/removeColor';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nexport type RemoveColorOwnProps = {\n  color: string;\n  distance: number;\n  useAlpha: boolean;\n};\n\nexport const removeColorDefaultValues: RemoveColorOwnProps = {\n  color: '#FFFFFF',\n  distance: 0.02,\n  useAlpha: false,\n};\n\n/**\n * Remove white filter class\n * @example\n * const filter = new RemoveColor({\n *   threshold: 0.2,\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class RemoveColor extends BaseFilter<\n  'RemoveColor',\n  RemoveColorOwnProps\n> {\n  /**\n   * Color to remove, in any format understood by {@link Color}.\n   * @param {String} type\n   * @default\n   */\n  declare color: RemoveColorOwnProps['color'];\n\n  /**\n   * distance to actual color, as value up or down from each r,g,b\n   * between 0 and 1\n   **/\n  declare distance: RemoveColorOwnProps['distance'];\n\n  /**\n   * For color to remove inside distance, use alpha channel for a smoother deletion\n   * NOT IMPLEMENTED YET\n   **/\n  declare useAlpha: RemoveColorOwnProps['useAlpha'];\n\n  static type = 'RemoveColor';\n\n  static defaults = removeColorDefaultValues;\n\n  static uniformLocations = ['uLow', 'uHigh'];\n\n  getFragmentSource() {\n    return fragmentShader;\n  }\n\n  /**\n   * Applies filter to canvas element\n   * @param {Object} canvasEl Canvas element to apply filter to\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const distance = this.distance * 255,\n      source = new Color(this.color).getSource(),\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n      highC = [\n        source[0] + distance,\n        source[1] + distance,\n        source[2] + distance,\n      ];\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      if (\n        r > lowC[0] &&\n        g > lowC[1] &&\n        b > lowC[2] &&\n        r < highC[0] &&\n        g < highC[1] &&\n        b < highC[2]\n      ) {\n        data[i + 3] = 0;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource(),\n      distance = this.distance,\n      lowC = [\n        0 + source[0] / 255 - distance,\n        0 + source[1] / 255 - distance,\n        0 + source[2] / 255 - distance,\n        1,\n      ],\n      highC = [\n        source[0] / 255 + distance,\n        source[1] / 255 + distance,\n        source[2] / 255 + distance,\n        1,\n      ];\n    gl.uniform4fv(uniformLocations.uLow, lowC);\n    gl.uniform4fv(uniformLocations.uHigh, highC);\n  }\n}\n\nclassRegistry.setClass(RemoveColor);\n","export const fragmentShader = `\nprecision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoord);\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n    gl_FragColor.a = 0.0;\n  }\n}\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { XY } from '../Point';\n\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\n\nexport type ResizeOwnProps = {\n  resizeType: TResizeType;\n  scaleX: number;\n  scaleY: number;\n  lanczosLobes: number;\n};\n\nexport const resizeDefaultValues: ResizeOwnProps = {\n  resizeType: 'hermite',\n  scaleX: 1,\n  scaleY: 1,\n  lanczosLobes: 3,\n};\n\ntype ResizeDuring2DResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n};\n\ntype ResizeDuringWEBGLResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n  horizontal: boolean;\n  width: number;\n  height: number;\n  taps: number[];\n  tempScale: number;\n  dH: number;\n  dW: number;\n};\n\n/**\n * Resize image filter class\n * @example\n * const filter = new Resize();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Resize extends BaseFilter<'Resize', ResizeOwnProps> {\n  /**\n   * Resize type\n   * for webgl resizeType is just lanczos, for canvas2d can be:\n   * bilinear, hermite, sliceHack, lanczos.\n   * @default\n   */\n  declare resizeType: ResizeOwnProps['resizeType'];\n\n  /**\n   * Scale factor for resizing, x axis\n   * @param {Number} scaleX\n   * @default\n   */\n  declare scaleX: ResizeOwnProps['scaleX'];\n\n  /**\n   * Scale factor for resizing, y axis\n   * @param {Number} scaleY\n   * @default\n   */\n  declare scaleY: ResizeOwnProps['scaleY'];\n\n  /**\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n   * @param {Number} lanczosLobes\n   * @default\n   */\n  declare lanczosLobes: ResizeOwnProps['lanczosLobes'];\n\n  static type = 'Resize';\n\n  static defaults = resizeDefaultValues;\n\n  static uniformLocations = ['uDelta', 'uTaps'];\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    this: ResizeDuringWEBGLResize,\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform2fv(\n      uniformLocations.uDelta,\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height],\n    );\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\n  }\n\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\n    const scale = this.tempScale;\n    return Math.ceil(this.lanczosLobes / scale);\n  }\n\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return `${this.type}_${filterWindow}`;\n  }\n\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return this.generateShader(filterWindow);\n  }\n\n  getTaps(this: ResizeDuringWEBGLResize) {\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\n      scale = this.tempScale,\n      filterWindow = this.getFilterWindow(),\n      taps = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      taps[i - 1] = lobeFunction(i * scale);\n    }\n    return taps;\n  }\n\n  /**\n   * Generate vertex and shader sources from the necessary steps numbers\n   * @param {Number} filterWindow\n   */\n  generateShader(filterWindow: number) {\n    const offsets = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      offsets[i - 1] = `${i}.0 * uDelta`;\n    }\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec2 uDelta;\n      varying vec2 vTexCoord;\n      uniform float uTaps[${filterWindow}];\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        float sum = 1.0;\n        ${offsets\n          .map(\n            (offset, i) => `\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\n              sum += 2.0 * uTaps[${i}];\n            `,\n          )\n          .join('\\n')}\n        gl_FragColor = color / sum;\n      }\n    `;\n  }\n\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\n    options.passes++;\n    this.width = options.sourceWidth;\n    this.horizontal = true;\n    this.dW = Math.round(this.width * this.scaleX);\n    this.dH = options.sourceHeight;\n    this.tempScale = this.dW / this.width;\n    this.taps = this.getTaps();\n    options.destinationWidth = this.dW;\n    super.applyTo(options);\n    options.sourceWidth = options.destinationWidth;\n\n    this.height = options.sourceHeight;\n    this.horizontal = false;\n    this.dH = Math.round(this.height * this.scaleY);\n    this.tempScale = this.dH / this.height;\n    this.taps = this.getTaps();\n    options.destinationHeight = this.dH;\n    super.applyTo(options);\n    options.sourceHeight = options.destinationHeight;\n  }\n\n  /**\n   * Apply the resize filter to the image\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\n    } else {\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\n    }\n  }\n\n  isNeutralState() {\n    return this.scaleX === 1 && this.scaleY === 1;\n  }\n\n  lanczosCreate(lobes: number) {\n    return (x: number) => {\n      if (x >= lobes || x <= -lobes) {\n        return 0.0;\n      }\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n        return 1.0;\n      }\n      x *= Math.PI;\n      const xx = x / lobes;\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\n    };\n  }\n\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\n    const imageData = options.imageData,\n      scaleX = this.scaleX,\n      scaleY = this.scaleY;\n\n    this.rcpScaleX = 1 / scaleX;\n    this.rcpScaleY = 1 / scaleY;\n\n    const oW = imageData.width;\n    const oH = imageData.height;\n    const dW = Math.round(oW * scaleX);\n    const dH = Math.round(oH * scaleY);\n    let newData: ImageData;\n\n    if (this.resizeType === 'sliceHack') {\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'hermite') {\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'bilinear') {\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'lanczos') {\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\n    } else {\n      // this should never trigger, is here just for safety net.\n      newData = new ImageData(dW, dH);\n    }\n    options.imageData = newData;\n  }\n\n  /**\n   * Filter sliceByTwo\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  sliceByTwo(\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const imageData = options.imageData;\n    const mult = 0.5;\n    let doneW = false;\n    let doneH = false;\n    let stepW = oW * mult;\n    let stepH = oH * mult;\n    const resources = options.filterBackend.resources;\n    let sX = 0;\n    let sY = 0;\n    const dX = oW;\n    let dY = 0;\n    if (!resources.sliceByTwo) {\n      resources.sliceByTwo = createCanvasElement();\n    }\n    const tmpCanvas = resources.sliceByTwo;\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n      tmpCanvas.width = oW * 1.5;\n      tmpCanvas.height = oH;\n    }\n    const ctx = tmpCanvas.getContext('2d')!;\n    ctx.clearRect(0, 0, oW * 1.5, oH);\n    ctx.putImageData(imageData, 0, 0);\n\n    dW = Math.floor(dW);\n    dH = Math.floor(dH);\n\n    while (!doneW || !doneH) {\n      oW = stepW;\n      oH = stepH;\n      if (dW < Math.floor(stepW * mult)) {\n        stepW = Math.floor(stepW * mult);\n      } else {\n        stepW = dW;\n        doneW = true;\n      }\n      if (dH < Math.floor(stepH * mult)) {\n        stepH = Math.floor(stepH * mult);\n      } else {\n        stepH = dH;\n        doneH = true;\n      }\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n      sX = dX;\n      sY = dY;\n      dY += stepH;\n    }\n    return ctx.getImageData(sX, sY, dW, dH);\n  }\n\n  /**\n   * Filter lanczosResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  lanczosResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ): ImageData {\n    function process(u: number): ImageData {\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n      center.x = (u + 0.5) * ratioX;\n      icenter.x = Math.floor(center.x);\n      for (v = 0; v < dH; v++) {\n        center.y = (v + 0.5) * ratioY;\n        icenter.y = Math.floor(center.y);\n        a = 0;\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n          if (i < 0 || i >= oW) {\n            continue;\n          }\n          fX = Math.floor(1000 * Math.abs(i - center.x));\n          if (!cacheLanc[fX]) {\n            cacheLanc[fX] = {};\n          }\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n            if (j < 0 || j >= oH) {\n              continue;\n            }\n            fY = Math.floor(1000 * Math.abs(j - center.y));\n            if (!cacheLanc[fX][fY]) {\n              cacheLanc[fX][fY] = lanczos(\n                Math.sqrt(\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2),\n                ) / 1000,\n              );\n            }\n            weight = cacheLanc[fX][fY];\n            if (weight > 0) {\n              idx = (j * oW + i) * 4;\n              a += weight;\n              red += weight * srcData[idx];\n              green += weight * srcData[idx + 1];\n              blue += weight * srcData[idx + 2];\n              alpha += weight * srcData[idx + 3];\n            }\n          }\n        }\n        idx = (v * dW + u) * 4;\n        destData[idx] = red / a;\n        destData[idx + 1] = green / a;\n        destData[idx + 2] = blue / a;\n        destData[idx + 3] = alpha / a;\n      }\n\n      if (++u < dW) {\n        return process(u);\n      } else {\n        return destImg;\n      }\n    }\n\n    const srcData = options.imageData.data,\n      destImg = options.ctx.createImageData(dW, dH),\n      destData = destImg.data,\n      lanczos = this.lanczosCreate(this.lanczosLobes),\n      ratioX = this.rcpScaleX,\n      ratioY = this.rcpScaleY,\n      rcpRatioX = 2 / this.rcpScaleX,\n      rcpRatioY = 2 / this.rcpScaleY,\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\n      cacheLanc: Record<number, Record<number, number>> = {},\n      center: XY = { x: 0, y: 0 },\n      icenter: XY = { x: 0, y: 0 };\n\n    return process(0);\n  }\n\n  /**\n   * bilinearFiltering\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  bilinearFiltering(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let x;\n    let y;\n    let i;\n    let j;\n    let xDiff;\n    let yDiff;\n    let chnl;\n    let color;\n    let offset = 0;\n    let origPix;\n    const ratioX = this.rcpScaleX;\n    const ratioY = this.rcpScaleY;\n    const w4 = 4 * (oW - 1);\n    const img = options.imageData;\n    const pixels = img.data;\n    const destImage = options.ctx.createImageData(dW, dH);\n    const destPixels = destImage.data;\n    for (i = 0; i < dH; i++) {\n      for (j = 0; j < dW; j++) {\n        x = Math.floor(ratioX * j);\n        y = Math.floor(ratioY * i);\n        xDiff = ratioX * j - x;\n        yDiff = ratioY * i - y;\n        origPix = 4 * (y * oW + x);\n\n        for (chnl = 0; chnl < 4; chnl++) {\n          a = pixels[origPix + chnl];\n          b = pixels[origPix + 4 + chnl];\n          c = pixels[origPix + w4 + chnl];\n          d = pixels[origPix + w4 + 4 + chnl];\n          color =\n            a * (1 - xDiff) * (1 - yDiff) +\n            b * xDiff * (1 - yDiff) +\n            c * yDiff * (1 - xDiff) +\n            d * xDiff * yDiff;\n          destPixels[offset++] = color;\n        }\n      }\n    }\n    return destImage;\n  }\n\n  /**\n   * hermiteFastResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  hermiteFastResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const ratioW = this.rcpScaleX,\n      ratioH = this.rcpScaleY,\n      ratioWHalf = Math.ceil(ratioW / 2),\n      ratioHHalf = Math.ceil(ratioH / 2),\n      img = options.imageData,\n      data = img.data,\n      img2 = options.ctx.createImageData(dW, dH),\n      data2 = img2.data;\n    for (let j = 0; j < dH; j++) {\n      for (let i = 0; i < dW; i++) {\n        const x2 = (i + j * dW) * 4;\n        let weight = 0;\n        let weights = 0;\n        let weightsAlpha = 0;\n        let gxR = 0;\n        let gxG = 0;\n        let gxB = 0;\n        let gxA = 0;\n        const centerY = (j + 0.5) * ratioH;\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\n            centerX = (i + 0.5) * ratioW,\n            w0 = dy * dy;\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\n            const w = Math.sqrt(w0 + dx * dx);\n            /* eslint-disable max-depth */\n            if (w > 1 && w < -1) {\n              continue;\n            }\n            //hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1;\n            if (weight > 0) {\n              dx = 4 * (xx + yy * oW);\n              //alpha\n              gxA += weight * data[dx + 3];\n              weightsAlpha += weight;\n              //colors\n              if (data[dx + 3] < 255) {\n                weight = (weight * data[dx + 3]) / 250;\n              }\n              gxR += weight * data[dx];\n              gxG += weight * data[dx + 1];\n              gxB += weight * data[dx + 2];\n              weights += weight;\n            }\n            /* eslint-enable max-depth */\n          }\n        }\n        data2[x2] = gxR / weights;\n        data2[x2 + 1] = gxG / weights;\n        data2[x2 + 2] = gxB / weights;\n        data2[x2 + 3] = gxA / weightsAlpha;\n      }\n    }\n    return img2;\n  }\n}\n\nclassRegistry.setClass(Resize);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/saturation';\n\nexport type SaturationOwnProps = {\n  saturation: number;\n};\n\nexport const saturationDefaultValues: SaturationOwnProps = {\n  saturation: 0,\n};\n\n/**\n * Saturate filter class\n * @example\n * const filter = new Saturation({\n *   saturation: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Saturation extends BaseFilter<'Saturation', SaturationOwnProps> {\n  /**\n   * Saturation value, from -1 to 1.\n   * Increases/decreases the color saturation.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} saturation\n   * @default\n   */\n  declare saturation: SaturationOwnProps['saturation'];\n\n  static type = 'Saturation';\n\n  static defaults = saturationDefaultValues;\n\n  static uniformLocations = ['uSaturation'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.saturation;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const max = Math.max(r, g, b);\n      data[i] += max !== r ? (max - r) * adjust : 0;\n      data[i + 1] += max !== g ? (max - g) * adjust : 0;\n      data[i + 2] += max !== b ? (max - b) * adjust : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n  }\n\n  isNeutralState() {\n    return this.saturation === 0;\n  }\n}\n\nclassRegistry.setClass(Saturation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uSaturation;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float rgMax = max(color.r, color.g);\n    float rgbMax = max(rgMax, color.b);\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport type VibranceOwnProps = {\n  vibrance: number;\n};\n\nexport const vibranceDefaultValues: VibranceOwnProps = {\n  vibrance: 0,\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter<'Vibrance', VibranceOwnProps> {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: VibranceOwnProps['vibrance'];\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  static uniformLocations = ['uVibrance'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const max = Math.max(r, g, b);\n      const avg = (r + g + b) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== r ? (max - r) * amt : 0;\n      data[i + 1] += max !== g ? (max - g) * amt : 0;\n      data[i + 2] += max !== b ? (max - b) * amt : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {TWebGLUniformLocationMap} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n\n  isNeutralState() {\n    return this.vibrance === 0;\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uVibrance;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float max = max(color.r, max(color.g, color.b));\n    float avg = (color.r + color.g + color.b) / 3.0;\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\n    gl_FragColor = color;\n  }\n`;\n"],"names":["BaseConfiguration","constructor","_defineProperty","this","window","devicePixelRatio","config","super","configure","arguments","length","undefined","Object","assign","addFonts","paths","fontPaths","_objectSpread","removeFonts","forEach","fontFamily","clearFonts","restoreDefaults","keys","defaults","reduce","acc","key","log","severity","_len","optionalParams","Array","_key","console","FabricError","Error","message","options","concat","SignalAbortedError","context","GLProbe","WebGLProbe","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","canvas","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","textureSize","copyPasteData","env","setEnv","value","getEnv","document","isTouchSupported","navigator","maxTouchPoints","dispose","getFabricDocument","getFabricWindow","getDevicePixelRatio","_config$devicePixelRa","Math","max","cache","getFontCache","_ref","fontStyle","fontWeight","toLowerCase","charWidthsCache","fontCache","cacheKey","clearFontCache","limitDimsByArea","ar","perfLimitSizeTotal","roughWidth","sqrt","floor","VERSION","noop","halfPI","PI","twoMathPi","PiBy180","iMatrix","freeze","DEFAULT_SVG_FONT_SIZE","kRect","CENTER","LEFT","TOP","BOTTOM","RIGHT","NONE","reNewline","MOVING","SCALING","ROTATING","ROTATE","SKEWING","RESIZING","MODIFY_POLY","MODIFY_PATH","CHANGED","SCALE","SCALE_X","SCALE_Y","SKEW_X","SKEW_Y","FILL","STROKE","MODIFIED","JSON","SVG","classRegistry","Map","has","classType","getClass","get","setClass","classConstructor","set","type","getSVGClass","SVGTagName","setSVGClass","runningAnimations","remove","index","indexOf","splice","cancelAll","animations","animation","abort","cancelByCanvas","filter","_animation$target","target","cancelByTarget","Observable","on","arg0","handler","__eventListeners","entries","eventName","off","push","once","disposers","_ref2","d","disposer","args","call","_removeEventListener","eventListener","_ref3","fire","_this$__eventListener","listenersForEvent","i","removeFromArray","array","idx","cos","angle","abs","sin","angleSlice","sign","Point","y","x","add","that","addEquals","scalarAdd","scalar","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","t","min","distanceFrom","dx","dy","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","radians","origin","ZERO","sinus","cosinus","p","transform","ignoreOffset","isCollection","fabricObject","isArray","_objects","createCollectionMixin","Base","Collection","_onObjectAdded","object","_onObjectRemoved","_onStackOrderChanged","objects","size","insertAt","_len2","_key2","removed","_len3","_key3","forEachObject","callback","getObjects","_len4","types","_key4","o","isType","item","isEmpty","contains","deep","includes","some","obj","complexity","memo","current","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","intersecting","newIdx","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","tl","br","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","CommonMethods","_setOptions","prop","_setObject","_set","toggle","property","requestAnimFrame","requestAnimationFrame","cancelAnimFrame","handle","cancelAnimationFrame","id","uid","createCanvasElement","element","createElement","createImage","createCanvasElementFor","newCanvas","toDataURL","canvasEl","format","quality","toBlob","Promise","resolve","_","degreesToRadians","degrees","radiansToDegrees","isIdentityMatrix","mat","every","transformPoint","invertTransform","a","r","multiplyTransformMatrices","b","is2x2","multiplyTransformMatrixArray","matrices","reduceRight","product","curr","calcPlaneRotation","atan2","qrDecompose","denom","pow","scaleX","scaleY","skewX","skewY","translateX","translateY","createTranslateMatrix","createRotateMatrix","angleRadiant","cosValue","sinValue","createScaleMatrix","angleToSkew","tan","createSkewXMatrix","skewValue","createSkewYMatrix","calcDimensionsMatrix","flipX","flipY","matrix","composeMatrix","scaleMatrix","loadImage","url","signal","crossOrigin","reject","aborted","img","err","src","addEventListener","done","onload","onerror","removeEventListener","enlivenObjects","reviver","instances","all","map","fromObject","then","fabricInstance","catch","error","instance","finally","enlivenObjectEnlivables","serializedObject","promises","values","enlived","pick","source","pickBy","predicate","ColorNameMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","rgb2Hsl","g","maxValue","minValue","h","s","l","round","fromAlphaToFloat","parseFloat","endsWith","hexify","toUpperCase","padStart","greyAverage","avg","Color","color","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","isUnrecognised","getSource","toRgb","toRgba","join","toHsl","toHsla","toHex","toHexa","slice","getAlpha","setAlpha","alpha","toGrayscale","toBlackWhite","threshold","average","bOrW","overlayWith","otherColor","otherSource","R","G","B","fromRgb","fromRgba","match","parsedValue","fromHsl","fromHsla","parseAngletoDegrees","fromHex","expandedValue","split","hex","hexCouple","parseInt","lowercase","numeric","toFixed","number","fractionDigits","Number","parseUnit","fontSize","unit","exec","dpi","DPI","parsePreserveAspectRatioAttribute","attribute","firstPart","secondPart","trim","alignX","alignY","align","meetOrSlice","matrixToSVG","NUM_FRACTION_DIGITS","colorPropToSVG","colorValue","opacityValue","inlineStyle","toLive","opacity","isFiller","filler","isSerializableFiller","toObject","isPattern","offsetX","isActiveSelection","getScrollLeftTop","doc","getDocumentFromElement","elementLoop","docElement","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","el","ownerDocument","getWindowFromElement","_el$ownerDocument","defaultView","setCanvasDimensions","ctx","retinaScaling","setAttribute","scale","setCSSDimensions","makeElementUnselectable","onselectstart","userSelect","StaticCanvasDOMManager","createLowerCanvas","lower","getElementById","hasAttribute","_originalCanvasStyle","cssText","classList","cleanupDOM","removeAttribute","setDimensions","calcOffset","_getWindowFromElement","offset","elemStyle","getComputedStyle","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","box","docElem","getBoundingClientRect","scrollLeftTop","clientLeft","clientTop","getElementOffset","staticCanvasDefaults","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","StaticCanvas","lowerCanvasEl","_this$elements$lower","elements","contextContainer","_this$elements$lower2","getDefaults","ownDefaults","initElements","_setDimensionsImpl","skipControlsDrawing","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","dimensions","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","vpt","zoomToPoint","point","before","newPoint","after","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","backgroundImage","overlayImage","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","iVpt","vptCoords","tr","bl","drawControls","_ctx","v","path","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","len","render","_renderBackgroundOrOverlay","fill","needsVpt","isAFiller","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","m","gradientTransform","patternTransform","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","version","__serializeBgOverlay","originalValue","data","bgImage","bgColor","background","overlay","toSVG","markup","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","optViewBox","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","additionalTransform","fontList","_renderText","styles","styleRow","fontListMarkup","_setSVGObject","bgOrOverlay","repeat","finalWidth","finalHeight","loadFromJSON","json","serialized","parse","enlivedMap","properties","cloneWithoutData","multiplier","finalMultiplier","toCanvasElement","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","originalSkipControlsDrawing","newZoom","vp","newVp","originalRetina","objectsToRender","task","destroy","kill","touchEvents","getPointer","event","scroll","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","isTouchEvent","pointerType","stopEvent","e","preventDefault","stopPropagation","makeBoundingBoxFromPoints","points","addTransformToObject","applyTransformToObject","calcOwnMatrix","_qrDecompose","otherOptions","_objectWithoutProperties","_excluded","setPositionByOrigin","resetObjectTransform","saveObjectTransform","sizeAfterTransform","dimX","dimY","bbox","calcPlaneChangeMatrix","from","sendPointToPlane","to","sendVectorToPlane","sendObjectToPlane","fireEvent","_target$canvas","originOffset","bottom","right","resolveOrigin","originValue","NOT_ALLOWED_CURSOR","isTransformCentered","originX","originY","invertOrigin","isLocked","lockingKey","commonEventInfo","eventData","pointer","findCornerQuadrant","control","cornerAngle","getTotalAngle","getLocalPoint","corner","controls","padding","localPoint","getRelativeCenterPoint","translateToGivenOrigin","normalizePoint","dragHandler","newLeft","newTop","moveX","moveY","FabricObjectSVGExportMixin","getSvgStyles","skipShadow","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","visibility","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","full","calcTransformMatrix","svgTransform","_toSVG","_reviver","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","strokeUniform","absoluteClipPath","absolutePositioned","clipPathMarkup","addPaintOrder","paintFirst","getSvgRegex","arr","RegExp","reNum","String","raw","_templateObject","_taggedTemplateLiteral","svgNS","reFontDeclaration","attributesMap","cx","cy","display","fSize","cPath","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgValidParentsRegEx","reViewBoxAttrValue","unitVectorX","zero","rotateVector","vector","createVector","magnitude","calcAngleBetweenVectors","crossProduct","dotProduct","calcVectorRotation","getUnitVector","getOrthonormalVector","counterClockwise","isBetweenVectors","AxB","AxT","BxT","shadowOffsetRegex","reOffsetsAndBlur","Shadow","parseShadow","shadowStr","blur","replace","fBoxX","fBoxY","affectStroke","nonScaling","capValue","stateProperties","cacheProperties","fabricObjectDefaultValues","minScaleLimit","objectCaching","inverted","centeredRotation","centeredScaling","dirty","normalize","c","asin","elastic","defaultEasing","easeOutBounce","easeInBounce","easeInCirc","easeInCubic","easeInElastic","normA","normS","normP","easeInExpo","easeInOutBounce","easeInOutCirc","easeInOutCubic","easeInOutElastic","normC","easeInOutExpo","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","easeInQuart","easeInQuint","easeInSine","easeOutCirc","easeOutCubic","easeOutElastic","easeOutExpo","easeOutQuad","easeOutQuart","easeOutQuint","easeOutSine","defaultAbort","AnimationBase","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","endValue","calculate","state","_state","isDone","start","firstTick","timestamp","startTime","Date","register","setTimeout","durationMs","boundDurationMs","durationProgress","valueProgress","unregister","ValueAnimation","timeElapsed","ArrayAnimation","defaultColorEasing","wrapColorCallback","rgba","ColorAnimation","startColor","endColor","animate","isArrayAnimation","animateColor","Intersection","status","append","isPointContained","T","A","infinite","AB","isPointInPolygon","other","hits","inter","intersectSegmentSegment","intersectLineLine","a1","a2","b1","b2","aInfinite","bInfinite","a2xa1x","a2ya1y","b2xb1x","b2yb1y","a1xb1x","a1yb1y","uaT","ubT","uB","ua","ub","segmentsCoincide","intersectSegmentLine","s1","s2","l1","l2","intersectLinePolygon","result","intersectSegmentPolygon","intersectPolygonPolygon","points1","points2","coincidences","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","ObjectGeometry","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","relativePosition","getRelativeXY","group","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","coords","intersectsWithObject","intersection","isContainedWithinObject","getBoundingRect","isOnScreen","isPartiallyOnScreen","getScaledWidth","_getTransformedDimensions","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","getCanvasRetinaScaling","_this$canvas","getViewportTransform","_this$canvas2","rotateMatrix","tMatrix","finalMatrix","dim","w","transformMatrixKey","skipGroup","prefix","matrixCache","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","dimOptions","preScalingStrokeValue","postScalingStrokeValue","finalDimensions","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","translateToOriginPoint","relCenter","getPointByOrigin","pos","_getLeftTopCoords","FabricObject","name","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maxCacheSideLimit","minCacheSideLimit","limX","limY","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","ceil","dimensionsChanged","zoomChanged","setTransform","drawingWidth","drawingHeight","translate","needFullTransform","contextTop","getObjectScaling","retina","getObjectOpacity","_constrainScale","isChanged","parent","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","parentClipPaths","hasStroke","hasFill","needsItsOwnCache","ownCaching","isOnACache","willDrawShadow","drawClipPathOnCache","canvasWithClipPath","originalFill","originalStroke","_setClippingProperties","_render","_drawClipPath","createClipPathLayer","prevClipPath","skipCanvas","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","decl","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","dashArray","setLineDash","sx","sy","multX","multY","scaling","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","_pCtx$createPattern","pCanvas","pCtx","createPattern","_findCenterFromElement","objectForm","cloneAsImage","origParams","originalGroup","originalShadow","canvasProvider","withoutTransform","withoutShadow","boundingRect","shadowOffset","originalCanvas","setOnGroup","animatable","_animate","propIsColor","colorProperties","animationOptions","isDescendantOf","getAncestors","ancestors","findCommonAncestors","fork","otherFork","common","otherAncestors","ancestor","j","hasCommonAncestors","commonAncestors","isInFrontOf","ancestorData","firstCommonAncestor","headOfFork","pop","headOfOtherFork","thisIndex","otherIndex","propertiesToSerialize","customProperties","toFixedBound","val","_removeDefaultValues","baseValues","getPrototypeOf","baseValue","_fromObject","serializedObjectOptions","_ref4","extraParam","_excluded2","enlivedObjectOptions","wrapWithFireEvent","actionHandler","extraEventInfo","actionPerformed","wrapWithFixedAnchor","centerPoint","constraint","changeWidth","changeObjectWidth","strokePadding","oldWidth","newWidth","renderCircleControl","styleOverride","xSize","sizeX","cornerSize","ySize","sizeY","transparentCorners","cornerStrokeColor","myLeft","myTop","cornerColor","arc","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","shouldActivate","controlKey","_fabricObject$canvas","getActiveObject","isControlVisible","getActionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","getActionName","actionName","getVisibility","_fabricObject$_contro","_fabricObject$_contro2","_controlsVisibility","setVisibility","positionHandler","currentControl","calcCornerCoords","objectCornerSize","centerX","centerY","isTouch","touchSizeX","touchSizeY","cornerStyle","rotationStyleHandler","lockRotation","rotationWithSnapping","rotateObjectWithSnapping","ex","ey","theta","pivotPoint","lastAngle","curAngle","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","hasRotated","scaleIsProportional","uniformIsToggled","uniScaleKey","uniformScaling","scalingIsForbidden","by","scaleProportionally","lockX","lockY","scaleMap","scaleCursorStyleHandler","n","scaleObject","signX","signY","gestureScale","distance","original","oldScaleX","oldScaleY","scalingEqually","scaleObjectFromCorner","scalingX","scaleObjectX","scalingY","scaleObjectY","AXIS_KEYS","counterAxis","skew","lockSkewing","flip","skewMap","skewCursorStyleHandler","skewHandler","axis","originKey","lockSkewingKey","skewKey","flipKey","counterOriginKey","counterFlipKey","counterOriginFactor","skewingSide","finalHandler","skewingBefore","skewingStart","shearingStart","shearing","skewing","atan","changed","dimBefore","dimAfter","compensationFactor","skewObject","skewHandlerX","skewHandlerY","isAltAction","altActionKey","scaleOrSkewActionName","isAlternative","scaleSkewCursorStyleHandler","scalingXOrSkewingY","scalingYOrSkewingX","createObjectDefaultControls","ml","mr","mb","mt","mtr","withConnection","createResizeControls","createTextboxDefaultControls","InteractiveFabricObject","createControls","targetCanvas","noScaleCache","_currentTransform","action","startsWith","getActiveControl","__corner","coord","oCoords","findControl","forTouch","hasControls","cornerEntries","touchCorner","calcOCoords","rMatrix","positionMatrix","startMatrix","transformOptions","forEachControl","_calcCornerCoords","touchCornerSize","fn","selectionBackgroundColor","_activeObject","wh","strokeBorders","_drawBorders","borderColor","borderDashArray","drawControlsConnectingLines","_renderControls","hasBorders","styleOptions","shouldDrawBorders","shouldDrawControls","borderScaleFactor","isMoving","borderOpacityWhenMoving","drawBorders","forActiveSelection","shouldStroke","cornerDashArray","setControlVisible","setControlsVisibility","clearContextTop","restoreManually","onDeselect","_options","onSelect","shouldStartDragging","_e","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","isTransparent","tolerance","getImageData","StrokeProjectionsBase","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","unitVector","zeroVector","StrokeLineJoinProjections","getOrthogonalRotationFactor","vector1","vector2","C","AC","bisector","orthogonalProjection","correctSide","projectBevel","projections","projectMiter","hypotUnitScalar","miterVector","projectRoundNoSkew","startCircle","endCircle","projectRoundWithSkew","circleRadius","newY","furthestY","newX","furthestX","projectRound","isStraightLine","newOrigin","proj0","proj1","comparisonVector","isProj0Start","projectPoints","project","originPoint","projectedPoint","StrokeLineCapProjections","projectButt","projection","projectSquare","strokePointingOut","projectedA","projectStrokeOnPoints","openPath","reduced","findIndexRight","cloneStyles","newObj","keyInner","escapeXml","string","graphemeSplit","textstring","graphemes","chr","getWholeChar","str","code","charCodeAt","isNaN","charAt","next","prev","firstLetterOnly","hasStyleChanged","prevStyle","thisStyle","forTextSpans","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","text","textLines","stylesArray","charIndex","chars","end","stylesFromArray","stylesObject","styleIndex","SHARED_ATTRIBUTES","selectorMatches","selector","nodeName","classNames","getAttribute","azAz","matcher","splitClassNames","elementMatchesRule","selectors","parentMatching","firstMatching","parentElement","doesSomeParentMatch","normalizeAttr","attr","_attributesMap","regex","cleanupSvgAttribute","attributeValue","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","transforms","transformList","_templateObject7","reTransformList","reTransform","reTransformAll","parseTransformAttribute","test","matchAll","transformMatch","matchedParams","operation","rawArgs","arg1","arg2","arg3","arg4","arg5","arg","normalizeValue","parentAttributes","parsed","ouputValue","transformMatrix","fillIndex","strokeIndex","parseFontDeclaration","oStyle","lineHeight","parseStyleString","chunk","parseStyleAttribute","parseStyleObject","colorAttributesMap","parseAttributes","attributes","cssRules","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","normalizedStyle","normalizedAttr","normalizedValue","font","mergedAttrs","colorAttr","setStrokeFillOpacity","RECT_PROPS","Rect","_initRxRy","rx","ry","isRounded","bezierCurveTo","fromElement","_parseAttributes","ATTRIBUTE_NAMES","restOfparsedAttributes","Boolean","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","LAYOUT_TYPE_IMPERATIVE","getObjectBounds","destinationGroup","currentGroup","objectCenter","accountForStroke","strokeUniformVector","scalingStrokeWidth","sizeVector","LayoutStrategy","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","bboxSize","bboxCenter","actualSize","relativeCorrection","FitContentLayout","LAYOUT_MANAGER","LayoutManager","_subscriptions","performLayout","strictContext","bubbles","_prevLayoutStrategy","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","attachHandlers","trigger","subscribe","unsubscribe","_context","delete","unsubscribeTargets","targets","subscribeTargets","tricklingContext","layoutManager","prevCenter","nextCenter","correction","_context$x","_context$y","layoutObjects","layoutObject","bubblingContext","NoopLayoutManager","Group","groupInit","_options$layoutManage","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","allowedObjects","_onAfterObjectsChange","removeParentTransform","exitGroup","_shouldSetNestedCoords","subTargetCheck","removeAll","_activeObjects","selected","activeObjects","_watchObject","watch","_enterGroup","activeObject","_exitGroup","ownCache","preserveObjectStacking","triggerLayout","__serializeObjects","method","_includeDefaultValues","originalDefaults","_createSVGBgRect","fillStroke","commons","svgString","bg","abortable","hydratedOptions","layoutClass","strategyClass","interactive","findScaleToFit","destination","findScaleToCover","commaWsp","reArcCommandPoints","repeatedCommands","M","segmentToBezier","theta1","theta2","cosTh","sinTh","cx1","cy1","mT","fromX","fromY","costh1","sinth1","costh2","sinth2","toX","toY","calcVectorAngle","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","begx","begy","cp1x","cp1y","cp2x","cp2y","endx","endy","argsString","cachesBoundsOfCurve","boundsOfCurveCache","tvalues","bounds","b2ac","sqrtb2ac","t1","t2","jlen","iterator","getPointOnCubicBezierIterator","fromArcToBeziers","fx","fy","rot","large","sweep","tx","ty","segsNorm","arcToSegments","rotateX","root","sinTheta","px","py","rx2","ry2","py2","px2","pl","_rx","_ry","mTheta","dtheta","segments","mDelta","th3","makePathSimpler","x1","y1","destinationPath","previous","controlX","controlY","parsedCommand","converted","calcLineLength","x2","y2","pct","c1","c2","CB2","c3","CB3","c4","CB4","QB1","QB2","QB3","getTangentCubicIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","qb1","qb2","qb3","tangentX","tangentY","getPointOnQuadraticBezierIterator","getTangentQuadraticIterator","invT","pathIterator","tempP","tmpLen","perc","findPercentageForDistance","segInfo","nextLen","nextStep","lastPerc","angleFinder","getPathSegmentsInfo","tempInfo","totalLength","info","basicInfo","command","destX","destY","getPointOnPath","infos","segPercent","segment","rePathCmdAll","regExpArcCommandPoints","reMyNum","commandLengths","parsePath","pathString","_pathString$match","chain","matchStr","commandLetter","commandLength","paramArr","lastIndex","out","newCommand","transformedCommand","getSmoothPathFromPoints","p1","p2","multSignX","multSignY","manyPoints","midPoint","joinPath","pathData","setStyle","elementStyle","setProperty","getRandomInt","random","request","xhr","removeListener","ontimeout","onreadystatechange","readyState","open","send","removeTransformMatrixForSvgParsing","preserveAspectRatioOptions","_assignTransformMatrixProps","cropX","cropY","offsetLeft","offsetTop","_newCanvas$getContext","getRegularPolygonPath","numVertexes","radius","interiorAngle","rotationAdjustment","rad","commonAttributes","groupSVGElements","mergeClipPaths","_b$group","removeTransformFromObject","finalTransform","rotatePoint","transformPath","pathOffset","pathSegment","newSegment","CanvasDOMManager","containerClass","upperCanvasEl","createUpperCanvas","upper","applyCanvasStyle","container","createContainerElement","replaceChild","className","removeChild","SelectableCanvas","_this$elements$upper","_this$elements$upper2","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","selection","_drawSelection","renderTop","setTargetFindTolerance","targetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","selectionBgc","enhancedTolerance","_isSelectionKeyPressed","sKey","selectionKey","_shouldClearSelection","getActiveObjects","_shouldCenterTransform","modifierKeyPressed","centerTransform","_getOriginFromCorner","controlName","_setupCurrentTransform","alreadySelected","_control$getActionHan","getScenePoint","getActionFromCorner","altKey","centeredKey","lastX","lastY","shiftKey","setCursor","cursor","deltaX","extent","strokeOffset","selectionLineWidth","minX","minY","maxX","maxY","selectionColor","selectionBorderColor","selectionDashArray","findTarget","skipTargetFind","getViewportPoint","aObjects","searchPossibleTargets","subTargets","altSelectionKey","_pointIsInObjectSelectionArea","viewportZoom","angleRadians","cosP","sinP","cosPSinP","cosPMinusSinP","_checkTarget","isEditing","_searchPossibleTargets","subTarget","_pointer","_absolutePointer","fromViewport","boundsWidth","boundsHeight","cssScale","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","active","_fireSelectionEvents","oldObjects","somethingChanged","invalidate","added","setActiveObject","currentActives","_setActiveObject","prevActiveObject","endCurrentTransform","discardActiveObject","discarded","_finalizeCurrentTransform","_scaling","originalProperties","_realizeGroupTransformOnObject","originalValues","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","TextEditingManager","cb","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","_this$target","updateSelectionOnMouseMove","addEventOptions","passive","getEventPoints","viewportPoint","scenePoint","absolutePointer","addListener","syntheticEventConfig","mouse","in","targetIn","targetOut","canvasIn","canvasOut","drag","Canvas","eventHandler","addOrRemove","_getEventPrefix","functor","_eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","clearTimeout","_willAddMouseDown","__onMouseWheel","shared","nestedTarget","_isClick","_dragSource","_onDragProgress","_renderDragEffects","dropTarget","_dropTarget","didDrop","dataTransfer","dropEffect","dragSource","_draggedoverTarget","findDragTargets","eventType","_fireEnterLeaveEvents","_basicEventHandler","_cacheTransformEventData","_handleEvent","getPointerId","evt","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","shouldPreventScrolling","currentActiveObject","__onMouseDown","_target","__onMouseUp","__onMouseMove","_shouldRender","_this$_activeObject","isClick","button","_onMouseUpInDrawingMode","shouldRender","targetWasActive","handleSelection","found","originalControl","originalMouseUpHandler","_setCursorFromEvent","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","_onMouseMoveInDrawingMode","onMouseUp","grouped","handleMultiSelection","groupSelector","_transformObject","_fireOverOutEvents","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","draggedoverTarget","targetChanged","outOpt","nextTarget","inOpt","previousTarget","localPointer","_performTransformAction","activeSelection","reverse","isAS","prevActiveObjects","multiSelectAdd","newActiveSelection","point1","point2","collectedObjects","klass","linearDefaultCoords","radialDefaultCoords","ifNaN","valueIfNaN","RE_PERCENT","isPercent","parsePercent","NaN","RE_KEY_VALUE_PAIRS","RE_KEY_VALUE","parseColorStop","keyValuePairs","parseColorStops","opacityAttr","colorStops","colorStopEls","getElementsByTagName","parseType","parseGradientUnits","getValue","parseCoords","valuesToConvert","finalValue","propValue","convertPercentUnitsToValues","parseLinearCoords","parseRadialCoords","Gradient","addColorStop","colorStop","preTransform","sort","_renderPathCommands","needsSwap","minRadius","percentageShift","gradient","createLinearGradient","createRadialGradient","svgOptions","viewBoxWidth","viewBoxHeight","Pattern","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","patternSource","patternOffsetX","patternOffsetY","patternWidth","patternHeight","BaseBrush","_saveAndTransform","needsFullRender","_resetShadow","_isOutSideCanvas","Path","_setPath","adjustPosition","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","pathCmd","sourcePath","_getOffsetTransform","digits","_calcDimensions","subpathStartX","subpathStartY","parsedAttributes","PencilBrush","_points","_hasStraightLine","drawSegment","drawStraightLine","straightLineKey","_prepareForDrawing","_addPoint","limitedToCanvasSize","oldEnd","_finalizeAndAddPath","_reset","convertPointsToSVGPath","createPath","decimatePoints","cDistance","lastPoint","adjustedDistance","newPoints","decimate","isEmptySVGPath","CIRCLE_PROPS","Circle","setRadius","startAngle","endAngle","getRadiusX","getRadiusY","startX","startY","endX","endY","largeFlag","sweepFlag","CircleBrush","drawDot","addPoint","dot","originalRenderOnAddRemove","circles","circle","pointerPoint","SprayBrush","sprayChunks","sprayChunk","addSprayChunk","renderChunck","rects","chunck","rect","optimizeOverlapping","uniqueRects","uniqueRectsArray","getUniqueRects","sprayChunck","density","dotWidthVariance","dotWidth","randomOpacity","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPattern","pattern","topLeft","coordProps","Line","_setWidthHeight","calcLinePoints","origStrokeStyle","_this$stroke","_x1","_x2","_y1","_y2","xMult","yMult","Triangle","widthBy2","heightBy2","ELLIPSE_PROPS","Ellipse","getRx","getRy","parsePointsAttribute","pointsSplit","parsedPoints","polylineDefaultValues","exactBoundingBox","Polyline","initialized","isOpen","_projectStrokeOnPoints","strokeDiff","bboxNoStroke","layoutProperties","_options$width","_options$height","_options$width2","_options$height2","output","diffX","diffY","Polygon","fontProperties","textDecorationProperties","textLayoutProperties","additionalProps","styleProperties","textDefaultValues","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","offsets","_fontSizeMult","charSpacing","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","JUSTIFY","JUSTIFY_LEFT","JUSTIFY_RIGHT","JUSTIFY_CENTER","StyledText","isEmptyStyles","lineIndex","line","p3","styleHas","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","styleObject","_textLines","removeStyle","lineNum","charNum","_extendStyles","get2DCursorLocation","_getLineStyle","_setLineStyle","newStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","startIndex","endIndex","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_lineStyle$charIndex","lineStyle","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","multipleSpacesRegex","dblQuoteRegex","createSVGInlineRect","svgColor","createSVGRect","measuringContext","FabricText","setPathInfo","initDimensions","segmentsInfo","_splitText","newLines","_splitTextIntoLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","__charBounds","kernedWidth","missingNewlineOffset","_lineIndex","selectionStart","skipWrapping","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","leftOffset","_getLeftOffset","lineTopOffset","_getTopOffset","heightOfLine","getHeightOfLine","lineLeftOffset","_getLineLeftOffset","drawStart","currentColor","boxWidth","boxStart","lastColor","getValueOfPropertyAt","charBox","renderLeft","_measureChar","_char","previousChar","prevCharStyle","fontDeclaration","couple","stylesAreEqual","fontMultiplier","coupleWidth","previousWidth","getMeasuringContext","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","prevGrapheme","graphemeInfo","llength","lineBounds","grapheme","_getGraphemeBox","positionInPath","totalPathLength","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isJustify","shortCut","isLtr","currentDirection","actualStyle","nextStyle","timeToRender","drawingLeft","charsToRender","_renderChar","_applyPatternGradientTransformText","handleFiller","fullDecl","shouldFill","fillOffsets","fillText","strokeOffsets","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","lineDiff","__lineWidths","_charStyle$property","topOffset","currentDecoration","currentFill","lastDecoration","lastFill","currentSize","currentDy","parsedFontFamily","genericFonts","newLine","newText","needsDims","isAddingPath","_options$parsedAttrib","textAnchor","textDecoration","restOfOptions","textContent","textHeightScaleFactor","scaledDiff","textHeight","offX","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","getSvgTextDecoration","textTopOffset","textLeftOffset","lineOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","char","styleDecl","styleProps","getSvgSpanStyles","fillStyles","dySpan","_getSVGLineTopOffset","lastHeight","useWhiteSpace","decoration","DraggableTextDelegate","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","newSelection","getSelectionStartFromPointer","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_e$dataTransfer","flipFactor","boundaries","_getCursorBoundaries","diff","bgc","dragImage","border","__dragImageDisposer","appendChild","setData","stringify","effectAllowed","abortCursorAnimation","editable","defaultPrevented","dragStartSelection","targetCanDrop","ev","_e$dataTransfer2","insert","getData","trailing","selectionStartOffset","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","_e$dataTransfer3","reNonWord","ITextBehavior","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_this$_currentTickCom","_currentTickCompleteState","restart","cursorDelay","shouldClear","cursorAnimation","restartCursorIfNeeded","selectAll","_fireSelectionChanged","getSelectedText","findWordBoundaryLeft","startFrom","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditingImpl","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","currentStart","currentEnd","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","textarea","_calcTextareaPosition","desiredPosition","compositionStart","cursorLocation","charHeight","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","_exitEditing","exitEditingImpl","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","newLineStyles","originalLineLength","isEndOfLine","someStyleIsCarryingOver","currentCharStyle","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","_selectionDirection","ITextKeyBehavior","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keyMap","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","updateAndFire","nextText","charCount","nextCharCount","removedText","removeFrom","removeTo","charDiff","textareaSelection","backDelete","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","bound","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","newValue","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","notALeftClick","ITextClickBehavior","_mouseDownHandler","_mouseDownHandlerBefore","doubleClickHandler","tripleClickHandler","__lastClickTime","__lastLastClickTime","__lastPointer","draggableTextDelegate","__newClickTime","newPointer","isTripleClick","__lastSelected","didDrag","mouseOffset","charLength","widthAfter","MOVE_CURSOR_UP","MOVE_CURSOR_DOWN","MOVE_CURSOR_LEFT","MOVE_CURSOR_RIGHT","EXIT_EDITING","iTextDefaultValues","cursorColor","caching","IText","setSelectionStart","_updateAndFire","setSelectionEnd","renderSelection","renderCursor","skipCaching","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","getCursorRenderingData","_renderSelection","dragSelection","startLine","endLine","startChar","endChar","realLineHeight","boxEnd","drawHeight","extraTop","drawWidth","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","cursorPosition","Textbox","dynamicMinWidth","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","splitByGrapheme","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","p2Number","_wrapText","desiredWidth","getGraphemeDataForRender","wrapped","wordsData","_wrapLine","infix","largestWordWidth","wordsOrGraphemes","wordSplit","word","graphemeArray","_measureWord","charOffset","_wordJoiners","reservedSpace","additionalSpace","infixWidth","lineJustStarted","wordWidth","getMinWidth","minWidth","linesToKeep","propNumber","ClipPathLayout","clipPathCenter","FixedLayout","ActiveSelectionLayoutManager","parents","Set","selectedObjects","ActiveSelection","multiSelectionStacking","findIndex","groups","childrenOverride","Canvas2dFilterBackend","applyFilters","filters","sourceElement","sourceWidth","sourceHeight","pipelineState","imageData","originalEl","originalImageData","filterBackend","applyTo","imageDataPostFilter","putImageData","WebGLFilterBackend","tileSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","dWidth","dHeight","resizeCanvasIfNeeded","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texture","texParameteri","texImage2D","uniqueId","evictCachesForKey","glCanvas","sourceY","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","imgData","ImageData","gpuInfo","renderer","vendor","ext","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","initFilterBackend","enableGLFiltering","getFilterBackend","setFilterBackend","backend","IMAGE_PROPS","FabricImage","setElement","_element","_element$classList","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","elementKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","imageRendering","imageSmoothing","getSvgSrc","origFill","filtered","srcFromAttribute","setSrc","minimumScale","minimumScaleTrigger","elementToFilter","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","pAR","preserveAspectRatio","pWidth","pHeight","rWidth","rHeight","f","rf","hydratedProps","fromURL","imageOptions","applyViewboxTransform","viewBoxAttr","widthAttr","heightAttr","missingViewBox","missingDimAttr","translateMatrix","widthDiff","heightDiff","parsedDim","pasedViewBox","createElementNS","firstChild","getTagName","node","tagName","svgInvalidAncestorsRegEx","getMultipleNodes","nodeNames","nodeList","nodeArray","getElementsByTagNameNS","gradientsAttrs","xlinkAttr","recursivelyParseGradientsXlink","_gradient$getAttribut","xLink","referencedGradient","children","referenceClone","cloneNode","tagArray","getCSSRules","allRules","styleContents","ruleObj","propertyValuePairs","pair","_rule","findTag","ElementsParser","clipPaths","regexUrl","gradientDefs","elList","getGradientDefs","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","storage","gradientDef","usingElement","exactOwner","clipPathElements","objTransformInv","clipPathTag","clipPathOwner","clipPathElement","enlivedClippath","clipRule","gTransform","isValidSvgTag","createEmptyResponse","allElements","async","parseSVGDocument","nodelist","skipAttributes","useElement","useAttributes","useAttrMap","xlink","href","referencedElement","clonedOriginal","originalAttributes","originalAttrMap","currentTrans","el3","setAttributeNS","childNodes","styleRecord","mergedStyles","entry","parseUseDirectives","descendants","hasInvalidAncestor","localClipPaths","elementParser","loadSVGFromString","parseFromString","loadSVGFromURL","xml","responseXML","parsedDoc","ACTION_NAME","createPolyPositionHandler","pointIndex","polyObject","polyActionHandler","poly","mouseLocalPosition","factoryPolyActionHandler","anchorPoint","anchorPointInParentPlane","createPolyActionHandler","calcPathPointPosition","pathObject","commandIndex","pathPositionHandler","pathActionHandler","movePathPoint","anchorCommand","PathPointControl","controlFill","controlStroke","PathControlPointControl","connectToCommandIndex","connectToPointIndex","connectionDashArray","commandType","createControl","commandIndexPos","pointIndexPos","isControlPoint","controlPointStyle","pointStyle","previousCommandType","indexFromPrevCommand","isWebGLPipelineState","isPutImageFaster","testContext","ArrayBuffer","testPipelineState","performance","now","drawImageTime","highPsourceCode","identityFragmentShader","BaseFilter","getFragmentSource","getVertexSource","createProgram","vertexSource","vertexShader","VERTEX_SHADER","program","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","attributeLocations","getAttributeLocations","getAttribLocation","locations","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","temp","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","_gl","_uniformLocations","createHelpLayer","helpLayer","defaultKeys","blendColorFragmentSource","screen","difference","lighten","darken","exclusion","tint","BlendColor","mode","tg","alpha1","oR","oG","oB","uniform4fv","uColor","mask","BlendImage","image","TEXTURE1","calculateMatrix","resources","blendImage","canvas1","blendData","uniform1i","uImage","uniformMatrix3fv","uTransformMatrix","filterOptions","enlivedImage","Blur","aspectRatio","horizontal","simpleBlur","blurLayer1","blurLayer2","canvas2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","uniform2fv","uDelta","blurScale","Brightness","brightness","uBrightness","colorMatrixDefaultValues","colorsOnly","ColorMatrix","constants","uniformMatrix4fv","uColorMatrix","uConstants","createColorMatrixFilter","_Class","newClass","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","Composed","subFilters","enlivedFilters","Contrast","contrast","contrastF","uContrast","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","Convolute","opaque","weights","side","halfSide","sw","sh","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uniform1fv","uMatrix","GAMMA","Gamma","gamma","rInv","gInv","bInv","rgbValues","rgb","uniform3fv","uGamma","lightness","luminosity","Grayscale","uMode","hueRotationDefaultValues","rotation","HueRotation","cosine","sine","aThird","aThirdSqtSin","OneMinusCos","Invert","invert","uInvert","uAlpha","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","uBlocksize","RemoveColor","lowC","highC","uLow","uHigh","useAlpha","Resize","uTaps","taps","getFilterWindow","tempScale","lanczosLobes","filterWindow","generateShader","getTaps","lobeFunction","lanczosCreate","applyToForWebgl","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","resizeType","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","dX","dY","tmpCanvas","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","Saturation","adjust","saturation","uSaturation","Vibrance","vibrance","amt","uVibrance"],"mappings":"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"}