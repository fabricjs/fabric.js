{"version":3,"file":"AnimationRegistry.mjs","sources":["../../../../src/util/animation/AnimationRegistry.ts"],"sourcesContent":["import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas),\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n"],"names":["AnimationRegistry","Array","remove","context","index","indexOf","splice","cancelAll","animations","forEach","animation","abort","cancelByCanvas","canvas","filter","_animation$target","target","cancelByTarget","runningAnimations"],"mappings":"AAIA;AACA;AACA;AACA,MAAMA,iBAAiB,SAASC,KAAK,CAAgB;AACnD;AACF;AACA;AACA;EACEC,MAAMA,CAACC,OAAsB,EAAE;AAC7B,IAAA,MAAMC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACF,OAAO,CAAC,CAAA;IACnCC,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAACE,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAA;AACrC,GAAA;;AAEA;AACF;AACA;AACEG,EAAAA,SAASA,GAAG;AACV,IAAA,MAAMC,UAAU,GAAG,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,CAAA;IACjCE,UAAU,CAACC,OAAO,CAAEC,SAAS,IAAKA,SAAS,CAACC,KAAK,EAAE,CAAC,CAAA;AACpD,IAAA,OAAOH,UAAU,CAAA;AACnB,GAAA;;AAEA;AACF;AACA;AACA;EACEI,cAAcA,CAACC,MAAoB,EAAE;IACnC,IAAI,CAACA,MAAM,EAAE;AACX,MAAA,OAAO,EAAE,CAAA;AACX,KAAA;AACA,IAAA,MAAML,UAAU,GAAG,IAAI,CAACM,MAAM,CAC3BJ,SAAS,IAAA;AAAA,MAAA,IAAAK,iBAAA,CAAA;MAAA,OACRL,SAAS,CAACM,MAAM,KAAKH,MAAM,IAC1B,OAAOH,SAAS,CAACM,MAAM,KAAK,QAAQ,IACnC,EAAAD,iBAAA,GAACL,SAAS,CAACM,MAAM,MAAA,IAAA,IAAAD,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,iBAAA,CAAoCF,MAAM,MAAKA,MAAO,CAAA;AAAA,KAC5D,CAAC,CAAA;IACDL,UAAU,CAACC,OAAO,CAAEC,SAAS,IAAKA,SAAS,CAACC,KAAK,EAAE,CAAC,CAAA;AACpD,IAAA,OAAOH,UAAU,CAAA;AACnB,GAAA;;AAEA;AACF;AACA;AACA;EACES,cAAcA,CAACD,MAA+B,EAAE;IAC9C,IAAI,CAACA,MAAM,EAAE;AACX,MAAA,OAAO,EAAE,CAAA;AACX,KAAA;AACA,IAAA,MAAMR,UAAU,GAAG,IAAI,CAACM,MAAM,CAAEJ,SAAS,IAAKA,SAAS,CAACM,MAAM,KAAKA,MAAM,CAAC,CAAA;IAC1ER,UAAU,CAACC,OAAO,CAAEC,SAAS,IAAKA,SAAS,CAACC,KAAK,EAAE,CAAC,CAAA;AACpD,IAAA,OAAOH,UAAU,CAAA;AACnB,GAAA;AACF,CAAA;MAEaU,iBAAiB,GAAG,IAAIlB,iBAAiB;;;;"}