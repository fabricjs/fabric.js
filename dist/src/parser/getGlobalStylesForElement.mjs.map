{"version":3,"file":"getGlobalStylesForElement.mjs","sources":["../../../src/parser/getGlobalStylesForElement.ts"],"sourcesContent":["import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {},\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n"],"names":["getGlobalStylesForElement","element","cssRules","arguments","length","undefined","styles","rule","elementMatchesRule","split","_objectSpread"],"mappings":";;;AAGA;AACA;AACA;;AAEO,SAASA,yBAAyBA,CACvCC,OAAoB,EAEpB;AAAA,EAAA,IADAC,QAAkB,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAEvB,IAAIG,MAA8B,GAAG,EAAE,CAAA;AACvC,EAAA,KAAK,MAAMC,IAAI,IAAIL,QAAQ,EAAE;IAC3B,IAAIM,kBAAkB,CAACP,OAAO,EAAEM,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;MAChDH,MAAM,GAAAI,cAAA,CAAAA,cAAA,CAAA,EAAA,EACDJ,MAAM,CAAA,EACNJ,QAAQ,CAACK,IAAI,CAAC,CAClB,CAAA;AACH,KAAA;AACF,GAAA;AACA,EAAA,OAAOD,MAAM,CAAA;AACf;;;;"}