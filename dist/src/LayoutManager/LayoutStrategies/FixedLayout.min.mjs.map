{"version":3,"file":"FixedLayout.min.mjs","sources":["../../../../src/LayoutManager/LayoutStrategies/FixedLayout.ts"],"sourcesContent":["import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n"],"names":["FixedLayout","LayoutStrategy","getInitialSize","_ref","_ref2","target","size","Point","width","x","height","y","_defineProperty","classRegistry","setClass"],"mappings":"uPAYO,MAAMA,UAAoBC,EAM/BC,cAAAA,CAAcC,EAAAC,GAGL,IAFPC,OAAEA,GAA2DF,GAC7DG,KAAEA,GAAqDF,EAEvD,OAAO,IAAIG,EAAMF,EAAOG,OAASF,EAAKG,EAAGJ,EAAOK,QAAUJ,EAAKK,EACjE,EACDC,EAZYZ,EAAW,OACC,SAazBa,EAAcC,SAASd"}