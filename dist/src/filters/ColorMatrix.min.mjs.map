{"version":3,"file":"ColorMatrix.min.mjs","sources":["../../../src/filters/ColorMatrix.ts"],"sourcesContent":["import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TMatColorMatrix,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\n\ntype ColorMatrixOwnProps = {\n  matrix: TMatColorMatrix;\n  colorsOnly: boolean;\n};\n\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n  colorsOnly: true,\n};\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix<\n  Name extends string = 'ColorMatrix',\n  OwnProps extends object = ColorMatrixOwnProps,\n> extends BaseFilter<Name, OwnProps> {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: ColorMatrixOwnProps['matrix'];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      if (colorsOnly) {\n        data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n        data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      } else {\n        const a = data[i + 3];\n        data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n        data[i + 2] =\n          r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n\n  toObject() {\n    return {\n      ...super.toObject(),\n      matrix: [...this.matrix] as TMatColorMatrix,\n    };\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n"],"names":["colorMatrixDefaultValues","matrix","colorsOnly","ColorMatrix","BaseFilter","getFragmentSource","fragmentSource","applyTo2d","options","data","imageData","m","this","i","length","r","g","b","a","sendUniformData","gl","uniformLocations","constants","uniformMatrix4fv","uColorMatrix","uniform4fv","uConstants","toObject","_objectSpread","super","_defineProperty","classRegistry","setClass"],"mappings":"+QAcO,MAAMA,EAAgD,CAC3DC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClEC,YAAY,GAmBP,MAAMC,UAGHC,EAyBRC,iBAAAA,GACE,OAAOC,CACT,CAQAC,SAAAA,CAAUC,GACR,MACEC,EADgBD,EAAQE,UACPD,KACjBE,EAAIC,KAAKX,OACTC,EAAaU,KAAKV,WAEpB,IAAK,IAAIW,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,GAAK,EAAG,CACvC,MAAME,EAAIN,EAAKI,GACTG,EAAIP,EAAKI,EAAI,GACbI,EAAIR,EAAKI,EAAI,GACnB,GAAIX,EACFO,EAAKI,GAAKE,EAAIJ,EAAE,GAAKK,EAAIL,EAAE,GAAKM,EAAIN,EAAE,GAAY,IAAPA,EAAE,GAC7CF,EAAKI,EAAI,GAAKE,EAAIJ,EAAE,GAAKK,EAAIL,EAAE,GAAKM,EAAIN,EAAE,GAAY,IAAPA,EAAE,GACjDF,EAAKI,EAAI,GAAKE,EAAIJ,EAAE,IAAMK,EAAIL,EAAE,IAAMM,EAAIN,EAAE,IAAc,IAARA,EAAE,QAC/C,CACL,MAAMO,EAAIT,EAAKI,EAAI,GACnBJ,EAAKI,GAAKE,EAAIJ,EAAE,GAAKK,EAAIL,EAAE,GAAKM,EAAIN,EAAE,GAAKO,EAAIP,EAAE,GAAY,IAAPA,EAAE,GACxDF,EAAKI,EAAI,GAAKE,EAAIJ,EAAE,GAAKK,EAAIL,EAAE,GAAKM,EAAIN,EAAE,GAAKO,EAAIP,EAAE,GAAY,IAAPA,EAAE,GAC5DF,EAAKI,EAAI,GACPE,EAAIJ,EAAE,IAAMK,EAAIL,EAAE,IAAMM,EAAIN,EAAE,IAAMO,EAAIP,EAAE,IAAc,IAARA,EAAE,IACpDF,EAAKI,EAAI,GACPE,EAAIJ,EAAE,IAAMK,EAAIL,EAAE,IAAMM,EAAIN,EAAE,IAAMO,EAAIP,EAAE,IAAc,IAARA,EAAE,GACtD,CACF,CACF,CAQAQ,eAAAA,CACEC,EACAC,GAEA,MAAMV,EAAIC,KAAKX,OACbA,EAAS,CACPU,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,GACFA,EAAE,IACFA,EAAE,IACFA,EAAE,IACFA,EAAE,IACFA,EAAE,IACFA,EAAE,IACFA,EAAE,IACFA,EAAE,KAEJW,EAAY,CAACX,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAKA,EAAE,KACpCS,EAAGG,iBAAiBF,EAAiBG,cAAc,EAAOvB,GAC1DmB,EAAGK,WAAWJ,EAAiBK,WAAYJ,EAC7C,CAEAK,QAAAA,GACE,OAAAC,EAAAA,EAAA,CAAA,EACKC,MAAMF,YAAU,GAAA,CACnB1B,OAAQ,IAAIW,KAAKX,SAErB,EAzFA6B,EAdW3B,EAAW,OAsBR,eAAa2B,EAtBhB3B,EAAW,WAwBJH,GAAwB8B,EAxB/B3B,EAAW,mBA0BI,CAAC,eAAgB,eAgF7C4B,EAAcC,SAAS7B"}