import{defineProperty as t}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{BaseFilter as s}from"./BaseFilter.min.mjs";import{isWebGLPipelineState as e}from"./utils.min.mjs";import{classRegistry as r}from"../ClassRegistry.min.mjs";class i extends s{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),this.subFilters=t.subFilters||[]}applyTo(t){e(t)&&(t.passes+=this.subFilters.length-1),this.subFilters.forEach((s=>{s.applyTo(t)}))}toObject(){return{type:this.type,subFilters:this.subFilters.map((t=>t.toObject()))}}isNeutralState(){return!this.subFilters.some((t=>!t.isNeutralState()))}static fromObject(t,s){return Promise.all((t.subFilters||[]).map((t=>r.getClass(t.type).fromObject(t,s)))).then((t=>new this({subFilters:t})))}}t(i,"type","Composed"),r.setClass(i);export{i as Composed};
//# sourceMappingURL=Composed.min.mjs.map
