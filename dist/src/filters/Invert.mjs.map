{"version":3,"file":"Invert.mjs","sources":["../../../src/filters/Invert.ts"],"sourcesContent":["import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport type InvertOwnProps = {\n  alpha: boolean;\n  invert: boolean;\n};\n\nexport const invertDefaultValues: InvertOwnProps = {\n  alpha: false,\n  invert: true,\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: InvertOwnProps['alpha'];\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: InvertOwnProps['invert'];\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  static uniformLocations = ['uInvert', 'uAlpha'];\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n"],"names":["invertDefaultValues","alpha","invert","Invert","BaseFilter","applyTo2d","_ref","imageData","data","i","length","getFragmentSource","fragmentSource","isNeutralState","sendUniformData","gl","uniformLocations","uniform1i","uInvert","Number","uAlpha","_defineProperty","classRegistry","setClass"],"mappings":";;;;;AAUO,MAAMA,mBAAmC,GAAG;AACjDC,EAAAA,KAAK,EAAE,KAAK;AACZC,EAAAA,MAAM,EAAE,IAAA;AACV,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,MAAM,SAASC,UAAU,CAA2B;AAqB/D;AACF;AACA;AACA;AACA;AACA;EACEC,SAASA,CAAAC,IAAA,EAA4C;IAAA,IAA3C;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAAA;AAAK,OAAA;AAAoB,KAAC,GAAAF,IAAA,CAAA;AACjD,IAAA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACvCD,IAAI,CAACC,CAAC,CAAC,GAAG,GAAG,GAAGD,IAAI,CAACC,CAAC,CAAC,CAAA;AACvBD,MAAAA,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,CAAA;AAC/BD,MAAAA,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,CAAA;MAE/B,IAAI,IAAI,CAACR,KAAK,EAAE;AACdO,QAAAA,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGD,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,CAAA;AACjC,OAAA;AACF,KAAA;AACF,GAAA;AAEUE,EAAAA,iBAAiBA,GAAW;AACpC,IAAA,OAAOC,cAAc,CAAA;AACvB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAcA,GAAG;IACf,OAAO,CAAC,IAAI,CAACX,MAAM,CAAA;AACrB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEY,EAAAA,eAAeA,CACbC,EAAyB,EACzBC,gBAA0C,EAC1C;AACAD,IAAAA,EAAE,CAACE,SAAS,CAACD,gBAAgB,CAACE,OAAO,EAAEC,MAAM,CAAC,IAAI,CAACjB,MAAM,CAAC,CAAC,CAAA;AAC3Da,IAAAA,EAAE,CAACE,SAAS,CAACD,gBAAgB,CAACI,MAAM,EAAED,MAAM,CAAC,IAAI,CAAClB,KAAK,CAAC,CAAC,CAAA;AAC3D,GAAA;AACF,CAAA;AAjEE;AACF;AACA;AACA;AACA;AAGE;AACF;AACA;AACA;AACA;AAJEoB,eAAA,CARWlB,MAAM,EAAA,MAAA,EAeH,QAAQ,CAAA,CAAA;AAAAkB,eAAA,CAfXlB,MAAM,EAAA,UAAA,EAiBCH,mBAAmB,CAAA,CAAA;AAAAqB,eAAA,CAjB1BlB,MAAM,EAAA,kBAAA,EAmBS,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA,CAAA;AAiDjDmB,aAAa,CAACC,QAAQ,CAACpB,MAAM,CAAC;;;;"}