{"version":3,"file":"Contrast.min.mjs","sources":["../../../src/filters/Contrast.ts"],"sourcesContent":["import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\n\ntype ContrastOwnProps = {\n  contrast: number;\n};\n\nexport const contrastDefaultValues: ContrastOwnProps = {\n  contrast: 0,\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: ContrastOwnProps['contrast'];\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  static uniformLocations = ['uContrast'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  isNeutralState() {\n    return this.contrast === 0;\n  }\n\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n"],"names":["contrastDefaultValues","contrast","Contrast","BaseFilter","getFragmentSource","fragmentSource","isNeutralState","this","applyTo2d","_ref","imageData","data","Math","floor","contrastF","i","length","sendUniformData","gl","uniformLocations","uniform1f","uContrast","_defineProperty","classRegistry","setClass"],"mappings":"0PASO,MAAMA,EAA0C,CACrDC,SAAU,GAYL,MAAMC,UAAiBC,EAc5BC,iBAAAA,GACE,OAAOC,CACT,CAEAC,cAAAA,GACE,OAAyB,IAAlBC,KAAKN,QACd,CAQAO,SAAAA,CAASC,GAA4C,IAAzCC,WAAWC,KAAEA,IAA0BF,EACjD,MAAMR,EAAWW,KAAKC,MAAsB,IAAhBN,KAAKN,UAC/Ba,EAAa,KAAOb,EAAW,MAAS,KAAO,IAAMA,IAEvD,IAAK,IAAIc,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,GAAK,EACpCJ,EAAKI,GAAKD,GAAaH,EAAKI,GAAK,KAAO,IACxCJ,EAAKI,EAAI,GAAKD,GAAaH,EAAKI,EAAI,GAAK,KAAO,IAChDJ,EAAKI,EAAI,GAAKD,GAAaH,EAAKI,EAAI,GAAK,KAAO,GAEpD,CAQAE,eAAAA,CACEC,EACAC,GAEAD,EAAGE,UAAUD,EAAiBE,UAAWd,KAAKN,SAChD,EAjDAqB,EADWpB,EAAQ,OAQL,YAAUoB,EARbpB,EAAQ,WAUDF,GAAqBsB,EAV5BpB,EAYe,mBAAA,CAAC,cAyC7BqB,EAAcC,SAAStB"}