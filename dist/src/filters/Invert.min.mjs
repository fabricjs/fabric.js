import{defineProperty as t}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{BaseFilter as r}from"./BaseFilter.min.mjs";import{classRegistry as e}from"../ClassRegistry.min.mjs";import{fragmentSource as i}from"./shaders/invert.min.mjs";const a={alpha:!1,invert:!0};class s extends r{applyTo2d(t){let{imageData:{data:r}}=t;for(let t=0;t<r.length;t+=4)r[t]=255-r[t],r[t+1]=255-r[t+1],r[t+2]=255-r[t+2],this.alpha&&(r[t+3]=255-r[t+3])}getFragmentSource(){return i}isNeutralState(){return!this.invert}sendUniformData(t,r){t.uniform1i(r.uInvert,Number(this.invert)),t.uniform1i(r.uAlpha,Number(this.alpha))}}t(s,"type","Invert"),t(s,"defaults",a),t(s,"uniformLocations",["uInvert","uAlpha"]),e.setClass(s);export{s as Invert,a as invertDefaultValues};
//# sourceMappingURL=Invert.min.mjs.map
