{"version":3,"file":"Gradient.mjs","sources":["../../../src/gradient/Gradient.ts"],"sourcesContent":["import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords },\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n',\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color,\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n"],"names":["Gradient","constructor","options","type","gradientUnits","coords","colorStops","offsetX","offsetY","gradientTransform","id","Object","assign","_objectSpread","radialDefaultCoords","linearDefaultCoords","concat","uid","addColorStop","position","color","Color","push","offset","parseFloat","toRgb","opacity","getAlpha","toObject","propertiesToInclude","pick","map","colorStop","undefined","toSVG","object","additionalTransform","preTransform","arguments","length","markup","transform","iMatrix","sort","a","b","width","height","isPath","pathOffset","x","y","commonAttributes","matrixToSVG","join","x1","y1","x2","y2","r1","r2","needsSwap","reverse","forEach","minRadius","Math","min","maxRadius","max","percentageShift","_ref","toLive","ctx","gradient","createLinearGradient","createRadialGradient","_ref2","setAlpha","toRgba","fromObject","fromElement","el","instance","svgOptions","parseGradientUnits","center","_findCenterFromElement","getAttribute","parseType","parseCoords","viewBoxWidth","viewBoxHeight","parseColorStops","parseTransformAttribute","_defineProperty","classRegistry","setClass"],"mappings":"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"}